{"version":3,"sources":["webpack:///./src/main/js/apps/coding-rules/components/ActivationFormModal.tsx","webpack:///./src/main/js/components/shared/SeverityHelper.tsx"],"names":["props","mounted","getParams","activation","rule","params","param","key","defaultValue","value","getQualityProfilesWithDepth","profiles","filter","profile","isBuiltIn","actions","edit","language","lang","map","depth","handleFormSubmit","event","preventDefault","setState","submitting","data","state","severity","then","onDone","onClose","handleParameterChange","currentTarget","name","handleProfileChange","handleSeverityChange","renderSeverityOption","profilesWithDepth","length","componentDidMount","this","componentWillUnmount","render","isCustomRule","templateKey","activeInAllProfiles","isUpdateMode","contentLabel","modalHeader","onRequestClose","size","onSubmit","className","variant","clearable","disabled","onChange","options","label","repeat","optionRenderer","searchable","valueRenderer","title","type","placeholder","rows","dangerouslySetInnerHTML","__html","htmlDesc","onClick","SeverityHelper"],"mappings":"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","file":"js/356.1613385090031.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { sanitize } from 'dompurify';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { activateRule, Profile } from '../../../api/quality-profiles';\nimport SeverityHelper from '../../../components/shared/SeverityHelper';\nimport { SEVERITIES } from '../../../helpers/constants';\nimport { sortProfiles } from '../../quality-profiles/utils';\n\ninterface Props {\n  activation?: T.RuleActivation;\n  modalHeader: string;\n  onClose: () => void;\n  onDone: (severity: string) => Promise<void>;\n  profiles: Profile[];\n  rule: T.Rule | T.RuleDetails;\n}\n\ninterface State {\n  params: T.Dict<string>;\n  profile: string;\n  severity: string;\n  submitting: boolean;\n}\n\nexport default class ActivationFormModal extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    const profilesWithDepth = this.getQualityProfilesWithDepth(props);\n    this.state = {\n      params: this.getParams(props),\n      profile: profilesWithDepth.length > 0 ? profilesWithDepth[0].key : '',\n      severity: props.activation ? props.activation.severity : props.rule.severity,\n      submitting: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getParams = ({ activation, rule } = this.props) => {\n    const params: T.Dict<string> = {};\n    if (rule && rule.params) {\n      for (const param of rule.params) {\n        params[param.key] = param.defaultValue || '';\n      }\n      if (activation && activation.params) {\n        for (const param of activation.params) {\n          params[param.key] = param.value;\n        }\n      }\n    }\n    return params;\n  };\n\n  // Choose QP which a user can administrate, which are the same language and which are not built-in\n  getQualityProfilesWithDepth = ({ profiles } = this.props) => {\n    return sortProfiles(\n      profiles.filter(\n        profile =>\n          !profile.isBuiltIn &&\n          profile.actions &&\n          profile.actions.edit &&\n          profile.language === this.props.rule.lang\n      )\n    ).map(profile => ({\n      ...profile,\n      // Decrease depth by 1, so the top level starts at 0\n      depth: profile.depth - 1\n    }));\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    const data = {\n      key: this.state.profile,\n      params: this.state.params,\n      rule: this.props.rule.key,\n      severity: this.state.severity\n    };\n    activateRule(data)\n      .then(() => this.props.onDone(data.severity))\n      .then(\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n            this.props.onClose();\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n          }\n        }\n      );\n  };\n\n  handleParameterChange = (event: React.SyntheticEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.currentTarget;\n    this.setState((state: State) => ({ params: { ...state.params, [name]: value } }));\n  };\n\n  handleProfileChange = ({ value }: { value: string }) => {\n    this.setState({ profile: value });\n  };\n\n  handleSeverityChange = ({ value }: { value: string }) => {\n    this.setState({ severity: value });\n  };\n\n  renderSeverityOption = ({ value }: { value: string }) => {\n    return <SeverityHelper severity={value} />;\n  };\n\n  render() {\n    const { activation, rule } = this.props;\n    const { profile, severity, submitting } = this.state;\n    const { params = [] } = rule;\n    const profilesWithDepth = this.getQualityProfilesWithDepth();\n    const isCustomRule = !!(rule as T.RuleDetails).templateKey;\n    const activeInAllProfiles = profilesWithDepth.length <= 0;\n    const isUpdateMode = !!activation;\n\n    return (\n      <Modal contentLabel={this.props.modalHeader} onRequestClose={this.props.onClose} size=\"small\">\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{this.props.modalHeader}</h2>\n          </div>\n\n          <div className={classNames('modal-body', { 'modal-container': params.length > 0 })}>\n            {!isUpdateMode && activeInAllProfiles && (\n              <Alert variant=\"info\">{translate('coding_rules.active_in_all_profiles')}</Alert>\n            )}\n\n            <div className=\"modal-field\">\n              <label>{translate('coding_rules.quality_profile')}</label>\n              <Select\n                className=\"js-profile\"\n                clearable={false}\n                disabled={submitting || profilesWithDepth.length === 1}\n                onChange={this.handleProfileChange}\n                options={profilesWithDepth.map(profile => ({\n                  label: '   '.repeat(profile.depth) + profile.name,\n                  value: profile.key\n                }))}\n                value={profile}\n              />\n            </div>\n            <div className=\"modal-field\">\n              <label>{translate('severity')}</label>\n              <Select\n                className=\"js-severity\"\n                clearable={false}\n                disabled={submitting}\n                onChange={this.handleSeverityChange}\n                optionRenderer={this.renderSeverityOption}\n                options={SEVERITIES.map(severity => ({\n                  label: translate('severity', severity),\n                  value: severity\n                }))}\n                searchable={false}\n                value={severity}\n                valueRenderer={this.renderSeverityOption}\n              />\n            </div>\n            {isCustomRule ? (\n              <div className=\"modal-field\">\n                <p className=\"note\">{translate('coding_rules.custom_rule.activation_notice')}</p>\n              </div>\n            ) : (\n              params.map(param => (\n                <div className=\"modal-field\" key={param.key}>\n                  <label title={param.key}>{param.key}</label>\n                  {param.type === 'TEXT' ? (\n                    <textarea\n                      disabled={submitting}\n                      name={param.key}\n                      onChange={this.handleParameterChange}\n                      placeholder={param.defaultValue}\n                      rows={3}\n                      value={this.state.params[param.key] || ''}\n                    />\n                  ) : (\n                    <input\n                      disabled={submitting}\n                      name={param.key}\n                      onChange={this.handleParameterChange}\n                      placeholder={param.defaultValue}\n                      type=\"text\"\n                      value={this.state.params[param.key] || ''}\n                    />\n                  )}\n                  <div\n                    className=\"note\"\n                    // eslint-disable-next-line react/no-danger\n                    dangerouslySetInnerHTML={{ __html: sanitize(param.htmlDesc || '') }}\n                  />\n                </div>\n              ))\n            )}\n          </div>\n\n          <footer className=\"modal-foot\">\n            {submitting && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitting || activeInAllProfiles}>\n              {isUpdateMode ? translate('save') : translate('coding_rules.activate')}\n            </SubmitButton>\n            <ResetButtonLink disabled={submitting} onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SeverityIcon from 'sonar-ui-common/components/icons/SeverityIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  className?: string;\n  severity: string;\n}\n\nexport default function SeverityHelper({ className, severity }: Props) {\n  if (!severity) {\n    return null;\n  }\n  return (\n    <span className={className}>\n      <SeverityIcon className=\"little-spacer-right\" severity={severity} />\n      {translate('severity', severity)}\n    </span>\n  );\n}\n"],"sourceRoot":""}