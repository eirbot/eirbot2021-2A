{"version":3,"sources":["webpack:///./src/main/js/api/newCodePeriod.ts","webpack:///./src/main/js/apps/projectBaseline/utils.ts","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingDays.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingPreviousVersion.tsx","webpack:///./src/main/js/apps/settings/styles.css?cb9e","webpack:///./src/main/js/apps/settings/styles.css","webpack:///./src/main/js/apps/settings/store/actions.ts","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionBox.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormModalRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/CreationTooltip.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormField.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AzureForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AzureTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/DeleteModal.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionActions.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForBoolean.tsx","webpack:///./src/main/js/apps/settings/components/inputs/SimpleInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForNumber.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForPassword.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForSingleSelectList.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForString.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForText.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PrimitiveInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/MultiValueInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PropertySetInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/Input.tsx","webpack:///./src/main/js/apps/settings/components/Definition.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/EmailForm.tsx","webpack:///./src/main/js/apps/settings/components/SubCategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/CategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GithubForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GithubTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GitlabForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GitlabTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegrationRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/utils.ts","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegration.tsx","webpack:///./src/main/js/apps/settings/components/AnalysisScope.tsx","webpack:///./src/main/js/apps/settings/components/CategoryOverrides.ts","webpack:///./src/main/js/apps/settings/components/Languages.tsx","webpack:///./src/main/js/apps/settings/components/NewCodePeriod.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/AlmSpecificForm.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBindingRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBinding.tsx","webpack:///./src/main/js/apps/settings/components/AdditionalCategories.tsx","webpack:///./src/main/js/apps/settings/components/AllCategoriesList.tsx","webpack:///./src/main/js/apps/settings/components/PageHeader.tsx","webpack:///./src/main/js/apps/settings/components/AppContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/common/ScreenPositionHelper.tsx","webpack:///./src/main/js/api/alm-settings.ts","webpack:///./src/main/js/api/settings.ts","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts"],"names":["getNewCodePeriod","data","catch","setNewCodePeriod","resetNewCodePeriod","listBranchesNewCodePeriod","validateDays","days","parsed","parseInt","length","isNaN","String","getSettingValue","analysis","referenceBranch","validateSetting","state","currentSetting","currentSettingValue","overrideGeneralSetting","selected","isChanged","undefined","isValid","BaselineSettingDays","props","className","disabled","onChangeDays","onSelect","onClick","title","error","id","isInvalid","label","required","onChange","e","currentTarget","type","value","BaselineSettingPreviousVersion","isDefault","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","handleError","key","dispatch","response","then","message","Promise","reject","DEFAULT_STATUS","alertSuccess","failureMessage","Validating","STATUS_ICON","Failure","Success","AlmBindingDefinitionBox","alm","branchesEnabled","definition","multipleDefinitions","status","prDecoFeatureTitle","GitLab","prDecoFeatureDescription","onEdit","onDelete","url","Warning","overlay","defaultMessage","values","link","href","developer","sourceEdition","community","rel","target","getPRDecorationFeatureStatus","includes","getImportFeatureStatus","Alert","variant","onCheck","AlmBindingDefinitionFormModalRenderer","action","children","help","isSecondInstance","header","onClose","onCancel","onSubmit","size","onCloseClick","onFormSubmit","submitting","loading","canSubmit","handleCancel","setState","formData","bindingDefinition","touched","handleDelete","handleEdit","handleFieldChange","fieldId","handleFormSubmit","optionalFields","Object","some","v","componentDidUpdate","prevProps","this","render","Boolean","onFieldChange","withAppState","edition","preventCreation","enterprise","mouseLeaveDelay","AlmTabRenderer","definitions","definitionStatus","editedDefinition","form","loadingAlmDefinitions","loadingProjectCount","multipleAlmEnabled","onCreate","map","def","BitbucketCloud","mounted","success","handleCreate","defaultBinding","definitionKey","find","d","handleSubmit","config","originalKey","call","updateConfiguration","newKey","createConfiguration","onUpdateDefinitions","componentDidMount","componentWillUnmount","AlmBindingDefinitionFormField","autoFocus","isTextArea","maxLength","optional","overwriteOnly","propKey","showField","setShowField","htmlFor","placement","rows","name","AzureForm","personalAccessToken","AzureTab","Azure","childProps","to","BitbucketForm","isCreating","onSelectVariant","BitbucketServer","example","workspace","clientId","clientSecret","BitbucketTabRenderer","DEFAULT_SERVER_BINDING","DEFAULT_CLOUD_BINDING","handleSelectVariant","DeleteModal","projectCount","confirmButtonText","confirmData","isDestructive","onConfirm","showProjectCountWarning","reseting","handleClose","handleReset","onReset","renderModal","contentLabel","onRequestClose","setting","changedValue","hasValueChanged","hasValueToResetTo","hasBeenChangedToEmptyValue","showReset","style","lineHeight","hasError","onSave","InputForBoolean","displayedValue","handleInputChange","event","handleKeyDown","keyCode","onKeyDown","InputForNumber","changing","handleChangeClick","componentWillReceiveProps","nextProps","renderInput","autoComplete","fill","gray60","option","clearable","InputForString","typeMapping","STRING","TEXT","PASSWORD","BOOLEAN","INTEGER","LONG","FLOAT","other","InputComponent","ensureValue","handleSingleInputChange","index","newValue","splice","handleDeleteValue","isLast","multiValues","fieldKey","emptyValue","newFields","renderFields","fieldValues","fields","field","width","minWidth","marginTop","description","Input","handleChange","clearTimeout","timeout","changeValue","handleCheck","component","componentKey","resetValue","cancelChange","safeSetState","window","setTimeout","passValidation","checkValue","handleSave","saveValue","changes","validationMessage","propertyName","effectiveValue","dangerouslySetInnerHTML","__html","mapDispatchToProps","getState","defaultValue","keys","ownProps","DefinitionsList","settings","preventDefault","recipient","subject","onRecipientChange","onSubjectChange","onMessageChange","currentUser","email","withCurrentUser","renderEmailForm","subCategoryKey","category","fetchValues","prevKeys","join","bySubCategory","subCategories","sortedSubCategories","subCategory","toLowerCase","filteredSubCategories","filter","c","GithubForm","appId","privateKey","GithubTab","GitHub","CategoryDefinitionsList","GitlabForm","GitlabTab","tabs","alt","height","src","requiresBranchesEnabled","AlmIntegrationRenderer","definitionKeyForDeletion","currentAlm","onSelectAlm","tab","azure","bitbucket","bitbucketcloud","github","gitlab","onConfirmDelete","ALM_KEY_LIST","deleteConfiguration","fetchPullRequestDecorationSetting","handleSelectAlm","location","query","forEach","appState","withRouter","AnalysisScope","selectedCategory","abap","apex","cobol","css","flex","go","html","java","javascript","kotlin","php","python","rpg","ruby","scala","swift","typescript","xml","categories","router","lowerCasedLanguagesCategory","lowerCasedSelectedCategory","availableLanguages","originalValue","selectedLanguage","getLanguages","newOption","placeholder","saving","onSelectDays","onSelectSetting","fetchNewCodePeriodSetting","renderLabel","helpParams","renderBooleanField","inputExtra","renderField","AlmSpecificForm","repository","slug","summaryCommentEnabled","monorepo","monorepoEnabled","renderMonoRepoFieldWithDocLink","docLink","doc_link","display","renderMonoRepoField","optionRenderer","instance","PRDecorationBindingRenderer","instances","isConfigured","autosize","menuContainerStyle","maxWidth","searchable","valueKey","valueRenderer","REQUIRED_FIELDS_BY_ALM","fetchDefinitions","project","all","getProjectBinding","originalData","newFormData","validateForm","orignalData","catchError","additionalFields","submitProjectAlmBinding","isDataSame","reduce","result","NotFound","throwGlobalError","almSpecificFields","almSetting","projectName","repositoryName","oKey","oRepository","oSlug","osummaryCommentEnabled","datacenter","ADDITIONAL_CATEGORIES","renderComponent","availableGlobally","availableForProject","displayTab","defaultCategory","pathname","categoriesWithName","concat","sortedCategories","active","PageHeader","InstanceMessage","fetchSettings","stopLoading","originalCategory","foundAdditionalCategory","isProjectSettings","shouldRenderAdditionalCategory","Suggestions","suggestions","defer","ScreenPositionHelper","top","AllCategoriesList","filtered","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","getPosition","containerPos","container","getBoundingClientRect","pageYOffset","left","pageXOffset","debouncedOnResize","forceUpdate","addEventListener","removeEventListener","ref","getAlmDefinitions","getAlmDefinitionsNoCatch","getAlmSettings","validateAlmSettings","BadRequest","createGithubConfiguration","updateGithubConfiguration","createAzureConfiguration","updateAzureConfiguration","createBitbucketConfiguration","updateBitbucketConfiguration","createBitbucketCloudConfiguration","updateBitbucketCloudConfiguration","createGitlabConfiguration","updateGitlabConfiguration","countBindedProjects","getProjectAlmBinding","deleteProjectAlmBinding","setProjectAzureBinding","setProjectBitbucketBinding","setProjectBitbucketCloudBinding","setProjectGithubBinding","setProjectGitlabBinding","getDefinitions","r","getValues","setSettingValue","JSON","stringify","resetSettingValue","sendTestEmail","checkSecretKey","generateSecretKey","encryptValue","ALM_INTEGRATION","ANALYSIS_SCOPE_CATEGORY","LANGUAGES_CATEGORY","NEW_CODE_PERIOD_CATEGORY","PULL_REQUEST_DECORATION_BINDING_CATEGORY"],"mappings":"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","file":"js/310.1613385090031.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNewCodePeriod(data?: {\n  project?: string;\n  branch?: string;\n}): Promise<T.Omit<T.NewCodePeriod, 'effectiveValue'>> {\n  return getJSON('/api/new_code_periods/show', data).catch(throwGlobalError);\n}\n\nexport function setNewCodePeriod(data: {\n  project?: string;\n  branch?: string;\n  type: T.NewCodePeriodSettingType;\n  value?: string;\n}): Promise<void> {\n  return post('/api/new_code_periods/set', data).catch(throwGlobalError);\n}\n\nexport function resetNewCodePeriod(data: { project?: string; branch?: string }): Promise<void> {\n  return post('/api/new_code_periods/unset', data).catch(throwGlobalError);\n}\n\nexport function listBranchesNewCodePeriod(data: {\n  project: string;\n}): Promise<{ newCodePeriods: T.NewCodePeriodBranch[] }> {\n  return getJSON('/api/new_code_periods/list', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function validateDays(days: string) {\n  const parsed = parseInt(days, 10);\n\n  return !(days.length < 1 || isNaN(parsed) || parsed < 1 || String(parsed) !== days);\n}\n\nexport function getSettingValue({\n  analysis,\n  days,\n  referenceBranch,\n  type\n}: {\n  analysis?: string;\n  days?: string;\n  referenceBranch?: string;\n  type?: T.NewCodePeriodSettingType;\n}) {\n  switch (type) {\n    case 'NUMBER_OF_DAYS':\n      return days;\n    case 'REFERENCE_BRANCH':\n      return referenceBranch;\n    case 'SPECIFIC_ANALYSIS':\n      return analysis;\n    default:\n      return undefined;\n  }\n}\n\nexport function validateSetting(state: {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  overrideGeneralSetting?: boolean;\n  referenceBranch?: string;\n  selected?: T.NewCodePeriodSettingType;\n}) {\n  const {\n    analysis = '',\n    currentSetting,\n    currentSettingValue,\n    days,\n    overrideGeneralSetting,\n    referenceBranch = '',\n    selected\n  } = state;\n\n  let isChanged;\n  if (!currentSetting && overrideGeneralSetting !== undefined) {\n    isChanged = overrideGeneralSetting;\n  } else {\n    isChanged =\n      overrideGeneralSetting === false ||\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && days !== currentSettingValue) ||\n      (selected === 'SPECIFIC_ANALYSIS' && analysis !== currentSettingValue) ||\n      (selected === 'REFERENCE_BRANCH' && referenceBranch !== currentSettingValue);\n  }\n\n  const isValid =\n    overrideGeneralSetting === false ||\n    selected === 'PREVIOUS_VERSION' ||\n    (selected === 'SPECIFIC_ANALYSIS' && analysis.length > 0) ||\n    (selected === 'NUMBER_OF_DAYS' && validateDays(days)) ||\n    (selected === 'REFERENCE_BRANCH' && referenceBranch.length > 0);\n\n  return { isChanged, isValid };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  days: string;\n  disabled?: boolean;\n  isChanged: boolean;\n  isValid: boolean;\n  onChangeDays: (value: string) => void;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingDays(props: Props) {\n  const { className, days, disabled, isChanged, isValid, onChangeDays, onSelect, selected } = props;\n  return (\n    <RadioCard\n      className={className}\n      disabled={disabled}\n      onClick={() => onSelect('NUMBER_OF_DAYS')}\n      selected={selected}\n      title={translate('baseline.number_days')}>\n      <>\n        <p className=\"big-spacer-bottom\">{translate('baseline.number_days.description')}</p>\n        {selected && (\n          <ValidationInput\n            error={undefined}\n            id=\"baseline_number_of_days\"\n            isInvalid={isChanged && !isValid}\n            isValid={isChanged && isValid}\n            label={translate('baseline.specify_days')}\n            required={true}>\n            <input onChange={e => onChangeDays(e.currentTarget.value)} type=\"text\" value={days} />\n          </ValidationInput>\n        )}\n      </>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  isDefault?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingPreviousVersion(props: Props) {\n  const { disabled, isDefault, onSelect, selected } = props;\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('PREVIOUS_VERSION')}\n      selected={selected}\n      title={\n        translate('baseline.previous_version') + (isDefault ? ` (${translate('default')})` : '')\n      }>\n      <p>{translate('baseline.previous_version.description')}</p>\n    </RadioCard>\n  );\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#settings-page .layout-page-side,#settings-page .layout-page-side-outer{width:calc(50vw - 480px);border-right:none}#settings-page .layout-page-side-inner{width:160px;margin-left:calc(50vw - 639px)}#settings-page .layout-page-main{padding:0}#settings-page .layout-page-main-inner{max-width:1110px}#settings-page .top-bar-outer{height:80px}#settings-page .top-bar{background-color:#f3f3f3;position:fixed;z-index:55;left:0;right:0}#settings-page .top-bar-inner{max-width:1280px;margin:0 auto;height:80px;box-sizing:border-box}#settings-page .page-description,#settings-page .page-title{float:none}.settings-definitions-list>li+li{margin-top:30px}.settings-definition{margin:0 -20px;padding:10px 20px;border-top:1px solid transparent;border-bottom:1px solid transparent;display:flex;align-items:stretch}.settings-definition-changed{border-top:1px solid #faebcc;border-bottom:1px solid #faebcc;background-color:#fcf8e3}.settings-definition-left{width:330px;padding-right:30px;box-sizing:border-box}.settings-definition-right{position:relative;width:calc(100% - 330px);box-sizing:border-box}.settings-definition-name{text-overflow:ellipsis}.settings-definition-key{line-height:1.5;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.settings-definition-key:hover{overflow:visible}.settings-definition-state{min-height:32px;padding-bottom:4px}.settings-definition-state>span{display:flex}.settings-definition-changes{margin-top:20px;padding-top:20px;border-top:1px dotted #e6e6e6}.settings-sub-categories-list>li+li,.settings-sub-category{margin:30px -20px 0;padding:30px 20px;border-top:1px solid #e6e6e6}.settings-sub-category-name{margin-bottom:20px;font-size:16px}.settings-sub-category-description{margin-top:-15px;margin-bottom:20px;color:#777}.settings-large-input{width:100%!important;max-width:400px;min-width:200px}.side-tabs-menu{margin-top:16px}.side-tabs-menu>li{margin-bottom:4px}.side-tabs-menu>li>a{display:block;padding:10px;line-height:1.5;border-top-left-radius:3px;border-bottom-left-radius:3px;border:1px solid #e6e6e6;border-right:none;overflow:hidden;text-overflow:ellipsis;transition:color .3s ease,background-color .3s ease}.side-tabs-menu>li>a.active,.side-tabs-menu>li>a:focus,.side-tabs-menu>li>a:hover{background-color:#fff}.side-tabs-menu>li>a.active{color:#444;cursor:default}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport {\n  getDefinitions,\n  getValues,\n  resetSettingValue,\n  setSettingValue\n} from '../../../api/settings';\nimport { closeAllGlobalMessages } from '../../../store/globalMessages';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppDefinition,\n  Store\n} from '../../../store/rootReducer';\nimport { isEmptyValue } from '../utils';\nimport { receiveDefinitions } from './definitions';\nimport {\n  cancelChange,\n  failValidation,\n  passValidation,\n  startLoading,\n  stopLoading\n} from './settingsPage';\nimport { receiveValues } from './values';\n\nexport function fetchSettings(component?: string) {\n  return (dispatch: Dispatch) => {\n    return getDefinitions(component).then(definitions => {\n      const filtered = definitions.filter(definition => definition.type !== 'LICENSE');\n      dispatch(receiveDefinitions(filtered));\n    });\n  };\n}\n\nexport function fetchValues(keys: string, component?: string) {\n  return (dispatch: Dispatch) =>\n    getValues({ keys, component }).then(settings => {\n      dispatch(receiveValues(settings, component));\n      dispatch(closeAllGlobalMessages());\n    });\n}\n\nexport function checkValue(key: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      if (definition.defaultValue === undefined) {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty_no_default')));\n      } else {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      }\n      return false;\n    }\n\n    dispatch(passValidation(key));\n    return true;\n  };\n}\n\nexport function saveValue(key: string, component?: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    dispatch(startLoading(key));\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      dispatch(stopLoading(key));\n      return Promise.reject();\n    }\n\n    return setSettingValue(definition, value, component)\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        dispatch(receiveValues(values, component));\n        dispatch(cancelChange(key));\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nexport function resetValue(key: string, component?: string) {\n  return (dispatch: Dispatch) => {\n    dispatch(startLoading(key));\n\n    return resetSettingValue({ keys: key, component })\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        if (values.length > 0) {\n          dispatch(receiveValues(values, component));\n        } else {\n          dispatch(receiveValues([{ key }], component));\n        }\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nfunction handleError(key: string, dispatch: Dispatch) {\n  return (response: Response) => {\n    dispatch(stopLoading(key));\n    return parseError(response).then(message => {\n      dispatch(failValidation(key, message));\n      return Promise.reject();\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeleteIcon from 'sonar-ui-common/components/icons/DeleteIcon';\nimport EditIcon from 'sonar-ui-common/components/icons/EditIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getEdition, getEditionUrl } from '../../../../helpers/editions';\nimport { IMPORT_COMPATIBLE_ALMS } from '../../../../helpers/constants';\nimport {\n  AlmBindingDefinition,\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  AlmSettingsBindingStatusType\n} from '../../../../types/alm-settings';\nimport { EditionKey } from '../../../../types/editions';\n\nexport interface AlmBindingDefinitionBoxProps {\n  alm: AlmKeys;\n  branchesEnabled: boolean;\n  definition: AlmBindingDefinition;\n  multipleDefinitions: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  status?: AlmSettingsBindingStatus;\n}\n\nconst DEFAULT_STATUS: AlmSettingsBindingStatus = {\n  alertSuccess: false,\n  failureMessage: '',\n  type: AlmSettingsBindingStatusType.Validating\n};\n\nconst STATUS_ICON = {\n  [AlmSettingsBindingStatusType.Failure]: <AlertErrorIcon className=\"spacer-left\" />,\n  [AlmSettingsBindingStatusType.Success]: <AlertSuccessIcon className=\"spacer-left\" />\n};\n\nfunction getPRDecorationFeatureStatus(\n  branchesEnabled: boolean,\n  type: AlmSettingsBindingStatusType.Success | AlmSettingsBindingStatusType.Failure\n) {\n  if (branchesEnabled) {\n    return STATUS_ICON[type];\n  }\n\n  return (\n    <div className=\"display-inline-flex-center\">\n      <strong className=\"spacer-left\">\n        {translate('settings.almintegration.feature.pr_decoration.disabled')}\n      </strong>\n      <HelpTooltip\n        className=\"little-spacer-left\"\n        overlay={\n          <FormattedMessage\n            id=\"settings.almintegration.feature.pr_decoration.disabled.no_branches\"\n            defaultMessage={translate(\n              'settings.almintegration.feature.pr_decoration.disabled.no_branches'\n            )}\n            values={{\n              link: (\n                <a\n                  href={getEditionUrl(getEdition(EditionKey.developer), {\n                    sourceEdition: EditionKey.community\n                  })}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\">\n                  {translate(\n                    'settings.almintegration.feature.pr_decoration.disabled.no_branches.link'\n                  )}\n                </a>\n              )\n            }}\n          />\n        }\n      />\n    </div>\n  );\n}\n\nfunction getImportFeatureStatus(\n  definition: AlmBindingDefinition,\n  multipleDefinitions: boolean,\n  type: AlmSettingsBindingStatusType.Success | AlmSettingsBindingStatusType.Failure\n) {\n  if (multipleDefinitions) {\n    return (\n      <div className=\"display-inline-flex-center\">\n        <strong className=\"spacer-left\">\n          {translate('settings.almintegration.feature.alm_repo_import.disabled')}\n        </strong>\n        <HelpTooltip\n          className=\"little-spacer-left\"\n          overlay={translate('settings.almintegration.feature.alm_repo_import.disabled.multiple')}\n        />\n      </div>\n    );\n  }\n\n  if (!definition.url) {\n    return (\n      <div className=\"display-inline-flex-center\">\n        <strong className=\"spacer-left\">\n          {translate('settings.almintegration.feature.alm_repo_import.disabled')}\n        </strong>\n        <HelpTooltip\n          className=\"little-spacer-left\"\n          overlay={translate('settings.almintegration.feature.alm_repo_import.disabled.no_url')}\n        />\n      </div>\n    );\n  }\n\n  return STATUS_ICON[type];\n}\n\nexport default function AlmBindingDefinitionBox(props: AlmBindingDefinitionBoxProps) {\n  const { alm, branchesEnabled, definition, multipleDefinitions, status = DEFAULT_STATUS } = props;\n\n  const prDecoFeatureTitle =\n    alm === AlmKeys.GitLab\n      ? translate('settings.almintegration.feature.mr_decoration.title')\n      : translate('settings.almintegration.feature.pr_decoration.title');\n\n  const prDecoFeatureDescription =\n    alm === AlmKeys.GitLab\n      ? translate('settings.almintegration.feature.mr_decoration.description')\n      : translate('settings.almintegration.feature.pr_decoration.description');\n\n  return (\n    <div className=\"boxed-group-inner bordered spacer-top spacer-bottom it__alm-binding-definition\">\n      <div className=\"actions pull-right\">\n        <Button onClick={() => props.onEdit(definition.key)}>\n          <EditIcon className=\"spacer-right\" />\n          {translate('edit')}\n        </Button>\n        <Button className=\"button-red spacer-left\" onClick={() => props.onDelete(definition.key)}>\n          <DeleteIcon className=\"spacer-right\" />\n          {translate('delete')}\n        </Button>\n      </div>\n\n      <div className=\"big-spacer-bottom\">\n        <h3>{definition.key}</h3>\n        {definition.url && <span>{definition.url}</span>}\n      </div>\n\n      {status.type === AlmSettingsBindingStatusType.Validating ? (\n        <>\n          <i className=\"spinner spacer-right\" />\n          {translate('settings.almintegration.checking_configuration')}\n        </>\n      ) : (\n        <>\n          {status.type !== AlmSettingsBindingStatusType.Warning && (\n            <div className=\"display-flex-row spacer-bottom\">\n              <div className=\"huge-spacer-right\">\n                <Tooltip overlay={prDecoFeatureDescription}>\n                  <span>{prDecoFeatureTitle}</span>\n                </Tooltip>\n                {getPRDecorationFeatureStatus(branchesEnabled, status.type)}\n              </div>\n              {IMPORT_COMPATIBLE_ALMS.includes(alm) && (\n                <div>\n                  <Tooltip\n                    overlay={translate(\n                      'settings.almintegration.feature.alm_repo_import.description'\n                    )}>\n                    <span>\n                      {translate('settings.almintegration.feature.alm_repo_import.title')}\n                    </span>\n                  </Tooltip>\n                  {getImportFeatureStatus(definition, multipleDefinitions, status.type)}\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className=\"width-50\">\n            {status.type === AlmSettingsBindingStatusType.Warning && (\n              <Alert variant=\"warning\">\n                {translate('settings.almintegration.could_not_validate')}\n              </Alert>\n            )}\n\n            {status.type === AlmSettingsBindingStatusType.Failure && (\n              <Alert variant=\"error\">{status.failureMessage}</Alert>\n            )}\n\n            {status.type === AlmSettingsBindingStatusType.Success && status.alertSuccess && (\n              <Alert variant=\"success\">\n                {translate('settings.almintegration.configuration_valid')}\n              </Alert>\n            )}\n          </div>\n\n          <Button className=\"big-spacer-top\" onClick={() => props.onCheck(definition.key)}>\n            {translate('settings.almintegration.check_configuration')}\n          </Button>\n        </>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface AlmBindingDefinitionFormModalProps {\n  action: 'edit' | 'create';\n  canSubmit: () => boolean;\n  children: React.ReactNode;\n  help?: React.ReactNode;\n  isSecondInstance: boolean;\n  onCancel: () => void;\n  onSubmit: () => void;\n}\n\nexport default function AlmBindingDefinitionFormModalRenderer(\n  props: AlmBindingDefinitionFormModalProps\n) {\n  const { action, children, help, isSecondInstance } = props;\n  const header = translate('settings.almintegration.form.header', action);\n\n  return (\n    <SimpleModal header={header} onClose={props.onCancel} onSubmit={props.onSubmit} size=\"medium\">\n      {({ onCloseClick, onFormSubmit, submitting }) => (\n        <form className=\"views-form\" onSubmit={onFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n\n          <div className=\"modal-body modal-container\">\n            {isSecondInstance && action === 'create' && (\n              <Alert className=\"big-spacer-bottom\" variant=\"warning\">\n                {translate('settings.almintegration.form.second_instance_warning')}\n              </Alert>\n            )}\n\n            <div className=\"display-flex-start\">\n              <div className=\"flex-1\">{children}</div>\n\n              {help ? (\n                <Alert className=\"huge-spacer-left flex-1\" variant=\"info\">\n                  {help}\n                </Alert>\n              ) : (\n                <div className=\"flex-1\" />\n              )}\n            </div>\n          </div>\n\n          <div className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton disabled={submitting || !props.canSubmit()}>\n              {translate('settings.almintegration.form.save')}\n            </SubmitButton>\n            <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n          </div>\n        </form>\n      )}\n    </SimpleModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isEqual, omit } from 'lodash';\nimport * as React from 'react';\nimport { AlmBindingDefinition } from '../../../../types/alm-settings';\nimport AlmBindingDefinitionFormModalRenderer from './AlmBindingDefinitionFormModalRenderer';\n\nexport interface AlmBindingDefinitionFormChildrenProps<B> {\n  formData: B;\n  onFieldChange: (fieldId: keyof B, value: string) => void;\n}\n\ninterface Props<B> {\n  bindingDefinition: B;\n  children: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  isSecondInstance?: boolean;\n  onCancel?: () => void;\n  onDelete?: (definitionKey: string) => void;\n  onEdit?: (definitionKey: string) => void;\n  onSubmit: (data: B, originalKey: string) => void;\n  optionalFields?: Array<keyof B>;\n}\n\ninterface State<B> {\n  formData: B;\n  touched: boolean;\n}\n\nexport default class AlmBindingDefinitionForm<\n  B extends AlmBindingDefinition\n> extends React.PureComponent<Props<B>, State<B>> {\n  constructor(props: Props<B>) {\n    super(props);\n    this.state = { formData: props.bindingDefinition, touched: false };\n  }\n\n  componentDidUpdate(prevProps: Props<B>) {\n    if (!isEqual(prevProps.bindingDefinition, this.props.bindingDefinition)) {\n      this.setState({ formData: this.props.bindingDefinition, touched: false });\n    }\n  }\n\n  handleCancel = () => {\n    this.setState({ formData: this.props.bindingDefinition, touched: false });\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  handleDelete = () => {\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.bindingDefinition.key);\n    }\n  };\n\n  handleEdit = () => {\n    if (this.props.onEdit) {\n      this.props.onEdit(this.props.bindingDefinition.key);\n    }\n  };\n\n  handleFieldChange = (fieldId: keyof B, value: string) => {\n    this.setState(({ formData }) => ({\n      formData: {\n        ...formData,\n        [fieldId]: value\n      },\n      touched: true\n    }));\n  };\n\n  handleFormSubmit = () => {\n    this.props.onSubmit(this.state.formData, this.props.bindingDefinition.key);\n  };\n\n  canSubmit = () => {\n    const { optionalFields } = this.props;\n    const { formData, touched } = this.state;\n\n    let values = { ...formData };\n\n    if (optionalFields && optionalFields.length > 0) {\n      values = omit(values, optionalFields) as B;\n    }\n\n    return touched && !Object.values(values).some(v => !v);\n  };\n\n  render() {\n    const { bindingDefinition, children, help, isSecondInstance } = this.props;\n    const { formData } = this.state;\n\n    const action = bindingDefinition.key ? 'edit' : 'create';\n\n    return (\n      <AlmBindingDefinitionFormModalRenderer\n        action={action}\n        canSubmit={this.canSubmit}\n        help={help}\n        isSecondInstance={Boolean(isSecondInstance)}\n        onCancel={this.handleCancel}\n        onSubmit={this.handleFormSubmit}>\n        {children({\n          formData,\n          onFieldChange: this.handleFieldChange\n        })}\n      </AlmBindingDefinitionFormModalRenderer>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { getEdition, getEditionUrl } from '../../../../helpers/editions';\nimport { AlmKeys } from '../../../../types/alm-settings';\nimport { EditionKey } from '../../../../types/editions';\n\nexport interface CreationTooltipProps {\n  alm: AlmKeys;\n  appState: T.AppState;\n  children: React.ReactElement<{}>;\n  preventCreation: boolean;\n}\n\nexport function CreationTooltip(props: CreationTooltipProps) {\n  const {\n    alm,\n    appState: { edition },\n    children,\n    preventCreation\n  } = props;\n\n  const sourceEdition = edition ? EditionKey[edition] : undefined;\n\n  return (\n    <Tooltip\n      overlay={\n        preventCreation ? (\n          <FormattedMessage\n            id=\"settings.almintegration.create.tooltip\"\n            defaultMessage={translate('settings.almintegration.create.tooltip')}\n            values={{\n              link: (\n                <a\n                  href={getEditionUrl(getEdition(EditionKey.enterprise), {\n                    sourceEdition\n                  })}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\">\n                  {translate('settings.almintegration.create.tooltip.link')}\n                </a>\n              ),\n              alm: translate('alm', alm)\n            }}\n          />\n        ) : null\n      }\n      mouseLeaveDelay={0.25}>\n      {children}\n    </Tooltip>\n  );\n}\n\nexport default withAppState(CreationTooltip);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  AlmBindingDefinition,\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  isBitbucketCloudBindingDefinition\n} from '../../../../types/alm-settings';\nimport AlmBindingDefinitionBox from './AlmBindingDefinitionBox';\nimport AlmBindingDefinitionForm, {\n  AlmBindingDefinitionFormChildrenProps\n} from './AlmBindingDefinitionForm';\nimport CreationTooltip from './CreationTooltip';\n\nexport interface AlmTabRendererProps<B> {\n  alm: AlmKeys;\n  branchesEnabled: boolean;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  editedDefinition?: B;\n  definitions: B[];\n  form: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help: React.ReactNode;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onCheck: (definitionKey: string) => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: B, originalKey: string) => void;\n  optionalFields?: Array<keyof B>;\n  submitting: boolean;\n  success: boolean;\n}\n\nexport default function AlmTabRenderer<B extends AlmBindingDefinition>(\n  props: AlmTabRendererProps<B>\n) {\n  const {\n    alm,\n    branchesEnabled,\n    definitions,\n    definitionStatus,\n    editedDefinition,\n    form,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    multipleAlmEnabled,\n    optionalFields,\n    help\n  } = props;\n\n  const preventCreation = loadingProjectCount || (!multipleAlmEnabled && definitions.length > 0);\n\n  return (\n    <div className=\"big-padded\">\n      <DeferredSpinner loading={loadingAlmDefinitions}>\n        {definitions.length === 0 && (\n          <p className=\"spacer-top\">{translate('settings.almintegration.empty', alm)}</p>\n        )}\n\n        <div className={definitions.length > 0 ? 'spacer-bottom text-right' : 'big-spacer-top'}>\n          <CreationTooltip alm={alm} preventCreation={preventCreation}>\n            <Button\n              data-test=\"settings__alm-create\"\n              disabled={preventCreation}\n              onClick={props.onCreate}>\n              {translate('settings.almintegration.create')}\n            </Button>\n          </CreationTooltip>\n        </div>\n        {definitions.map(def => (\n          <AlmBindingDefinitionBox\n            alm={isBitbucketCloudBindingDefinition(def) ? AlmKeys.BitbucketCloud : alm}\n            branchesEnabled={branchesEnabled}\n            definition={def}\n            key={def.key}\n            multipleDefinitions={definitions.length > 1}\n            onCheck={props.onCheck}\n            onDelete={props.onDelete}\n            onEdit={props.onEdit}\n            status={definitionStatus[def.key]}\n          />\n        ))}\n\n        {editedDefinition && (\n          <AlmBindingDefinitionForm\n            bindingDefinition={editedDefinition}\n            help={help}\n            isSecondInstance={definitions.length === 1}\n            onCancel={props.onCancel}\n            onSubmit={props.onSubmit}\n            optionalFields={optionalFields}>\n            {form}\n          </AlmBindingDefinitionForm>\n        )}\n      </DeferredSpinner>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  AlmBindingDefinition,\n  AlmKeys,\n  AlmSettingsBindingStatus\n} from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormChildrenProps } from './AlmBindingDefinitionForm';\nimport AlmTabRenderer from './AlmTabRenderer';\n\ninterface Props<B> {\n  alm: AlmKeys;\n  branchesEnabled: boolean;\n  createConfiguration: (data: B) => Promise<void>;\n  defaultBinding: B;\n  definitions: B[];\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  form: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help: React.ReactNode;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n  optionalFields?: Array<keyof B>;\n  updateConfiguration: (data: B & { newKey?: string }) => Promise<void>;\n}\n\ninterface State<B> {\n  editedDefinition?: B;\n  submitting: boolean;\n  success: boolean;\n}\n\nexport default class AlmTab<B extends AlmBindingDefinition> extends React.PureComponent<\n  Props<B>,\n  State<B>\n> {\n  mounted = false;\n  state: State<B> = { submitting: false, success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({ editedDefinition: undefined, success: false });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: this.props.defaultBinding, success: false });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition, success: false });\n  };\n\n  handleSubmit = (config: B, originalKey: string) => {\n    const call = originalKey\n      ? this.props.updateConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : this.props.createConfiguration({ ...config });\n\n    this.setState({ submitting: true });\n    return call\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            editedDefinition: undefined,\n            submitting: false,\n            success: true\n          });\n        }\n      })\n      .then(this.props.onUpdateDefinitions)\n      .then(() => {\n        this.props.onCheck(config.key);\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submitting: false, success: false });\n        }\n      });\n  };\n\n  render() {\n    const {\n      alm,\n      branchesEnabled,\n      definitions,\n      definitionStatus,\n      form,\n      help,\n      loadingAlmDefinitions,\n      loadingProjectCount,\n      multipleAlmEnabled,\n      optionalFields\n    } = this.props;\n    const { editedDefinition, submitting, success } = this.state;\n\n    return (\n      <AlmTabRenderer\n        alm={alm}\n        branchesEnabled={branchesEnabled}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        editedDefinition={editedDefinition}\n        form={form}\n        help={help}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCancel={this.handleCancel}\n        onCheck={this.props.onCheck}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n        optionalFields={optionalFields}\n        submitting={submitting}\n        success={success}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmBindingDefinition } from '../../../../types/alm-settings';\n\nexport interface AlmBindingDefinitionFormFieldProps<B extends AlmBindingDefinition> {\n  autoFocus?: boolean;\n  help?: React.ReactNode;\n  id: string;\n  isTextArea?: boolean;\n  maxLength?: number;\n  onFieldChange: (id: keyof B, value: string) => void;\n  optional?: boolean;\n  overwriteOnly?: boolean;\n  propKey: keyof B;\n  value: string;\n}\n\nexport function AlmBindingDefinitionFormField<B extends AlmBindingDefinition>(\n  props: AlmBindingDefinitionFormFieldProps<B>\n) {\n  const {\n    autoFocus,\n    help,\n    id,\n    isTextArea,\n    maxLength,\n    optional,\n    overwriteOnly = false,\n    propKey,\n    value\n  } = props;\n  const [showField, setShowField] = React.useState(!overwriteOnly);\n\n  return (\n    <div className=\"modal-field\">\n      <label className=\"display-flex-center\" htmlFor={id}>\n        {translate('settings.almintegration.form', id)}\n        {!optional && <em className=\"mandatory\">*</em>}\n        {help && <HelpTooltip className=\"spacer-left\" overlay={help} placement=\"right\" />}\n      </label>\n\n      {!showField && overwriteOnly && (\n        <div>\n          <p>{translate('settings.almintegration.form.secret_field')}</p>\n          <ButtonLink\n            onClick={() => {\n              props.onFieldChange(propKey, '');\n              setShowField(true);\n            }}>\n            {translate('settings.almintegration.form.update_secret_field')}\n          </ButtonLink>\n        </div>\n      )}\n\n      {showField && isTextArea && (\n        <textarea\n          className=\"settings-large-input\"\n          id={id}\n          maxLength={maxLength || 2000}\n          onChange={e => props.onFieldChange(propKey, e.currentTarget.value)}\n          required={!optional}\n          rows={5}\n          value={value}\n        />\n      )}\n\n      {showField && !isTextArea && (\n        <input\n          autoFocus={autoFocus}\n          className=\"input-super-large\"\n          id={id}\n          maxLength={maxLength || 100}\n          name={id}\n          onChange={e => props.onFieldChange(propKey, e.currentTarget.value)}\n          size={50}\n          type=\"text\"\n          value={value}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AzureBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface AzureFormProps {\n  formData: AzureBindingDefinition;\n  onFieldChange: (fieldId: keyof AzureBindingDefinition, value: string) => void;\n}\n\nexport default function AzureForm(props: AzureFormProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmBindingDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.almintegration.form.name.azure.help')}\n        id=\"name.azure\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.azure.help1')}\n            <br />\n            <em>https://ado.your-company.com/your_collection</em>\n            <br />\n            <br />\n            {translate('settings.almintegration.form.url.azure.help2')}\n            <br />\n            <em>https://dev.azure.com/your_organization</em>\n          </>\n        }\n        id=\"url.azure\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        value={formData.url || ''}\n      />\n      <AlmBindingDefinitionFormField\n        help={translate('settings.almintegration.form.personal_access_token.azure.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        overwriteOnly={Boolean(formData.key)}\n        propKey=\"personalAccessToken\"\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createAzureConfiguration, updateAzureConfiguration } from '../../../../api/alm-settings';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  AzureBindingDefinition\n} from '../../../../types/alm-settings';\nimport AlmTab from './AlmTab';\nimport AzureForm from './AzureForm';\n\nexport interface AzureTabProps {\n  branchesEnabled: boolean;\n  definitions: AzureBindingDefinition[];\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function AzureTab(props: AzureTabProps) {\n  const {\n    branchesEnabled,\n    multipleAlmEnabled,\n    definitions,\n    definitionStatus,\n    loadingAlmDefinitions,\n    loadingProjectCount\n  } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        alm={AlmKeys.Azure}\n        branchesEnabled={branchesEnabled}\n        createConfiguration={createAzureConfiguration}\n        defaultBinding={{ key: '', personalAccessToken: '', url: '' }}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        form={childProps => <AzureForm {...childProps} />}\n        help={\n          <FormattedMessage\n            defaultMessage={translate(`settings.almintegration.azure.info`)}\n            id=\"settings.almintegration.azure.info\"\n            values={{\n              link: (\n                <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.Azure]}>\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        }\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCheck={props.onCheck}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateAzureConfiguration}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport RadioToggle from 'sonar-ui-common/components/controls/RadioToggle';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  AlmKeys,\n  BitbucketBindingDefinition,\n  BitbucketCloudBindingDefinition,\n  isBitbucketBindingDefinition,\n  isBitbucketCloudBindingDefinition\n} from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface BitbucketFormProps {\n  formData: BitbucketBindingDefinition | BitbucketCloudBindingDefinition;\n  isCreating: boolean;\n  onFieldChange: (\n    fieldId: keyof (BitbucketBindingDefinition & BitbucketCloudBindingDefinition),\n    value: string\n  ) => void;\n  onSelectVariant: (variant: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud) => void;\n  variant?: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud;\n}\n\nexport default function BitbucketForm(props: BitbucketFormProps) {\n  const { formData, isCreating, variant } = props;\n\n  return (\n    <div>\n      {isCreating && (\n        <>\n          <strong>{translate('settings.almintegration.form.choose_bitbucket_variant')}</strong>\n          <RadioToggle\n            className=\"little-spacer-top big-spacer-bottom\"\n            name=\"variant\"\n            onCheck={props.onSelectVariant}\n            options={[\n              {\n                label: 'Bitbucket Server',\n                value: AlmKeys.BitbucketServer\n              },\n              { label: 'Bitbucket Cloud', value: AlmKeys.BitbucketCloud }\n            ]}\n            value={variant}\n          />\n        </>\n      )}\n\n      {variant === AlmKeys.BitbucketServer && isBitbucketBindingDefinition(formData) && (\n        <div>\n          <AlmBindingDefinitionFormField\n            autoFocus={true}\n            help={translate('settings.almintegration.form.name.bitbucket.help')}\n            id=\"name.bitbucket\"\n            maxLength={100}\n            onFieldChange={props.onFieldChange}\n            propKey=\"key\"\n            value={formData.key}\n          />\n          <AlmBindingDefinitionFormField\n            help={\n              <FormattedMessage\n                defaultMessage={translate('settings.almintegration.form.url.bitbucket.help')}\n                id=\"settings.almintegration.form.url.bitbucket.help\"\n                values={{ example: 'https://bitbucket-server.your-company.com' }}\n              />\n            }\n            id=\"url.bitbucket\"\n            maxLength={2000}\n            onFieldChange={props.onFieldChange}\n            propKey=\"url\"\n            value={formData.url}\n          />\n          <AlmBindingDefinitionFormField\n            id=\"personal_access_token\"\n            isTextArea={true}\n            onFieldChange={props.onFieldChange}\n            overwriteOnly={Boolean(formData.key)}\n            propKey=\"personalAccessToken\"\n            value={formData.personalAccessToken}\n          />\n        </div>\n      )}\n\n      {variant === AlmKeys.BitbucketCloud && isBitbucketCloudBindingDefinition(formData) && (\n        <div>\n          <AlmBindingDefinitionFormField\n            autoFocus={true}\n            help={translate('settings.almintegration.form.name.bitbucketcloud.help')}\n            id=\"name.bitbucket\"\n            maxLength={100}\n            onFieldChange={props.onFieldChange}\n            propKey=\"key\"\n            value={formData.key}\n          />\n          <AlmBindingDefinitionFormField\n            help={\n              <FormattedMessage\n                defaultMessage={translate(\n                  'settings.almintegration.form.workspace.bitbucketcloud.help'\n                )}\n                id=\"settings.almintegration.form.workspace.bitbucketcloud.help\"\n                values={{\n                  example: (\n                    <>\n                      {'https://bitbucket.org/'}\n                      <strong>{'{workspace}'}</strong>\n                      {'/{repository}'}\n                    </>\n                  )\n                }}\n              />\n            }\n            id=\"workspace.bitbucketcloud\"\n            maxLength={2000}\n            onFieldChange={props.onFieldChange}\n            propKey=\"workspace\"\n            value={formData.workspace}\n          />\n          <AlmBindingDefinitionFormField\n            id=\"client_id.bitbucketcloud\"\n            onFieldChange={props.onFieldChange}\n            propKey=\"clientId\"\n            value={formData.clientId}\n          />\n          <AlmBindingDefinitionFormField\n            id=\"client_secret.bitbucketcloud\"\n            onFieldChange={props.onFieldChange}\n            overwriteOnly={Boolean(formData.key)}\n            propKey=\"clientSecret\"\n            value={formData.clientSecret}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  BitbucketBindingDefinition,\n  BitbucketCloudBindingDefinition\n} from '../../../../types/alm-settings';\nimport AlmTabRenderer from './AlmTabRenderer';\nimport BitbucketForm from './BitbucketForm';\n\nexport interface BitbucketTabRendererProps {\n  branchesEnabled: boolean;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  editedDefinition?: BitbucketBindingDefinition | BitbucketCloudBindingDefinition;\n  definitions: Array<BitbucketBindingDefinition | BitbucketCloudBindingDefinition>;\n  isCreating: boolean;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onCheck: (definitionKey: string) => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSelectVariant: (variant: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud) => void;\n  onSubmit: (\n    config: BitbucketBindingDefinition | BitbucketCloudBindingDefinition,\n    originalKey: string\n  ) => void;\n  submitting: boolean;\n  success: boolean;\n  variant?: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud;\n}\n\nexport default function BitbucketTabRenderer(props: BitbucketTabRendererProps) {\n  const {\n    branchesEnabled,\n    editedDefinition,\n    definitions,\n    definitionStatus,\n    isCreating,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    multipleAlmEnabled,\n    submitting,\n    success,\n    variant\n  } = props;\n\n  let help;\n  if (variant === AlmKeys.BitbucketServer) {\n    help = (\n      <>\n        <h3>{translate('onboarding.create_project.pat_help.title')}</h3>\n\n        <p className=\"big-spacer-top\">{translate('settings.almintegration.bitbucket.help_1')}</p>\n\n        <ul className=\"big-spacer-top list-styled\">\n          <li>{translate('settings.almintegration.bitbucket.help_2')}</li>\n          <li>{translate('settings.almintegration.bitbucket.help_3')}</li>\n        </ul>\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.BitbucketServer]}>\n            {translate('learn_more')}\n          </Link>\n        </p>\n      </>\n    );\n  } else if (variant === AlmKeys.BitbucketCloud) {\n    help = (\n      <FormattedMessage\n        defaultMessage={translate(`settings.almintegration.bitbucketcloud.info`)}\n        id=\"settings.almintegration.bitbucketcloud.info\"\n        values={{\n          link: (\n            <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.BitbucketCloud]}>\n              {translate('learn_more')}\n            </Link>\n          )\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"bordered\">\n      <AlmTabRenderer\n        branchesEnabled={branchesEnabled}\n        alm={AlmKeys.BitbucketServer} // Always use Bitbucket Server for the translation keys.\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        editedDefinition={editedDefinition}\n        form={childProps => (\n          <BitbucketForm\n            isCreating={isCreating}\n            onSelectVariant={props.onSelectVariant}\n            variant={variant}\n            {...childProps}\n          />\n        )}\n        help={help}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCancel={props.onCancel}\n        onCheck={props.onCheck}\n        onCreate={props.onCreate}\n        onDelete={props.onDelete}\n        onEdit={props.onEdit}\n        onSubmit={props.onSubmit}\n        submitting={submitting}\n        success={success}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  createBitbucketCloudConfiguration,\n  createBitbucketConfiguration,\n  updateBitbucketCloudConfiguration,\n  updateBitbucketConfiguration\n} from '../../../../api/alm-settings';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  BitbucketBindingDefinition,\n  BitbucketCloudBindingDefinition,\n  isBitbucketBindingDefinition\n} from '../../../../types/alm-settings';\nimport BitbucketTabRenderer from './BitbucketTabRenderer';\n\ninterface Props {\n  branchesEnabled: boolean;\n  definitions: Array<BitbucketBindingDefinition | BitbucketCloudBindingDefinition>;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\ninterface State {\n  editedDefinition?: BitbucketBindingDefinition | BitbucketCloudBindingDefinition;\n  isCreating: boolean;\n  submitting: boolean;\n  success: boolean;\n  variant?: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud;\n}\n\nexport const DEFAULT_SERVER_BINDING = { key: '', url: '', personalAccessToken: '' };\nexport const DEFAULT_CLOUD_BINDING = { key: '', clientId: '', clientSecret: '', workspace: '' };\n\nexport default class BitbucketTab extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { isCreating: false, submitting: false, success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined,\n      isCreating: false,\n      success: false,\n      variant: undefined\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({\n      editedDefinition: DEFAULT_SERVER_BINDING, // Default to Bitbucket Server.\n      isCreating: true,\n      success: false,\n      variant: undefined\n    });\n  };\n\n  handleSelectVariant = (variant: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud) => {\n    this.setState({\n      variant,\n      editedDefinition:\n        variant === AlmKeys.BitbucketServer ? DEFAULT_SERVER_BINDING : DEFAULT_CLOUD_BINDING\n    });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    const variant = isBitbucketBindingDefinition(editedDefinition)\n      ? AlmKeys.BitbucketServer\n      : AlmKeys.BitbucketCloud;\n    this.setState({ editedDefinition, variant, success: false });\n  };\n\n  handleSubmit = (\n    config: BitbucketBindingDefinition | BitbucketCloudBindingDefinition,\n    originalKey: string\n  ) => {\n    const call = originalKey\n      ? this.updateConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : this.createConfiguration({ ...config });\n\n    this.setState({ submitting: true });\n    return call\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            editedDefinition: undefined,\n            isCreating: false,\n            submitting: false,\n            success: true\n          });\n        }\n      })\n      .then(this.props.onUpdateDefinitions)\n      .then(() => {\n        this.props.onCheck(config.key);\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submitting: false, success: false });\n        }\n      });\n  };\n\n  updateConfiguration = (\n    config: (BitbucketBindingDefinition | BitbucketCloudBindingDefinition) & { newKey: string }\n  ) => {\n    if (isBitbucketBindingDefinition(config)) {\n      return updateBitbucketConfiguration(config);\n    }\n    return updateBitbucketCloudConfiguration(config);\n  };\n\n  createConfiguration = (config: BitbucketBindingDefinition | BitbucketCloudBindingDefinition) => {\n    if (isBitbucketBindingDefinition(config)) {\n      return createBitbucketConfiguration(config);\n    }\n    return createBitbucketCloudConfiguration(config);\n  };\n\n  render() {\n    const {\n      branchesEnabled,\n      definitions,\n      definitionStatus,\n      loadingAlmDefinitions,\n      loadingProjectCount,\n      multipleAlmEnabled\n    } = this.props;\n    const { editedDefinition, isCreating, submitting, success, variant } = this.state;\n\n    return (\n      <BitbucketTabRenderer\n        branchesEnabled={branchesEnabled}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        editedDefinition={editedDefinition}\n        isCreating={isCreating}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCancel={this.handleCancel}\n        onCheck={this.props.onCheck}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSelectVariant={this.handleSelectVariant}\n        onSubmit={this.handleSubmit}\n        submitting={submitting}\n        success={success}\n        variant={variant}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\nexport interface DeleteModalProps {\n  id: string;\n  projectCount?: number;\n  onDelete: (id: string) => void;\n  onCancel: () => void;\n}\n\nfunction showProjectCountWarning(projectCount?: number) {\n  if (projectCount === undefined) {\n    return <p>{translate('settings.almintegration.delete.no_info')}</p>;\n  }\n\n  return projectCount ? (\n    <p>{translateWithParameters('settings.almintegration.delete.info', projectCount)} </p>\n  ) : null;\n}\n\nexport default function DeleteModal({ id, onDelete, onCancel, projectCount }: DeleteModalProps) {\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      confirmData={id}\n      header={translate('settings.almintegration.delete.header')}\n      isDestructive={true}\n      onClose={onCancel}\n      onConfirm={onDelete}>\n      <>\n        <p className=\"spacer-bottom\">\n          <FormattedMessage\n            defaultMessage={translate('settings.almintegration.delete.message')}\n            id=\"settings.almintegration.delete.message\"\n            values={{ id: <b>{id}</b> }}\n          />\n        </p>\n        {showProjectCountWarning(projectCount)}\n      </>\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getDefaultValue, getSettingValue, isEmptyValue } from '../utils';\n\ntype Props = {\n  changedValue: string;\n  hasError: boolean;\n  hasValueChanged: boolean;\n  isDefault: boolean;\n  onCancel: () => void;\n  onReset: () => void;\n  onSave: () => void;\n  setting: T.Setting;\n};\n\ntype State = { reseting: boolean };\n\nexport default class DefinitionActions extends React.PureComponent<Props, State> {\n  state: State = { reseting: false };\n\n  handleClose = () => {\n    this.setState({ reseting: false });\n  };\n\n  handleReset = () => {\n    this.setState({ reseting: true });\n  };\n\n  handleSubmit = () => {\n    this.props.onReset();\n    this.handleClose();\n  };\n\n  renderModal() {\n    const header = translate('settings.reset_confirm.title');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <p>{translate('settings.reset_confirm.description')}</p>\n          </div>\n          <footer className=\"modal-foot\">\n            <SubmitButton className=\"button-red\">{translate('reset_verb')}</SubmitButton>\n            <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n\n  render() {\n    const { setting, isDefault, changedValue, hasValueChanged } = this.props;\n\n    const hasValueToResetTo = !isEmptyValue(setting.definition, getSettingValue(setting));\n    const hasBeenChangedToEmptyValue =\n      changedValue != null && isEmptyValue(setting.definition, changedValue);\n    const showReset =\n      hasValueToResetTo && (hasBeenChangedToEmptyValue || (!isDefault && !hasValueChanged));\n\n    return (\n      <>\n        {isDefault && !hasValueChanged && (\n          <div className=\"spacer-top note\" style={{ lineHeight: '24px' }}>\n            {translate('settings._default')}\n          </div>\n        )}\n        <div className=\"settings-definition-changes nowrap\">\n          {hasValueChanged && (\n            <Button\n              className=\"spacer-right button-success\"\n              disabled={this.props.hasError}\n              onClick={this.props.onSave}>\n              {translate('save')}\n            </Button>\n          )}\n\n          {showReset && (\n            <Button className=\"spacer-right\" onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          )}\n\n          {hasValueChanged && (\n            <ResetButtonLink className=\"spacer-right\" onClick={this.props.onCancel}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          )}\n\n          {showReset && (\n            <span className=\"note\">\n              {translate('default')}\n              {': '}\n              {getDefaultValue(setting)}\n            </span>\n          )}\n\n          {this.state.reseting && this.renderModal()}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Toggle from 'sonar-ui-common/components/controls/Toggle';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  value: string | boolean | undefined;\n}\n\nexport default function InputForBoolean({ onChange, name, value }: Props) {\n  const displayedValue = value != null ? value : false;\n  return (\n    <div className=\"display-inline-block text-top\">\n      <Toggle name={name} onChange={onChange} value={displayedValue} />\n      {value == null && <span className=\"spacer-left note\">{translate('settings.not_set')}</span>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  className?: string;\n  type: string;\n  value: string | number;\n}\n\nexport default class SimpleInput extends React.PureComponent<Props> {\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.value);\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13 && this.props.onSave) {\n      this.props.onSave();\n    } else if (event.keyCode === 27 && this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classNames('text-top', this.props.className)}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        onKeyDown={this.handleKeyDown}\n        type={this.props.type}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForNumber(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"input-small\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../../app/theme';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface State {\n  changing: boolean;\n}\n\nexport default class InputForPassword extends React.PureComponent<\n  DefaultSpecializedInputProps,\n  State\n> {\n  state: State = {\n    changing: !this.props.value\n  };\n\n  componentWillReceiveProps(nextProps: DefaultSpecializedInputProps) {\n    /*\n     * Reset `changing` if:\n     *  - the value is reset (valueChanged -> !valueChanged)\n     *     or\n     *  - the value changes from outside the input (i.e. store update/reset/cancel)\n     */\n    if (\n      (this.props.hasValueChanged || this.props.value !== nextProps.value) &&\n      !nextProps.hasValueChanged\n    ) {\n      this.setState({ changing: !nextProps.value });\n    }\n  }\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  handleChangeClick = () => {\n    this.setState({ changing: true });\n  };\n\n  renderInput() {\n    return (\n      <form>\n        <input className=\"hidden\" type=\"password\" />\n        <input\n          autoComplete=\"off\"\n          autoFocus={this.state.changing && this.props.value}\n          className=\"js-password-input settings-large-input text-top\"\n          name={this.props.name}\n          onChange={this.handleInputChange}\n          type=\"password\"\n          value={this.props.value}\n        />\n      </form>\n    );\n  }\n\n  render() {\n    if (this.state.changing) {\n      return this.renderInput();\n    }\n\n    return (\n      <>\n        <LockIcon className=\"text-middle big-spacer-right\" fill={colors.gray60} />\n        <Button className=\"text-middle\" onClick={this.handleChangeClick}>\n          {translate('change_verb')}\n        </Button>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ntype Props = DefaultSpecializedInputProps & Pick<T.SettingCategoryDefinition, 'options'>;\n\nexport default class InputForSingleSelectList extends React.PureComponent<Props> {\n  handleInputChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = this.props.options.map(option => ({\n      label: option,\n      value: option\n    }));\n\n    return (\n      <Select\n        className=\"settings-large-input\"\n        clearable={false}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        options={options}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForString(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"settings-large-input\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\nexport default class InputForText extends React.PureComponent<DefaultSpecializedInputProps> {\n  handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    return (\n      <textarea\n        className=\"settings-large-input text-top\"\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        rows={5}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  DefaultInputProps,\n  DefaultSpecializedInputProps,\n  getUniqueName,\n  isDefaultOrInherited\n} from '../../utils';\nimport InputForBoolean from './InputForBoolean';\nimport InputForNumber from './InputForNumber';\nimport InputForPassword from './InputForPassword';\nimport InputForSingleSelectList from './InputForSingleSelectList';\nimport InputForString from './InputForString';\nimport InputForText from './InputForText';\n\nconst typeMapping: {\n  [type in T.SettingType]?: React.ComponentType<DefaultSpecializedInputProps>;\n} = {\n  STRING: InputForString,\n  TEXT: InputForText,\n  PASSWORD: InputForPassword,\n  BOOLEAN: InputForBoolean,\n  INTEGER: InputForNumber,\n  LONG: InputForNumber,\n  FLOAT: InputForNumber\n};\n\ninterface Props extends DefaultInputProps {\n  name?: string;\n}\n\nexport default class PrimitiveInput extends React.PureComponent<Props> {\n  render() {\n    const { setting, ...other } = this.props;\n    const { definition } = setting;\n\n    const name = this.props.name || getUniqueName(definition);\n\n    if (definition.type === 'SINGLE_SELECT_LIST') {\n      return (\n        <InputForSingleSelectList\n          isDefault={isDefaultOrInherited(setting)}\n          name={name}\n          options={definition.options}\n          {...other}\n        />\n      );\n    }\n\n    const InputComponent = (definition.type && typeMapping[definition.type]) || InputForString;\n    return <InputComponent isDefault={isDefaultOrInherited(setting)} name={name} {...other} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class MultiValueInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue = () => {\n    return this.props.value || [];\n  };\n\n  handleSingleInputChange = (index: number, value: any) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1, value);\n    this.props.onChange(newValue);\n  };\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  renderInput(value: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    return (\n      <li className=\"spacer-bottom\" key={index}>\n        <PrimitiveInput\n          hasValueChanged={this.props.hasValueChanged}\n          onChange={value => this.handleSingleInputChange(index, value)}\n          setting={{\n            ...setting,\n            definition: { ...setting.definition, multiValues: false },\n            values: undefined\n          }}\n          value={value}\n        />\n\n        {!isLast && (\n          <div className=\"display-inline-block spacer-left\">\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          </div>\n        )}\n      </li>\n    );\n  }\n\n  render() {\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(this.props.setting.definition)];\n    return (\n      <div>\n        <ul>\n          {displayedValue.map((value, index) =>\n            this.renderInput(value, index, index === displayedValue.length - 1)\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue, getUniqueName, isCategoryDefinition } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class PropertySetInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue() {\n    return this.props.value || [];\n  }\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = (index: number, fieldKey: string, value: any) => {\n    const emptyValue = getEmptyValue(this.props.setting.definition)[0];\n    const newValue = [...this.ensureValue()];\n    const newFields = { ...emptyValue, ...newValue[index], [fieldKey]: value };\n    newValue.splice(index, 1, newFields);\n    return this.props.onChange(newValue);\n  };\n\n  renderFields(fieldValues: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    const { definition } = setting;\n\n    return (\n      <tr key={index}>\n        {isCategoryDefinition(definition) &&\n          definition.fields.map(field => (\n            <td key={field.key}>\n              <PrimitiveInput\n                hasValueChanged={this.props.hasValueChanged}\n                name={getUniqueName(definition, field.key)}\n                onChange={value => this.handleInputChange(index, field.key, value)}\n                setting={{ ...setting, definition: field, value: fieldValues[field.key] }}\n                value={fieldValues[field.key]}\n              />\n            </td>\n          ))}\n        <td className=\"thin nowrap text-middle\">\n          {!isLast && (\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { definition } = this.props.setting;\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(definition)];\n\n    return (\n      <div>\n        <table\n          className=\"data zebra-hover no-outer-padding\"\n          style={{ width: 'auto', minWidth: 480, marginTop: -12 }}>\n          <thead>\n            <tr>\n              {isCategoryDefinition(definition) &&\n                definition.fields.map(field => (\n                  <th key={field.key}>\n                    {field.name}\n                    {field.description != null && (\n                      <span className=\"spacer-top small\">{field.description}</span>\n                    )}\n                  </th>\n                ))}\n              <th>&nbsp;</th>\n            </tr>\n          </thead>\n          <tbody>\n            {displayedValue.map((fieldValues, index) =>\n              this.renderFields(fieldValues, index, index === displayedValue.length - 1)\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultInputProps, isCategoryDefinition } from '../../utils';\nimport MultiValueInput from './MultiValueInput';\nimport PrimitiveInput from './PrimitiveInput';\nimport PropertySetInput from './PropertySetInput';\n\nexport default function Input(props: DefaultInputProps) {\n  const { definition } = props.setting;\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    return <MultiValueInput {...props} />;\n  }\n\n  if (definition.type === 'PROPERTY_SET') {\n    return <PropertySetInput {...props} />;\n  }\n\n  return <PrimitiveInput {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppValidationMessage,\n  isSettingsAppLoading,\n  Store\n} from '../../../store/rootReducer';\nimport { checkValue, resetValue, saveValue } from '../store/actions';\nimport { cancelChange, changeValue, passValidation } from '../store/settingsPage';\nimport {\n  getPropertyDescription,\n  getPropertyName,\n  getSettingValue,\n  isDefaultOrInherited,\n  sanitizeTranslation\n} from '../utils';\nimport DefinitionActions from './DefinitionActions';\nimport Input from './inputs/Input';\n\ninterface Props {\n  cancelChange: (key: string) => void;\n  changeValue: (key: string, value: any) => void;\n  changedValue: any;\n  checkValue: (key: string) => boolean;\n  component?: T.Component;\n  loading: boolean;\n  passValidation: (key: string) => void;\n  resetValue: (key: string, component?: string) => Promise<void>;\n  saveValue: (key: string, component?: string) => Promise<void>;\n  setting: T.Setting;\n  validationMessage?: string;\n}\n\ninterface State {\n  success: boolean;\n}\n\nexport class Definition extends React.PureComponent<Props, State> {\n  timeout?: number;\n  mounted = false;\n  state = { success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  safeSetState(changes: State) {\n    if (this.mounted) {\n      this.setState(changes);\n    }\n  }\n\n  handleChange = (value: any) => {\n    clearTimeout(this.timeout);\n    this.props.changeValue(this.props.setting.definition.key, value);\n    this.handleCheck();\n  };\n\n  handleReset = () => {\n    const { component, setting } = this.props;\n    const { definition } = setting;\n    const componentKey = component && component.key;\n    return this.props.resetValue(definition.key, componentKey).then(() => {\n      this.props.cancelChange(definition.key);\n      this.safeSetState({ success: true });\n      this.timeout = window.setTimeout(() => this.safeSetState({ success: false }), 3000);\n    });\n  };\n\n  handleCancel = () => {\n    const { setting } = this.props;\n    this.props.cancelChange(setting.definition.key);\n    this.props.passValidation(setting.definition.key);\n  };\n\n  handleCheck = () => {\n    const { setting } = this.props;\n    this.props.checkValue(setting.definition.key);\n  };\n\n  handleSave = () => {\n    if (this.props.changedValue != null) {\n      this.safeSetState({ success: false });\n      const { component, setting } = this.props;\n      this.props.saveValue(setting.definition.key, component && component.key).then(\n        () => {\n          this.safeSetState({ success: true });\n          this.timeout = window.setTimeout(() => this.safeSetState({ success: false }), 3000);\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { changedValue, loading, setting, validationMessage } = this.props;\n    const { definition } = setting;\n    const propertyName = getPropertyName(definition);\n    const hasError = validationMessage != null;\n    const hasValueChanged = changedValue != null;\n    const effectiveValue = hasValueChanged ? changedValue : getSettingValue(setting);\n    const isDefault = isDefaultOrInherited(setting);\n    const description = getPropertyDescription(definition);\n    return (\n      <div\n        className={classNames('settings-definition', {\n          'settings-definition-changed': hasValueChanged\n        })}\n        data-key={definition.key}>\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\" title={propertyName}>\n            {propertyName}\n          </h3>\n\n          {description && (\n            <div\n              className=\"markdown small spacer-top\"\n              dangerouslySetInnerHTML={{ __html: sanitizeTranslation(description) }}\n            />\n          )}\n\n          <div className=\"settings-definition-key note little-spacer-top\">\n            {translateWithParameters('settings.key_x', definition.key)}\n          </div>\n        </div>\n\n        <div className=\"settings-definition-right\">\n          <div className=\"settings-definition-state\">\n            {loading && (\n              <span className=\"text-info\">\n                <i className=\"spinner spacer-right\" />\n                {translate('settings.state.saving')}\n              </span>\n            )}\n\n            {!loading && validationMessage && (\n              <span className=\"text-danger\">\n                <AlertErrorIcon className=\"spacer-right\" />\n                <span>\n                  {translateWithParameters('settings.state.validation_failed', validationMessage)}\n                </span>\n              </span>\n            )}\n\n            {!loading && !hasError && this.state.success && (\n              <span className=\"text-success\">\n                <AlertSuccessIcon className=\"spacer-right\" />\n                {translate('settings.state.saved')}\n              </span>\n            )}\n          </div>\n\n          <Input\n            hasValueChanged={hasValueChanged}\n            onCancel={this.handleCancel}\n            onChange={this.handleChange}\n            onSave={this.handleSave}\n            setting={setting}\n            value={effectiveValue}\n          />\n\n          <DefinitionActions\n            changedValue={changedValue}\n            hasError={hasError}\n            hasValueChanged={hasValueChanged}\n            isDefault={isDefault}\n            onCancel={this.handleCancel}\n            onReset={this.handleReset}\n            onSave={this.handleSave}\n            setting={setting}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store, ownProps: Pick<Props, 'setting'>) => ({\n  changedValue: getSettingsAppChangedValue(state, ownProps.setting.definition.key),\n  loading: isSettingsAppLoading(state, ownProps.setting.definition.key),\n  validationMessage: getSettingsAppValidationMessage(state, ownProps.setting.definition.key)\n});\n\nconst mapDispatchToProps = {\n  cancelChange: cancelChange as any,\n  changeValue: changeValue as any,\n  checkValue: checkValue as any,\n  passValidation: passValidation as any,\n  resetValue: resetValue as any,\n  saveValue: saveValue as any\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Definition);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Definition from './Definition';\n\ninterface Props {\n  component?: T.Component;\n  settings: T.Setting[];\n}\n\nexport default function DefinitionsList({ component, settings }: Props) {\n  return (\n    <ul className=\"settings-definitions-list\">\n      {settings.map(setting => (\n        <li key={setting.definition.key}>\n          <Definition component={component} setting={setting} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport { sendTestEmail } from '../../../api/settings';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  recipient: string;\n  subject: string;\n  message: string;\n  loading: boolean;\n  success?: string;\n  error?: string;\n}\n\nexport class EmailForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      recipient: this.props.currentUser.email || '',\n      subject: translate('email_configuration.test.subject'),\n      message: translate('email_configuration.test.message_text'),\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleError = (response: Response) => {\n    return parseError(response).then(message => {\n      if (this.mounted) {\n        this.setState({ error: message, loading: false });\n      }\n    });\n  };\n\n  handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.setState({ success: undefined, error: undefined, loading: true });\n    const { recipient, subject, message } = this.state;\n    sendTestEmail(recipient, subject, message).then(() => {\n      if (this.mounted) {\n        this.setState({ success: recipient, loading: false });\n      }\n    }, this.handleError);\n  };\n\n  onRecipientChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ recipient: event.target.value });\n  };\n\n  onSubjectChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ subject: event.target.value });\n  };\n\n  onMessageChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ message: event.target.value });\n  };\n\n  render() {\n    const { error, loading, message, recipient, subject, success } = this.state;\n    return (\n      <div className=\"settings-definition\">\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\">\n            {translate('email_configuration.test.title')}\n          </h3>\n        </div>\n\n        <form className=\"settings-definition-right\" onSubmit={this.handleFormSubmit}>\n          {success && (\n            <div className=\"form-field\">\n              <Alert variant=\"success\">\n                {translateWithParameters('email_configuration.test.email_was_sent_to_x', success)}\n              </Alert>\n            </div>\n          )}\n\n          {error !== undefined && (\n            <div className=\"form-field\">\n              <Alert variant=\"error\">{error}</Alert>\n            </div>\n          )}\n\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-to\">\n              {translate('email_configuration.test.to_address')}\n              <em className=\"mandatory\">*</em>\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={loading}\n              id=\"test-email-to\"\n              onChange={this.onRecipientChange}\n              required={true}\n              type=\"email\"\n              value={recipient}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-subject\">\n              {translate('email_configuration.test.subject')}\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={loading}\n              id=\"test-email-subject\"\n              onChange={this.onSubjectChange}\n              type=\"text\"\n              value={subject}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-message\">\n              {translate('email_configuration.test.message')}\n              <em className=\"mandatory\">*</em>\n            </label>\n            <textarea\n              className=\"settings-large-input\"\n              disabled={loading}\n              id=\"test-email-message\"\n              onChange={this.onMessageChange}\n              required={true}\n              rows={5}\n              value={message}\n            />\n          </div>\n\n          <SubmitButton disabled={loading}>\n            {translate('email_configuration.test.send')}\n          </SubmitButton>\n          {loading && <DeferredSpinner className=\"spacer-left\" />}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withCurrentUser(EmailForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy, isEqual, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { getSubCategoryDescription, getSubCategoryName, sanitizeTranslation } from '../utils';\nimport DefinitionsList from './DefinitionsList';\nimport EmailForm from './EmailForm';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n  fetchValues: Function;\n  settings: Array<T.Setting & { definition: T.SettingCategoryDefinition }>;\n  subCategory?: string;\n}\n\nexport default class SubCategoryDefinitionsList extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.fetchValues();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevKeys = prevProps.settings.map(setting => setting.definition.key);\n    const keys = this.props.settings.map(setting => setting.definition.key);\n    if (prevProps.component !== this.props.component || !isEqual(prevKeys, keys)) {\n      this.fetchValues();\n    }\n  }\n\n  fetchValues() {\n    const keys = this.props.settings.map(setting => setting.definition.key).join();\n    this.props.fetchValues(keys, this.props.component && this.props.component.key);\n  }\n\n  renderEmailForm = (subCategoryKey: string) => {\n    const isEmailSettings = this.props.category === 'general' && subCategoryKey === 'email';\n    if (!isEmailSettings) {\n      return null;\n    }\n    return <EmailForm />;\n  };\n\n  render() {\n    const bySubCategory = groupBy(this.props.settings, setting => setting.definition.subCategory);\n    const subCategories = Object.keys(bySubCategory).map(key => ({\n      key,\n      name: getSubCategoryName(bySubCategory[key][0].definition.category, key),\n      description: getSubCategoryDescription(bySubCategory[key][0].definition.category, key)\n    }));\n    const sortedSubCategories = sortBy(subCategories, subCategory =>\n      subCategory.name.toLowerCase()\n    );\n    const filteredSubCategories = this.props.subCategory\n      ? sortedSubCategories.filter(c => c.key === this.props.subCategory)\n      : sortedSubCategories;\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        {filteredSubCategories.map(subCategory => (\n          <li key={subCategory.key}>\n            <h2 className=\"settings-sub-category-name\">{subCategory.name}</h2>\n            {subCategory.description != null && (\n              <div\n                className=\"settings-sub-category-description markdown\"\n                dangerouslySetInnerHTML={{ __html: sanitizeTranslation(subCategory.description) }}\n              />\n            )}\n            <DefinitionsList\n              component={this.props.component}\n              settings={bySubCategory[subCategory.key]}\n            />\n            {this.renderEmailForm(subCategory.key)}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getSettingsAppSettingsForCategory, Store } from '../../../store/rootReducer';\nimport { fetchValues } from '../store/actions';\nimport SubCategoryDefinitionsList from './SubCategoryDefinitionsList';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n}\n\nconst mapStateToProps = (state: Store, ownProps: Props) => ({\n  settings: getSettingsAppSettingsForCategory(\n    state,\n    ownProps.category,\n    ownProps.component && ownProps.component.key\n  )\n});\n\nconst mapDispatchToProps = { fetchValues };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubCategoryDefinitionsList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GithubBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface GithubFormProps {\n  formData: GithubBindingDefinition;\n  onFieldChange: (fieldId: keyof GithubBindingDefinition, value: string) => void;\n}\n\nexport default function GithubForm(props: GithubFormProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmBindingDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.almintegration.form.name.github.help')}\n        id=\"name.github\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.github.help1')}\n            <br />\n            <em>https://github.company.com/api/v3</em>\n            <br />\n            <br />\n            {translate('settings.almintegration.form.url.github.help2')}\n            <br />\n            <em>https://api.github.com/</em>\n          </>\n        }\n        id=\"url.github\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        value={formData.url}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"app_id\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"appId\"\n        value={formData.appId}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"client_id.github\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"clientId\"\n        value={formData.clientId}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"client_secret.github\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        overwriteOnly={Boolean(formData.key)}\n        propKey=\"clientSecret\"\n        value={formData.clientSecret}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"private_key\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        overwriteOnly={Boolean(formData.key)}\n        propKey=\"privateKey\"\n        value={formData.privateKey}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createGithubConfiguration, updateGithubConfiguration } from '../../../../api/alm-settings';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  GithubBindingDefinition\n} from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmTab from './AlmTab';\nimport GithubForm from './GithubForm';\n\nexport interface GithubTabProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  definitions: GithubBindingDefinition[];\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function GithubTab(props: GithubTabProps) {\n  const {\n    branchesEnabled,\n    component,\n    multipleAlmEnabled,\n    definitions,\n    definitionStatus,\n    loadingAlmDefinitions,\n    loadingProjectCount\n  } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        alm={AlmKeys.GitHub}\n        branchesEnabled={branchesEnabled}\n        createConfiguration={createGithubConfiguration}\n        defaultBinding={{\n          key: '',\n          appId: '',\n          clientId: '',\n          clientSecret: '',\n          url: '',\n          privateKey: ''\n        }}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        form={childProps => <GithubForm {...childProps} />}\n        help={\n          <FormattedMessage\n            defaultMessage={translate(`settings.almintegration.github.info`)}\n            id=\"settings.almintegration.github.info\"\n            values={{\n              link: (\n                <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.GitHub]}>\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        }\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCheck={props.onCheck}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateGithubConfiguration}\n      />\n\n      <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList\n          category={ALM_INTEGRATION}\n          component={component}\n          subCategory={AlmKeys.GitHub}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface GitlabFormProps {\n  formData: GitlabBindingDefinition;\n  onFieldChange: (fieldId: keyof GitlabBindingDefinition, value: string) => void;\n}\n\nexport default function GitlabForm(props: GitlabFormProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmBindingDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.almintegration.form.name.gitlab.help')}\n        id=\"name.gitlab\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.gitlab.help')}\n            <br />\n            <em>https://gitlab.com/api/v4</em>\n          </>\n        }\n        id=\"url.gitlab\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        value={formData.url || ''}\n      />\n      <AlmBindingDefinitionFormField\n        help={translate('settings.almintegration.form.personal_access_token.gitlab.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        overwriteOnly={Boolean(formData.key)}\n        propKey=\"personalAccessToken\"\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createGitlabConfiguration, updateGitlabConfiguration } from '../../../../api/alm-settings';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  GitlabBindingDefinition\n} from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmTab from './AlmTab';\nimport GitlabForm from './GitlabForm';\n\nexport interface GitlabTabProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  definitions: GitlabBindingDefinition[];\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function GitlabTab(props: GitlabTabProps) {\n  const {\n    branchesEnabled,\n    component,\n    multipleAlmEnabled,\n    definitions,\n    definitionStatus,\n    loadingAlmDefinitions,\n    loadingProjectCount\n  } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        alm={AlmKeys.GitLab}\n        branchesEnabled={branchesEnabled}\n        createConfiguration={createGitlabConfiguration}\n        defaultBinding={{ key: '', personalAccessToken: '', url: '' }}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        form={childProps => <GitlabForm {...childProps} />}\n        help={\n          <FormattedMessage\n            defaultMessage={translate(`settings.almintegration.gitlab.info`)}\n            id=\"settings.almintegration.gitlab.info\"\n            values={{\n              link: (\n                <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.GitLab]}>\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        }\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCheck={props.onCheck}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateGitlabConfiguration}\n      />\n\n      <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList\n          category={ALM_INTEGRATION}\n          component={component}\n          subCategory={AlmKeys.GitLab}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BoxedTabs from 'sonar-ui-common/components/controls/BoxedTabs';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport {\n  AlmKeys,\n  AlmSettingsBindingDefinitions,\n  AlmSettingsBindingStatus\n} from '../../../../types/alm-settings';\nimport AzureTab from './AzureTab';\nimport BitbucketTab from './BitbucketTab';\nimport DeleteModal from './DeleteModal';\nimport GithubTab from './GithubTab';\nimport GitlabTab from './GitlabTab';\n\nexport interface AlmIntegrationRendererProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  currentAlm: AlmKeys;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onCheck: (definitionKey: string) => void;\n  onConfirmDelete: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onSelectAlm: (alm: AlmKeys) => void;\n  onUpdateDefinitions: () => void;\n  projectCount?: number;\n}\n\nconst tabs = [\n  {\n    key: AlmKeys.GitHub,\n    label: (\n      <>\n        <img\n          alt=\"github\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/github.svg`}\n        />\n        GitHub\n      </>\n    ),\n    requiresBranchesEnabled: false\n  },\n  {\n    key: AlmKeys.BitbucketServer,\n    label: (\n      <>\n        <img\n          alt=\"bitbucket\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n        />\n        Bitbucket\n      </>\n    ),\n    requiresBranchesEnabled: false\n  },\n  {\n    key: AlmKeys.Azure,\n    label: (\n      <>\n        <img\n          alt=\"azure\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/azure.svg`}\n        />\n        Azure DevOps\n      </>\n    ),\n    requiresBranchesEnabled: false\n  },\n  {\n    key: AlmKeys.GitLab,\n    label: (\n      <>\n        <img\n          alt=\"gitlab\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/gitlab.svg`}\n        />\n        GitLab\n      </>\n    ),\n    requiresBranchesEnabled: false\n  }\n];\n\nexport default function AlmIntegrationRenderer(props: AlmIntegrationRendererProps) {\n  const {\n    component,\n    definitionKeyForDeletion,\n    definitions,\n    definitionStatus,\n    currentAlm,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    branchesEnabled,\n    multipleAlmEnabled,\n    projectCount\n  } = props;\n\n  return (\n    <>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.almintegration.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.almintegration.description')}\n      </div>\n      <BoxedTabs\n        onSelect={props.onSelectAlm}\n        selected={currentAlm}\n        tabs={tabs.filter(tab => !(tab.requiresBranchesEnabled && !branchesEnabled))}\n      />\n\n      {currentAlm === AlmKeys.Azure && (\n        <AzureTab\n          branchesEnabled={branchesEnabled}\n          definitions={definitions.azure}\n          definitionStatus={definitionStatus}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onCheck={props.onCheck}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.BitbucketServer && (\n        <BitbucketTab\n          branchesEnabled={branchesEnabled}\n          definitions={[...definitions.bitbucket, ...definitions.bitbucketcloud]}\n          definitionStatus={definitionStatus}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onCheck={props.onCheck}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.GitHub && (\n        <GithubTab\n          branchesEnabled={branchesEnabled}\n          component={component}\n          definitions={definitions.github}\n          definitionStatus={definitionStatus}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onCheck={props.onCheck}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.GitLab && (\n        <GitlabTab\n          branchesEnabled={branchesEnabled}\n          definitions={definitions.gitlab}\n          definitionStatus={definitionStatus}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onCheck={props.onCheck}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n\n      {definitionKeyForDeletion && (\n        <DeleteModal\n          id={definitionKeyForDeletion}\n          onCancel={props.onCancel}\n          onDelete={props.onConfirmDelete}\n          projectCount={projectCount}\n        />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { AlmKeys } from '../../../../types/alm-settings';\n\nexport const ALM_KEY_LIST = [\n  AlmKeys.Azure,\n  AlmKeys.BitbucketServer,\n  AlmKeys.BitbucketCloud,\n  AlmKeys.GitHub,\n  AlmKeys.GitLab\n];\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport {\n  countBindedProjects,\n  deleteConfiguration,\n  getAlmDefinitions,\n  validateAlmSettings\n} from '../../../../api/alm-settings';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { withRouter } from '../../../../components/hoc/withRouter';\nimport {\n  AlmBindingDefinition,\n  AlmKeys,\n  AlmSettingsBindingDefinitions,\n  AlmSettingsBindingStatus,\n  AlmSettingsBindingStatusType\n} from '../../../../types/alm-settings';\nimport AlmIntegrationRenderer from './AlmIntegrationRenderer';\nimport { ALM_KEY_LIST } from './utils';\n\ninterface Props extends Pick<WithRouterProps, 'location'> {\n  appState: Pick<T.AppState, 'branchesEnabled' | 'multipleAlmEnabled'>;\n  component?: T.Component;\n}\n\ninterface State {\n  currentAlm: AlmKeys;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  projectCount?: number;\n}\n\nexport class AlmIntegration extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      currentAlm: props.location.query.alm || AlmKeys.GitHub,\n      definitions: {\n        [AlmKeys.Azure]: [],\n        [AlmKeys.BitbucketServer]: [],\n        [AlmKeys.BitbucketCloud]: [],\n        [AlmKeys.GitHub]: [],\n        [AlmKeys.GitLab]: []\n      },\n      definitionStatus: {},\n      loadingAlmDefinitions: true,\n      loadingProjectCount: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    return this.fetchPullRequestDecorationSetting().then(definitions => {\n      if (definitions) {\n        // Validate all alms on load:\n        ALM_KEY_LIST.forEach(alm => {\n          this.state.definitions[alm].forEach((def: AlmBindingDefinition) =>\n            this.handleCheck(def.key, false)\n          );\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  deleteConfiguration = (definitionKey: string) => {\n    return deleteConfiguration(definitionKey)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n        }\n      })\n      .then(this.fetchPullRequestDecorationSetting);\n  };\n\n  fetchPullRequestDecorationSetting = () => {\n    this.setState({ loadingAlmDefinitions: true });\n    return getAlmDefinitions()\n      .then(definitions => {\n        if (this.mounted) {\n          this.setState({\n            definitions,\n            loadingAlmDefinitions: false\n          });\n          return definitions;\n        }\n        return undefined;\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loadingAlmDefinitions: false });\n        }\n      });\n  };\n\n  handleSelectAlm = (currentAlm: AlmKeys) => {\n    this.setState({ currentAlm });\n  };\n\n  handleCancel = () => {\n    this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n  };\n\n  handleDelete = (definitionKey: string) => {\n    this.setState({ loadingProjectCount: true });\n    return countBindedProjects(definitionKey)\n      .then(projectCount => {\n        if (this.mounted) {\n          this.setState({\n            definitionKeyForDeletion: definitionKey,\n            loadingProjectCount: false,\n            projectCount\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loadingProjectCount: false });\n        }\n      });\n  };\n\n  handleCheck = async (definitionKey: string, alertSuccess = true) => {\n    this.setState(({ definitionStatus }) => {\n      definitionStatus[definitionKey] = {\n        ...definitionStatus[definitionKey],\n        type: AlmSettingsBindingStatusType.Validating\n      };\n\n      return { definitionStatus: { ...definitionStatus } };\n    });\n\n    let type: AlmSettingsBindingStatusType;\n    let failureMessage = '';\n\n    try {\n      failureMessage = await validateAlmSettings(definitionKey);\n      type = failureMessage\n        ? AlmSettingsBindingStatusType.Failure\n        : AlmSettingsBindingStatusType.Success;\n    } catch (_) {\n      type = AlmSettingsBindingStatusType.Warning;\n    }\n\n    if (this.mounted) {\n      this.setState(({ definitionStatus }) => {\n        definitionStatus[definitionKey] = {\n          alertSuccess,\n          failureMessage,\n          type\n        };\n\n        return { definitionStatus: { ...definitionStatus } };\n      });\n    }\n  };\n\n  render() {\n    const {\n      appState: { branchesEnabled, multipleAlmEnabled },\n      component\n    } = this.props;\n    return (\n      <AlmIntegrationRenderer\n        branchesEnabled={Boolean(branchesEnabled)}\n        component={component}\n        multipleAlmEnabled={Boolean(multipleAlmEnabled)}\n        onCancel={this.handleCancel}\n        onConfirmDelete={this.deleteConfiguration}\n        onCheck={this.handleCheck}\n        onDelete={this.handleDelete}\n        onSelectAlm={this.handleSelectAlm}\n        onUpdateDefinitions={this.fetchPullRequestDecorationSetting}\n        {...this.state}\n      />\n    );\n  }\n}\n\nexport default withRouter(withAppState(AlmIntegration));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\n\nexport function AnalysisScope(props: AdditionalCategoryComponentProps) {\n  const { component, selectedCategory } = props;\n\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        {translate('settings.analysis_scope.wildcards.introduction')}\n        <Link\n          className=\"spacer-left\"\n          to=\"/documentation/project-administration/narrowing-the-focus/\">\n          {translate('learn_more')}\n        </Link>\n      </p>\n\n      <table className=\"data spacer-bottom\">\n        <tbody>\n          <tr>\n            <td>*</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_char')}</td>\n          </tr>\n          <tr>\n            <td>**</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_dir')}</td>\n          </tr>\n          <tr>\n            <td>?</td>\n            <td>{translate('settings.analysis_scope.wildcards.single_char')}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className=\"settings-sub-category\">\n        <CategoryDefinitionsList category={selectedCategory} component={component} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\n\nconst CATEGORY_OVERRIDES: T.Dict<string> = {\n  abap: LANGUAGES_CATEGORY,\n  apex: LANGUAGES_CATEGORY,\n  'c / c++ / objective-c': LANGUAGES_CATEGORY,\n  'c#': LANGUAGES_CATEGORY,\n  cobol: LANGUAGES_CATEGORY,\n  css: LANGUAGES_CATEGORY,\n  flex: LANGUAGES_CATEGORY,\n  go: LANGUAGES_CATEGORY,\n  html: LANGUAGES_CATEGORY,\n  java: LANGUAGES_CATEGORY,\n  javascript: LANGUAGES_CATEGORY,\n  'javascript / typescript': LANGUAGES_CATEGORY,\n  kotlin: LANGUAGES_CATEGORY,\n  php: LANGUAGES_CATEGORY,\n  'pl/i': LANGUAGES_CATEGORY,\n  'pl/sql': LANGUAGES_CATEGORY,\n  python: LANGUAGES_CATEGORY,\n  rpg: LANGUAGES_CATEGORY,\n  ruby: LANGUAGES_CATEGORY,\n  scala: LANGUAGES_CATEGORY,\n  swift: LANGUAGES_CATEGORY,\n  't-sql': LANGUAGES_CATEGORY,\n  typescript: LANGUAGES_CATEGORY,\n  'vb.net': LANGUAGES_CATEGORY,\n  'visual basic': LANGUAGES_CATEGORY,\n  xml: LANGUAGES_CATEGORY\n};\n\nexport default CATEGORY_OVERRIDES;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\n\nexport interface LanguagesProps extends AdditionalCategoryComponentProps {\n  categories: string[];\n  location: Location;\n  router: Router;\n}\n\ninterface SelectOption {\n  label: string;\n  originalValue: string;\n  value: string;\n}\n\nexport function Languages(props: LanguagesProps) {\n  const { categories, component, location, router, selectedCategory } = props;\n  const { availableLanguages, selectedLanguage } = getLanguages(categories, selectedCategory);\n\n  const handleOnChange = (newOption: SelectOption) => {\n    router.push({\n      ...location,\n      query: { ...location.query, category: newOption.originalValue }\n    });\n  };\n\n  return (\n    <>\n      <h2 className=\"settings-sub-category-name\">{translate('property.category.languages')}</h2>\n      <div data-test=\"language-select\">\n        <Select\n          className=\"input-large\"\n          onChange={handleOnChange}\n          options={availableLanguages}\n          placeholder={translate('settings.languages.select_a_language_placeholder')}\n          value={selectedLanguage}\n        />\n      </div>\n      {selectedLanguage && (\n        <div className=\"settings-sub-category\">\n          <CategoryDefinitionsList category={selectedLanguage} component={component} />\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction getLanguages(categories: string[], selectedCategory: string) {\n  const lowerCasedLanguagesCategory = LANGUAGES_CATEGORY.toLowerCase();\n  const lowerCasedSelectedCategory = selectedCategory.toLowerCase();\n\n  const availableLanguages = categories\n    .filter(c => CATEGORY_OVERRIDES[c.toLowerCase()] === lowerCasedLanguagesCategory)\n    .map(c => ({\n      label: getCategoryName(c),\n      value: c.toLowerCase(),\n      originalValue: c\n    }));\n\n  let selectedLanguage = undefined;\n\n  if (\n    lowerCasedSelectedCategory !== lowerCasedLanguagesCategory &&\n    availableLanguages.find(c => c.value === lowerCasedSelectedCategory)\n  ) {\n    selectedLanguage = lowerCasedSelectedCategory;\n  }\n\n  return {\n    availableLanguages,\n    selectedLanguage\n  };\n}\n\nexport default withRouter(\n  connect((state: Store) => ({\n    categories: getSettingsAppAllCategories(state)\n  }))(Languages)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getNewCodePeriod, setNewCodePeriod } from '../../../api/newCodePeriod';\nimport BaselineSettingDays from '../../projectBaseline/components/BaselineSettingDays';\nimport BaselineSettingPreviousVersion from '../../projectBaseline/components/BaselineSettingPreviousVersion';\nimport { validateDays } from '../../projectBaseline/utils';\n\ninterface State {\n  currentSetting?: T.NewCodePeriodSettingType;\n  days: string;\n  loading: boolean;\n  currentSettingValue?: string | number;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n  success: boolean;\n}\n\nconst DEFAULT_SETTING = 'PREVIOUS_VERSION';\n\nexport default class NewCodePeriod extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    loading: true,\n    days: '30',\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchNewCodePeriodSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNewCodePeriodSetting() {\n    getNewCodePeriod()\n      .then(({ type, value }) => {\n        const currentSetting = type || DEFAULT_SETTING;\n\n        this.setState(({ days }) => ({\n          currentSetting,\n          days: currentSetting === 'NUMBER_OF_DAYS' ? String(value) : days,\n          loading: false,\n          currentSettingValue: value,\n          selected: currentSetting\n        }));\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  onSelectDays = (days: string) => {\n    this.setState({ days, success: false });\n  };\n\n  onSelectSetting = (selected: T.NewCodePeriodSettingType) => {\n    this.setState({ selected, success: false });\n  };\n\n  onCancel = () => {\n    this.setState(({ currentSetting, currentSettingValue, days }) => ({\n      selected: currentSetting,\n      days: currentSetting === 'NUMBER_OF_DAYS' ? String(currentSettingValue) : days\n    }));\n  };\n\n  onSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { days, selected } = this.state;\n\n    const type = selected;\n    const value = type === 'NUMBER_OF_DAYS' ? days : undefined;\n\n    if (type) {\n      this.setState({ saving: true, success: false });\n      setNewCodePeriod({\n        type,\n        value\n      }).then(\n        () => {\n          this.setState({\n            saving: false,\n            currentSetting: type,\n            currentSettingValue: value || undefined,\n            success: true\n          });\n        },\n        () => {\n          this.setState({\n            saving: false\n          });\n        }\n      );\n    }\n  };\n\n  render() {\n    const {\n      currentSetting,\n      days,\n      loading,\n      currentSettingValue,\n      saving,\n      selected,\n      success\n    } = this.state;\n\n    const isChanged =\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && String(days) !== currentSettingValue);\n\n    const isValid = selected !== 'NUMBER_OF_DAYS' || validateDays(days);\n\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        <li>\n          <ul className=\"settings-definitions-list\">\n            <li>\n              <div className=\"settings-definition\">\n                <div className=\"settings-definition-left\">\n                  <h3\n                    className=\"settings-definition-name\"\n                    title={translate('settings.new_code_period.title')}>\n                    {translate('settings.new_code_period.title')}\n                  </h3>\n\n                  <div className=\"small big-spacer-top\">\n                    <FormattedMessage\n                      defaultMessage={translate('settings.new_code_period.description')}\n                      id=\"settings.new_code_period.description\"\n                      values={{\n                        link: (\n                          <Link to=\"/documentation/project-administration/new-code-period/\">\n                            {translate('learn_more')}\n                          </Link>\n                        )\n                      }}\n                    />\n                    <p className=\"spacer-top\">\n                      {translate('settings.new_code_period.description2')}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"settings-definition-right\">\n                  {loading ? (\n                    <DeferredSpinner />\n                  ) : (\n                    <form onSubmit={this.onSubmit}>\n                      <BaselineSettingPreviousVersion\n                        isDefault={true}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'PREVIOUS_VERSION'}\n                      />\n                      <BaselineSettingDays\n                        className=\"spacer-top\"\n                        days={days}\n                        isChanged={isChanged}\n                        isValid={isValid}\n                        onChangeDays={this.onSelectDays}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'NUMBER_OF_DAYS'}\n                      />\n                      {isChanged && (\n                        <div className=\"big-spacer-top\">\n                          <p className=\"spacer-bottom\">\n                            {translate('baseline.next_analysis_notice')}\n                          </p>\n                          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n                          <SubmitButton disabled={saving || !isValid}>\n                            {translate('save')}\n                          </SubmitButton>\n                          <ResetButtonLink className=\"spacer-left\" onClick={this.onCancel}>\n                            {translate('cancel')}\n                          </ResetButtonLink>\n                        </div>\n                      )}\n                      {!saving && !loading && success && (\n                        <div className=\"big-spacer-top\">\n                          <span className=\"text-success\">\n                            <AlertSuccessIcon className=\"spacer-right\" />\n                            {translate('settings.state.saved')}\n                          </span>\n                        </div>\n                      )}\n                    </form>\n                  )}\n                </div>\n              </div>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport { AlmKeys, ProjectAlmBindingResponse } from '../../../../types/alm-settings';\nimport InputForBoolean from '../inputs/InputForBoolean';\n\nexport interface AlmSpecificFormProps {\n  alm: AlmKeys;\n  formData: T.Omit<ProjectAlmBindingResponse, 'alm'>;\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  monorepoEnabled: boolean;\n}\n\ninterface LabelProps {\n  help?: boolean;\n  helpParams?: T.Dict<string | JSX.Element>;\n  id: string;\n  optional?: boolean;\n}\n\ninterface CommonFieldProps extends LabelProps {\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  propKey: keyof ProjectAlmBindingResponse;\n}\n\nfunction renderLabel(props: LabelProps) {\n  const { help, helpParams, optional, id } = props;\n  return (\n    <label className=\"display-flex-center\" htmlFor={id}>\n      {translate('settings.pr_decoration.binding.form', id)}\n      {!optional && <em className=\"mandatory\">*</em>}\n      {help && (\n        <HelpTooltip\n          className=\"spacer-left\"\n          overlay={\n            <FormattedMessage\n              defaultMessage={translate('settings.pr_decoration.binding.form', id, 'help')}\n              id={`settings.pr_decoration.binding.form.${id}.help`}\n              values={helpParams}\n            />\n          }\n          placement=\"right\"\n        />\n      )}\n    </label>\n  );\n}\n\nfunction renderBooleanField(\n  props: Omit<CommonFieldProps, 'optional'> & {\n    value: boolean;\n    inputExtra?: React.ReactNode;\n  }\n) {\n  const { id, value, onFieldChange, propKey, inputExtra } = props;\n  return (\n    <div className=\"form-field\">\n      {renderLabel({ ...props, optional: true })}\n      <div className=\"display-flex-center\">\n        <InputForBoolean\n          isDefault={true}\n          name={id}\n          onChange={v => onFieldChange(propKey, v)}\n          value={value}\n        />\n        {inputExtra}\n      </div>\n    </div>\n  );\n}\n\nfunction renderField(\n  props: CommonFieldProps & {\n    value: string;\n  }\n) {\n  const { id, propKey, value, onFieldChange } = props;\n  return (\n    <div className=\"form-field\">\n      {renderLabel(props)}\n      <input\n        className=\"input-super-large\"\n        id={id}\n        maxLength={256}\n        name={id}\n        onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n        type=\"text\"\n        value={value}\n      />\n    </div>\n  );\n}\n\nfunction renderMonoRepoField(props: {\n  monorepoEnabled: boolean;\n  value?: boolean;\n  docLink: string;\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n}) {\n  if (!props.monorepoEnabled) {\n    return null;\n  }\n\n  return renderBooleanField({\n    help: true,\n    helpParams: {\n      doc_link: (\n        <Link to={props.docLink} target=\"_blank\">\n          {translate('learn_more')}\n        </Link>\n      )\n    },\n    id: 'monorepo',\n    onFieldChange: props.onFieldChange,\n    propKey: 'monorepo',\n    value: props.value ?? false,\n    inputExtra: props.value && (\n      <Alert className=\"no-margin-bottom spacer-left\" variant=\"warning\" display=\"inline\">\n        {translate('settings.pr_decoration.binding.form.monorepo.warning')}\n      </Alert>\n    )\n  });\n}\n\nexport default function AlmSpecificForm(props: AlmSpecificFormProps) {\n  const {\n    alm,\n    formData: { repository, slug, summaryCommentEnabled, monorepo },\n    monorepoEnabled\n  } = props;\n\n  const renderMonoRepoFieldWithDocLink = (docLink: string) => {\n    return renderMonoRepoField({\n      monorepoEnabled,\n      value: monorepo,\n      docLink,\n      onFieldChange: props.onFieldChange\n    });\n  };\n\n  switch (alm) {\n    case AlmKeys.Azure:\n      return (\n        <>\n          {renderField({\n            help: true,\n            id: 'azure.project',\n            onFieldChange: props.onFieldChange,\n            propKey: 'slug',\n            value: slug || ''\n          })}\n          {renderField({\n            help: true,\n            id: 'azure.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n          {renderMonoRepoFieldWithDocLink(ALM_DOCUMENTATION_PATHS[AlmKeys.Azure])}\n        </>\n      );\n    case AlmKeys.BitbucketServer:\n      return (\n        <>\n          {renderField({\n            help: true,\n            helpParams: {\n              example: (\n                <>\n                  {'.../projects/'}\n                  <strong>{'{KEY}'}</strong>\n                  {'/repos/{SLUG}/browse'}\n                </>\n              )\n            },\n            id: 'bitbucket.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n          {renderField({\n            help: true,\n            helpParams: {\n              example: (\n                <>\n                  {'.../projects/{KEY}/repos/'}\n                  <strong>{'{SLUG}'}</strong>\n                  {'/browse'}\n                </>\n              )\n            },\n            id: 'bitbucket.slug',\n            onFieldChange: props.onFieldChange,\n            propKey: 'slug',\n            value: slug || ''\n          })}\n          {renderMonoRepoFieldWithDocLink(ALM_DOCUMENTATION_PATHS[AlmKeys.BitbucketServer])}\n        </>\n      );\n    case AlmKeys.BitbucketCloud:\n      return (\n        <>\n          {renderField({\n            help: true,\n            helpParams: {\n              example: (\n                <>\n                  {'https://bitbucket.org/{workspace}/'}\n                  <strong>{'{repository}'}</strong>\n                </>\n              )\n            },\n            id: 'bitbucketcloud.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n        </>\n      );\n    case AlmKeys.GitHub:\n      return (\n        <>\n          {renderField({\n            help: true,\n            helpParams: { example: 'SonarSource/sonarqube' },\n            id: 'github.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n          {renderBooleanField({\n            help: true,\n            id: 'github.summary_comment_setting',\n            onFieldChange: props.onFieldChange,\n            propKey: 'summaryCommentEnabled',\n            value: summaryCommentEnabled === undefined ? true : summaryCommentEnabled\n          })}\n          {renderMonoRepoFieldWithDocLink(ALM_DOCUMENTATION_PATHS[AlmKeys.GitHub])}\n        </>\n      );\n    case AlmKeys.GitLab:\n      return (\n        <>\n          {renderField({\n            id: 'gitlab.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n          {renderMonoRepoFieldWithDocLink(ALM_DOCUMENTATION_PATHS[AlmKeys.GitLab])}\n        </>\n      );\n    default:\n      return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmSettingsInstance, ProjectAlmBindingResponse } from '../../../../types/alm-settings';\nimport AlmSpecificForm from './AlmSpecificForm';\n\nexport interface PRDecorationBindingRendererProps {\n  formData: T.Omit<ProjectAlmBindingResponse, 'alm'>;\n  instances: AlmSettingsInstance[];\n  isChanged: boolean;\n  isConfigured: boolean;\n  isValid: boolean;\n  loading: boolean;\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  onReset: () => void;\n  onSubmit: () => void;\n  saving: boolean;\n  success: boolean;\n  monorepoEnabled: boolean;\n}\n\nfunction optionRenderer(instance: AlmSettingsInstance) {\n  return instance.url ? (\n    <>\n      <span>{instance.key} — </span>\n      <span className=\"text-muted\">{instance.url}</span>\n    </>\n  ) : (\n    <span>{instance.key}</span>\n  );\n}\n\nexport default function PRDecorationBindingRenderer(props: PRDecorationBindingRendererProps) {\n  const {\n    formData,\n    instances,\n    isChanged,\n    isConfigured,\n    isValid,\n    loading,\n    saving,\n    success,\n    monorepoEnabled\n  } = props;\n\n  if (loading) {\n    return <DeferredSpinner />;\n  }\n\n  if (instances.length < 1) {\n    return (\n      <div>\n        <Alert className=\"spacer-top huge-spacer-bottom\" variant=\"info\">\n          <FormattedMessage\n            defaultMessage={translate('settings.pr_decoration.binding.no_bindings')}\n            id=\"settings.pr_decoration.binding.no_bindings\"\n            values={{\n              link: (\n                <Link to=\"/documentation/analysis/pull-request/#pr-decoration\">\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        </Alert>\n      </div>\n    );\n  }\n\n  const selected = formData.key && instances.find(i => i.key === formData.key);\n  const alm = selected && selected.alm;\n\n  return (\n    <div>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.pr_decoration.binding.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.pr_decoration.binding.description')}\n      </div>\n\n      <form\n        onSubmit={(event: React.SyntheticEvent<HTMLFormElement>) => {\n          event.preventDefault();\n          props.onSubmit();\n        }}>\n        <div className=\"form-field\">\n          <label htmlFor=\"name\">\n            {translate('settings.pr_decoration.binding.form.name')}\n            <em className=\"mandatory spacer-right\">*</em>\n          </label>\n          <Select\n            autosize={true}\n            className=\"abs-width-400\"\n            clearable={false}\n            id=\"name\"\n            menuContainerStyle={{\n              maxWidth: '210%' /* Allow double the width of the select */,\n              width: 'auto'\n            }}\n            onChange={(instance: AlmSettingsInstance) => props.onFieldChange('key', instance.key)}\n            optionRenderer={optionRenderer}\n            options={instances}\n            searchable={false}\n            value={formData.key}\n            valueKey=\"key\"\n            valueRenderer={optionRenderer}\n          />\n        </div>\n\n        {alm && (\n          <AlmSpecificForm\n            alm={alm}\n            formData={formData}\n            onFieldChange={props.onFieldChange}\n            monorepoEnabled={monorepoEnabled}\n          />\n        )}\n\n        <div className=\"display-flex-center\">\n          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n          {isChanged && (\n            <SubmitButton className=\"spacer-right button-success\" disabled={saving || !isValid}>\n              <span data-test=\"project-settings__alm-save\">{translate('save')}</span>\n            </SubmitButton>\n          )}\n          {isConfigured && (\n            <Button className=\"spacer-right\" onClick={props.onReset}>\n              <span data-test=\"project-settings__alm-reset\">{translate('reset_verb')}</span>\n            </Button>\n          )}\n          {!saving && success && (\n            <span className=\"text-success\">\n              <AlertSuccessIcon className=\"spacer-right\" />\n              {translate('settings.state.saved')}\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { HttpStatus } from 'sonar-ui-common/helpers/request';\nimport {\n  deleteProjectAlmBinding,\n  getAlmSettings,\n  getProjectAlmBinding,\n  setProjectAzureBinding,\n  setProjectBitbucketBinding,\n  setProjectBitbucketCloudBinding,\n  setProjectGithubBinding,\n  setProjectGitlabBinding\n} from '../../../../api/alm-settings';\nimport throwGlobalError from '../../../../app/utils/throwGlobalError';\nimport { getAppState, Store } from '../../../../store/rootReducer';\nimport {\n  AlmKeys,\n  AlmSettingsInstance,\n  ProjectAlmBindingResponse\n} from '../../../../types/alm-settings';\nimport { EditionKey } from '../../../../types/editions';\nimport PRDecorationBindingRenderer from './PRDecorationBindingRenderer';\n\ntype FormData = T.Omit<ProjectAlmBindingResponse, 'alm'>;\n\ninterface StateProps {\n  monorepoEnabled: boolean;\n}\n\ninterface Props {\n  component: T.Component;\n}\n\ninterface State {\n  formData: FormData;\n  instances: AlmSettingsInstance[];\n  isChanged: boolean;\n  isConfigured: boolean;\n  isValid: boolean;\n  loading: boolean;\n  orignalData?: FormData;\n  saving: boolean;\n  success: boolean;\n}\n\nconst REQUIRED_FIELDS_BY_ALM: {\n  [almKey in AlmKeys]: Array<keyof T.Omit<FormData, 'key'>>;\n} = {\n  [AlmKeys.Azure]: ['repository', 'slug'],\n  [AlmKeys.BitbucketServer]: ['repository', 'slug'],\n  [AlmKeys.BitbucketCloud]: ['repository'],\n  [AlmKeys.GitHub]: ['repository'],\n  [AlmKeys.GitLab]: ['repository']\n};\n\nexport class PRDecorationBinding extends React.PureComponent<Props & StateProps, State> {\n  mounted = false;\n  state: State = {\n    formData: { key: '' },\n    instances: [],\n    isChanged: false,\n    isConfigured: false,\n    isValid: false,\n    loading: true,\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchDefinitions();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDefinitions = () => {\n    const project = this.props.component.key;\n    return Promise.all([getAlmSettings(project), this.getProjectBinding(project)])\n      .then(([instances, originalData]) => {\n        if (this.mounted) {\n          this.setState(({ formData }) => {\n            const newFormData = originalData || formData;\n            return {\n              formData: newFormData,\n              instances: instances || [],\n              isChanged: false,\n              isConfigured: !!originalData,\n              isValid: this.validateForm(newFormData),\n              loading: false,\n              orignalData: newFormData\n            };\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  getProjectBinding(project: string): Promise<ProjectAlmBindingResponse | undefined> {\n    return getProjectAlmBinding(project).catch((response: Response) => {\n      if (response && response.status === HttpStatus.NotFound) {\n        return undefined;\n      }\n      return throwGlobalError(response);\n    });\n  }\n\n  catchError = () => {\n    if (this.mounted) {\n      this.setState({ saving: false });\n    }\n  };\n\n  handleReset = () => {\n    const { component } = this.props;\n    this.setState({ saving: true });\n    deleteProjectAlmBinding(component.key)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            formData: {\n              key: '',\n              repository: '',\n              slug: ''\n            },\n            orignalData: undefined,\n            isChanged: false,\n            isConfigured: false,\n            saving: false,\n            success: true\n          });\n        }\n      })\n      .catch(this.catchError);\n  };\n\n  submitProjectAlmBinding(\n    alm: AlmKeys,\n    key: string,\n    almSpecificFields?: T.Omit<FormData, 'key'>\n  ): Promise<void> {\n    const almSetting = key;\n    const project = this.props.component.key;\n    const repository = almSpecificFields?.repository;\n    const slug = almSpecificFields?.slug;\n    const monorepo = almSpecificFields?.monorepo ?? false;\n\n    if (!repository) {\n      return Promise.reject();\n    }\n\n    switch (alm) {\n      case AlmKeys.Azure: {\n        if (!slug) {\n          return Promise.reject();\n        }\n        return setProjectAzureBinding({\n          almSetting,\n          project,\n          projectName: slug,\n          repositoryName: repository,\n          monorepo\n        });\n      }\n      case AlmKeys.BitbucketServer: {\n        if (!slug) {\n          return Promise.reject();\n        }\n        return setProjectBitbucketBinding({\n          almSetting,\n          project,\n          repository,\n          slug,\n          monorepo\n        });\n      }\n      case AlmKeys.BitbucketCloud: {\n        return setProjectBitbucketCloudBinding({\n          almSetting,\n          project,\n          repository\n        });\n      }\n      case AlmKeys.GitHub: {\n        // By default it must remain true.\n        const summaryCommentEnabled = almSpecificFields?.summaryCommentEnabled ?? true;\n        return setProjectGithubBinding({\n          almSetting,\n          project,\n          repository,\n          summaryCommentEnabled,\n          monorepo\n        });\n      }\n\n      case AlmKeys.GitLab: {\n        return setProjectGitlabBinding({\n          almSetting,\n          project,\n          repository,\n          monorepo\n        });\n      }\n\n      default:\n        return Promise.reject();\n    }\n  }\n\n  handleSubmit = () => {\n    this.setState({ saving: true });\n    const {\n      formData: { key, ...additionalFields },\n      instances\n    } = this.state;\n\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return;\n    }\n\n    this.submitProjectAlmBinding(selected.alm, key, additionalFields)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            saving: false,\n            success: true\n          });\n        }\n      })\n      .then(this.fetchDefinitions)\n      .catch(this.catchError);\n  };\n\n  isDataSame(\n    { key, repository = '', slug = '', summaryCommentEnabled = false, monorepo = false }: FormData,\n    {\n      key: oKey = '',\n      repository: oRepository = '',\n      slug: oSlug = '',\n      summaryCommentEnabled: osummaryCommentEnabled = false,\n      monorepo: omonorepo = false\n    }: FormData\n  ) {\n    return (\n      key === oKey &&\n      repository === oRepository &&\n      slug === oSlug &&\n      summaryCommentEnabled === osummaryCommentEnabled &&\n      monorepo === omonorepo\n    );\n  }\n\n  handleFieldChange = (id: keyof ProjectAlmBindingResponse, value: string | boolean) => {\n    this.setState(({ formData, orignalData }) => {\n      const newFormData = {\n        ...formData,\n        [id]: value\n      };\n\n      return {\n        formData: newFormData,\n        isValid: this.validateForm(newFormData),\n        isChanged: !this.isDataSame(newFormData, orignalData || { key: '' }),\n        success: false\n      };\n    });\n  };\n\n  validateForm = ({ key, ...additionalFields }: State['formData']) => {\n    const { instances } = this.state;\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return false;\n    }\n    return REQUIRED_FIELDS_BY_ALM[selected.alm].reduce(\n      (result: boolean, field) => result && Boolean(additionalFields[field]),\n      true\n    );\n  };\n\n  render() {\n    const { monorepoEnabled } = this.props;\n\n    return (\n      <PRDecorationBindingRenderer\n        onFieldChange={this.handleFieldChange}\n        onReset={this.handleReset}\n        onSubmit={this.handleSubmit}\n        monorepoEnabled={monorepoEnabled}\n        {...this.state}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  // This feature trigger will be replaced when SONAR-14349 is implemented\n  monorepoEnabled: [EditionKey.enterprise, EditionKey.datacenter].includes(\n    getAppState(state).edition as EditionKey\n  )\n});\n\nexport default connect(mapStateToProps)(PRDecorationBinding);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  ALM_INTEGRATION,\n  ANALYSIS_SCOPE_CATEGORY,\n  LANGUAGES_CATEGORY,\n  NEW_CODE_PERIOD_CATEGORY,\n  PULL_REQUEST_DECORATION_BINDING_CATEGORY\n} from './AdditionalCategoryKeys';\nimport AlmIntegration from './almIntegration/AlmIntegration';\nimport { AnalysisScope } from './AnalysisScope';\nimport Languages from './Languages';\nimport NewCodePeriod from './NewCodePeriod';\nimport PullRequestDecorationBinding from './pullRequestDecorationBinding/PRDecorationBinding';\n\nexport interface AdditionalCategoryComponentProps {\n  component: T.Component | undefined;\n  selectedCategory: string;\n}\n\nexport interface AdditionalCategory {\n  availableGlobally: boolean;\n  availableForProject: boolean;\n  displayTab: boolean;\n  key: string;\n  name: string;\n  renderComponent: (props: AdditionalCategoryComponentProps) => React.ReactNode;\n  requiresBranchesEnabled?: boolean;\n}\n\nexport const ADDITIONAL_CATEGORIES: AdditionalCategory[] = [\n  {\n    key: LANGUAGES_CATEGORY,\n    name: translate('property.category.languages'),\n    renderComponent: getLanguagesComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: true\n  },\n  {\n    key: NEW_CODE_PERIOD_CATEGORY,\n    name: translate('settings.new_code_period.category'),\n    renderComponent: getNewCodePeriodComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: true\n  },\n  {\n    key: ANALYSIS_SCOPE_CATEGORY,\n    name: translate('property.category.exclusions'),\n    renderComponent: getAnalysisScopeComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: false\n  },\n  {\n    key: ALM_INTEGRATION,\n    name: translate('property.category.almintegration'),\n    renderComponent: getAlmIntegrationComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: false\n  },\n  {\n    key: PULL_REQUEST_DECORATION_BINDING_CATEGORY,\n    name: translate('settings.pr_decoration.binding.category'),\n    renderComponent: getPullRequestDecorationBindingComponent,\n    availableGlobally: false,\n    availableForProject: true,\n    displayTab: true,\n    requiresBranchesEnabled: true\n  }\n];\n\nfunction getLanguagesComponent(props: AdditionalCategoryComponentProps) {\n  return <Languages {...props} />;\n}\n\nfunction getNewCodePeriodComponent() {\n  return <NewCodePeriod />;\n}\n\nfunction getAnalysisScopeComponent(props: AdditionalCategoryComponentProps) {\n  return <AnalysisScope {...props} />;\n}\n\nfunction getAlmIntegrationComponent(props: AdditionalCategoryComponentProps) {\n  return <AlmIntegration {...props} />;\n}\n\nfunction getPullRequestDecorationBindingComponent(props: AdditionalCategoryComponentProps) {\n  return props.component && <PullRequestDecorationBinding component={props.component} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { IndexLink } from 'react-router';\nimport { getAppState, getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\n\nexport interface CategoriesListProps {\n  branchesEnabled?: boolean;\n  categories: string[];\n  component?: T.Component;\n  defaultCategory: string;\n  selectedCategory: string;\n}\n\nexport function CategoriesList(props: CategoriesListProps) {\n  const { branchesEnabled, categories, component, defaultCategory, selectedCategory } = props;\n  const pathname = component ? '/project/settings' : '/settings';\n\n  const categoriesWithName = categories\n    .filter(key => !CATEGORY_OVERRIDES[key.toLowerCase()])\n    .map(key => ({\n      key,\n      name: getCategoryName(key)\n    }))\n    .concat(\n      ADDITIONAL_CATEGORIES.filter(c => c.displayTab)\n        .filter(c =>\n          component\n            ? // Project settings\n              c.availableForProject\n            : // Global settings\n              c.availableGlobally\n        )\n        .filter(c => branchesEnabled || !c.requiresBranchesEnabled)\n    );\n  const sortedCategories = sortBy(categoriesWithName, category => category.name.toLowerCase());\n\n  return (\n    <ul className=\"side-tabs-menu\">\n      {sortedCategories.map(category => (\n        <li key={category.key}>\n          <IndexLink\n            className={classNames({\n              active: category.key.toLowerCase() === selectedCategory.toLowerCase()\n            })}\n            title={category.name}\n            to={{\n              pathname,\n              query: {\n                category: category.key !== defaultCategory ? category.key.toLowerCase() : undefined,\n                id: component && component.key\n              }\n            }}>\n            {category.name}\n          </IndexLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  categories: getSettingsAppAllCategories(state),\n  branchesEnabled: getAppState(state).branchesEnabled\n});\n\nexport default connect(mapStateToProps)(CategoriesList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\n\nexport interface PageHeaderProps {\n  component?: T.Component;\n}\n\nexport default function PageHeader({ component }: PageHeaderProps) {\n  const title = component ? translate('project_settings.page') : translate('settings.page');\n\n  const description = component ? (\n    translate('project_settings.page.description')\n  ) : (\n    <InstanceMessage message={translate('settings.page.description')} />\n  );\n\n  return (\n    <header className=\"top-bar-outer\">\n      <div className=\"top-bar\">\n        <div className=\"top-bar-inner bordered-bottom big-padded-top padded-bottom\">\n          <h1 className=\"page-title\">{title}</h1>\n          <div className=\"page-description spacer-top\">{description}</div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  addSideBarClass,\n  addWhitePageClass,\n  removeSideBarClass,\n  removeWhitePageClass\n} from 'sonar-ui-common/helpers/pages';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport ScreenPositionHelper from '../../../components/common/ScreenPositionHelper';\nimport { getSettingsAppDefaultCategory, Store } from '../../../store/rootReducer';\nimport { fetchSettings } from '../store/actions';\nimport '../styles.css';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport AllCategoriesList from './AllCategoriesList';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\nimport PageHeader from './PageHeader';\n\ninterface Props {\n  component?: T.Component;\n  defaultCategory: string;\n  fetchSettings(component?: string): Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport class App extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    addSideBarClass();\n    addWhitePageClass();\n    this.fetchSettings();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component !== this.props.component) {\n      this.fetchSettings();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeSideBarClass();\n    removeWhitePageClass();\n  }\n\n  fetchSettings = () => {\n    const { component } = this.props;\n    this.props.fetchSettings(component && component.key).then(this.stopLoading, this.stopLoading);\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    if (this.state.loading) {\n      return null;\n    }\n\n    const { query } = this.props.location;\n    const originalCategory = (query.category as string) || this.props.defaultCategory;\n    const overriddenCategory = CATEGORY_OVERRIDES[originalCategory.toLowerCase()];\n    const selectedCategory = overriddenCategory || originalCategory;\n    const foundAdditionalCategory = find(ADDITIONAL_CATEGORIES, c => c.key === selectedCategory);\n    const isProjectSettings = this.props.component;\n    const shouldRenderAdditionalCategory =\n      foundAdditionalCategory &&\n      ((isProjectSettings && foundAdditionalCategory.availableForProject) ||\n        (!isProjectSettings && foundAdditionalCategory.availableGlobally));\n\n    return (\n      <div id=\"settings-page\">\n        <Suggestions suggestions=\"settings\" />\n        <Helmet defer={false} title={translate('settings.page')} />\n        <PageHeader component={this.props.component} />\n\n        <div className=\"layout-page\">\n          <ScreenPositionHelper className=\"layout-page-side-outer\">\n            {({ top }) => (\n              <div className=\"layout-page-side\" style={{ top }}>\n                <div className=\"layout-page-side-inner\">\n                  <AllCategoriesList\n                    component={this.props.component}\n                    defaultCategory={this.props.defaultCategory}\n                    selectedCategory={selectedCategory}\n                  />\n                </div>\n              </div>\n            )}\n          </ScreenPositionHelper>\n\n          <div className=\"layout-page-main\">\n            <div className=\"layout-page-main-inner\">\n              <div className=\"big-padded\">\n                {foundAdditionalCategory && shouldRenderAdditionalCategory ? (\n                  foundAdditionalCategory.renderComponent({\n                    component: this.props.component,\n                    selectedCategory: originalCategory\n                  })\n                ) : (\n                  <CategoryDefinitionsList\n                    category={selectedCategory}\n                    component={this.props.component}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  defaultCategory: getSettingsAppDefaultCategory(state)\n});\n\nconst mapDispatchToProps = { fetchSettings: fetchSettings as any };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\n\ninterface Props {\n  className?: string;\n  children: (position: { top: number; left: number }) => React.ReactElement<any>;\n}\n\nexport default class ScreenPositionHelper extends React.PureComponent<Props> {\n  container?: HTMLDivElement;\n  debouncedOnResize: () => void;\n\n  constructor(props: Props) {\n    super(props);\n    this.debouncedOnResize = debounce(() => this.forceUpdate(), 250);\n  }\n\n  componentDidMount() {\n    this.forceUpdate();\n    window.addEventListener('resize', this.debouncedOnResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.debouncedOnResize);\n  }\n\n  getPosition = () => {\n    const containerPos = this.container && this.container.getBoundingClientRect();\n    if (!containerPos) {\n      return { top: 0, left: 0 };\n    }\n    return {\n      top: window.pageYOffset + containerPos.top,\n      left: window.pageXOffset + containerPos.left\n    };\n  };\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        ref={container => (this.container = container as HTMLDivElement)}>\n        {this.props.children(this.getPosition())}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { get, getJSON, HttpStatus, parseError, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBindingParams,\n  BitbucketBindingDefinition,\n  BitbucketCloudBindingDefinition,\n  BitbucketCloudProjectAlmBindingParams,\n  BitbucketProjectAlmBindingParams,\n  GithubBindingDefinition,\n  GithubProjectAlmBindingParams,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBindingParams,\n  ProjectAlmBindingResponse\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getAlmDefinitionsNoCatch().catch(throwGlobalError);\n}\n\nexport function getAlmDefinitionsNoCatch(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions');\n}\n\nexport function getAlmSettings(project?: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project })\n    .then(({ almSettings }) => almSettings)\n    .catch(throwGlobalError);\n}\n\nexport function validateAlmSettings(key: string): Promise<string> {\n  return get('/api/alm_settings/validate', { key })\n    .then(() => {\n      return '';\n    })\n    .catch((response: Response) => {\n      if (response.status === HttpStatus.BadRequest) {\n        return parseError(response);\n      } else {\n        return throwGlobalError(response);\n      }\n    });\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketCloudConfiguration(data: BitbucketCloudBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucketcloud', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketCloudConfiguration(\n  data: BitbucketCloudBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucketcloud', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBindingResponse> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketCloudBinding(data: BitbucketCloudProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_bitbucketcloud_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omitBy } from 'lodash';\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { isCategoryDefinition } from '../apps/settings/utils';\nimport { BranchParameters } from '../types/branch-like';\n\nexport function getDefinitions(component?: string): Promise<T.SettingCategoryDefinition[]> {\n  return getJSON('/api/settings/list_definitions', { component }).then(\n    r => r.definitions,\n    throwGlobalError\n  );\n}\n\nexport function getValues(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<T.SettingValue[]> {\n  return getJSON('/api/settings/values', data).then(r => r.settings);\n}\n\nexport function setSettingValue(\n  definition: T.SettingDefinition,\n  value: any,\n  component?: string\n): Promise<void> {\n  const { key } = definition;\n  const data: RequestData = { key, component };\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    data.values = value;\n  } else if (definition.type === 'PROPERTY_SET') {\n    data.fieldValues = value\n      .map((fields: any) => omitBy(fields, value => value == null))\n      .map(JSON.stringify);\n  } else {\n    data.value = value;\n  }\n\n  return post('/api/settings/set', data);\n}\n\nexport function setSimpleSettingValue(\n  data: { component?: string; value: string; key: string } & BranchParameters\n): Promise<void | Response> {\n  return post('/api/settings/set', data).catch(throwGlobalError);\n}\n\nexport function resetSettingValue(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<void> {\n  return post('/api/settings/reset', data);\n}\n\nexport function sendTestEmail(to: string, subject: string, message: string): Promise<void> {\n  return post('/api/emails/send', { to, subject, message });\n}\n\nexport function checkSecretKey(): Promise<{ secretKeyAvailable: boolean }> {\n  return getJSON('/api/settings/check_secret_key').catch(throwGlobalError);\n}\n\nexport function generateSecretKey(): Promise<{ secretKey: string }> {\n  return postJSON('/api/settings/generate_secret_key').catch(throwGlobalError);\n}\n\nexport function encryptValue(value: string): Promise<{ encryptedValue: string }> {\n  return postJSON('/api/settings/encrypt', { value }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const ALM_INTEGRATION = 'almintegration';\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n"],"sourceRoot":""}