{"version":3,"sources":["webpack:///./src/main/js/apps/quality-profiles/components/ProfileLink.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileExporters.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ChangeParentForm.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileInheritanceBox.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileInheritance.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsFormSelect.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsForm.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsGroup.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsUser.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissions.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ChangeProjectsForm.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileProjects.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesDeprecatedWarning.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesRowOfType.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesRowTotal.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesSonarWayComparison.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRules.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileDetails.tsx","webpack:///./src/main/js/api/quality-profiles.ts","webpack:///./src/main/js/apps/quality-profiles/components/BuiltInQualityProfileBadge.tsx"],"names":["ProfileLink","name","language","children","other","activeClassName","to","getExportUrl","exporter","profile","this","props","render","exporters","exportersForLanguage","filter","e","languages","includes","length","className","map","index","undefined","key","href","rel","target","mounted","state","loading","selected","handleSelectChange","option","setState","value","handleFormSubmit","event","preventDefault","parent","profiles","find","p","then","onChange","catch","componentDidMount","componentWillUnmount","options","label","isBuiltIn","submitDisabled","parentKey","contentLabel","onRequestClose","onClose","size","id","onSubmit","htmlFor","clearable","disabled","onClick","ProfileInheritanceBox","depth","extendsBuiltIn","displayLink","type","offset","style","paddingLeft","BuiltInQualityProfileBadge","overlay","activeRuleCount","overridingRuleCount","formOpen","handleChangeParentClick","closeForm","handleParentChange","updateProfiles","loadData","componentDidUpdate","prevProps","r","ancestors","reverse","highlightCurrent","some","actions","edit","ancestor","child","handleSearch","query","onSearch","searchResults","handleInputChange","noResultsText","getStringValue","autoFocus","filterOptions","isLoading","onInputChange","optionRenderer","placeholder","searchable","valueRenderer","isUser","login","Avatar","hash","avatar","submitting","stopSubmitting","handleUserAdd","user","qualityProfile","onUserAdd","handleGroupAdd","group","onGroupAdd","q","parameters","Promise","all","usersResponse","groupsResponse","users","groups","handleValueChange","header","deleteModal","handleDeleteClick","handleDeleteModalClose","handleDelete","onDelete","renderDeleteModal","defaultMessage","values","onSubmitClick","onCloseClick","lineHeight","addUserForm","handleAddUserButtonClick","handleAddUserFormClose","addedUser","handleUserDelete","removedUser","addedGroup","handleGroupDelete","removedGroup","fetchUsersAndGroups","fetchProjects","searchParams","page","ps","pageSize","data","prevState","more","projects","results","newSeletedProjects","project","selectedProjects","lastSearchParams","needToReload","projectsTotalCount","paging","total","handleSelect","handleUnselect","handleCloseClick","renderElement","allowBulkSelection","elements","elementsTotalCount","labelAll","labelSelected","labelUnselected","SelectList","All","onSelect","onUnselect","selectedElements","withPaging","loadingMore","stopLoading","loadMore","handleChangeClick","loadProjects","isDefault","renderDefault","renderProjects","qualifier","count","ready","associateProjects","ProfileRulesDeprecatedWarning","qprofile","activeDeprecatedRules","ProfileRulesRowOfType","activeRulesUrl","activation","types","inactiveRulesUrl","inactiveCount","ProfileRulesRowTotal","ProfileRulesSonarWayComparison","url","compareToProfile","sonarway","sonarWayMissingRules","TYPES","activatedTotal","activatedByType","t","val","allByType","compareToSonarWay","loadRules","loadProfile","resolve","loadAllRules","facets","loadActivatedRules","responses","allRules","activatedRules","showProfile","getRulesCountForType","getRulesTotalForType","activateMoreUrl","copy","activeDeprecatedRuleCount","missingRuleCount","ProfileDetails","searchQualityProfiles","getQualityProfile","createQualityProfile","restoreQualityProfile","getProfileProjects","getProfileInheritance","setDefaultProfile","renameProfile","copyProfile","fromKey","toName","deleteProfile","changeProfileParent","parentProfile","parentQualityProfile","getQualityProfileBackupUrl","Object","entries","encodeURIComponent","join","getQualityProfileExporterUrl","exporterKey","getImporters","getExporters","getProfileChangelog","since","compareProfiles","leftKey","rightKey","associateProject","dissociateProject","searchUsers","searchGroups","addUser","removeUser","addGroup","removeGroup","bulkActivateRules","bulkDeactivateRules","activateRule","params","deactivateRule","tooltip","badge"],"mappings":"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","file":"js/345.1613385090031.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { getProfilePath } from '../utils';\n\ninterface Props {\n  className?: string;\n  children?: React.ReactElement<any> | string;\n  language: string;\n  name: string;\n}\n\nexport default function ProfileLink({ name, language, children, ...other }: Props) {\n  return (\n    <Link activeClassName=\"link-no-underline\" to={getProfilePath(name, language)} {...other}>\n      {children}\n    </Link>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getQualityProfileExporterUrl } from '../../../api/quality-profiles';\nimport { getBaseUrl } from '../../../helpers/system';\nimport { Exporter, Profile } from '../types';\n\ninterface Props {\n  exporters: Exporter[];\n  profile: Profile;\n}\n\nexport default class ProfileExporters extends React.PureComponent<Props> {\n  getExportUrl(exporter: Exporter) {\n    const { profile } = this.props;\n    return `${getBaseUrl()}${getQualityProfileExporterUrl(exporter, profile)}`;\n  }\n\n  render() {\n    const { exporters, profile } = this.props;\n    const exportersForLanguage = exporters.filter(e => e.languages.includes(profile.language));\n\n    if (exportersForLanguage.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"boxed-group quality-profile-exporters\">\n        <h2>{translate('quality_profiles.exporters')}</h2>\n        <div className=\"boxed-group-inner\">\n          <ul>\n            {exportersForLanguage.map((exporter, index) => (\n              <li\n                className={index > 0 ? 'spacer-top' : undefined}\n                data-key={exporter.key}\n                key={exporter.key}>\n                <a href={this.getExportUrl(exporter)} rel=\"noopener noreferrer\" target=\"_blank\">\n                  {exporter.name}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { changeProfileParent } from '../../../api/quality-profiles';\nimport { Profile } from '../types';\n\ninterface Props {\n  onChange: () => void;\n  onClose: () => void;\n  profile: Profile;\n  profiles: Profile[];\n}\n\ninterface State {\n  loading: boolean;\n  selected: string | null;\n}\n\nexport default class ChangeParentForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    loading: false,\n    selected: null\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSelectChange = (option: { value: string }) => {\n    this.setState({ selected: option.value });\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const parent = this.props.profiles.find(p => p.key === this.state.selected);\n\n    this.setState({ loading: true });\n    changeProfileParent(this.props.profile, parent)\n      .then(this.props.onChange)\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  render() {\n    const { profiles } = this.props;\n\n    const options = [\n      { label: translate('none'), value: '' },\n      ...sortBy(profiles, 'name').map(profile => ({\n        label: profile.isBuiltIn\n          ? `${profile.name} (${translate('quality_profiles.built_in')})`\n          : profile.name,\n        value: profile.key\n      }))\n    ];\n\n    const submitDisabled =\n      this.state.loading ||\n      this.state.selected == null ||\n      this.state.selected === this.props.profile.parentKey;\n\n    return (\n      <Modal\n        contentLabel={translate('quality_profiles.change_parent')}\n        onRequestClose={this.props.onClose}\n        size=\"small\">\n        <form id=\"change-profile-parent-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{translate('quality_profiles.change_parent')}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label htmlFor=\"change-profile-parent\">\n                {translate('quality_profiles.parent')} <em className=\"mandatory\">*</em>\n              </label>\n              <Select\n                clearable={false}\n                id=\"change-profile-parent\"\n                name=\"parentKey\"\n                onChange={this.handleSelectChange}\n                options={options}\n                value={\n                  this.state.selected != null\n                    ? this.state.selected\n                    : this.props.profile.parentKey || ''\n                }\n              />\n            </div>\n          </div>\n          <div className=\"modal-foot\">\n            {this.state.loading && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitDisabled} id=\"change-profile-parent-submit\">\n              {translate('change_verb')}\n            </SubmitButton>\n            <ResetButtonLink id=\"change-profile-parent-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport BuiltInQualityProfileBadge from '../components/BuiltInQualityProfileBadge';\nimport ProfileLink from '../components/ProfileLink';\n\ninterface Props {\n  className?: string;\n  depth: number;\n  displayLink?: boolean;\n  extendsBuiltIn?: boolean;\n  language: string;\n  profile: T.ProfileInheritanceDetails;\n  type?: string;\n}\n\nexport default function ProfileInheritanceBox(props: Props) {\n  const {\n    className,\n    depth,\n    extendsBuiltIn,\n    language,\n    profile,\n    displayLink = true,\n    type = 'current'\n  } = props;\n  const offset = 25 * depth;\n\n  return (\n    <tr className={className} data-test={`quality-profiles__inheritance-${type}`}>\n      <td>\n        <div style={{ paddingLeft: offset }}>\n          {displayLink ? (\n            <ProfileLink className=\"text-middle\" language={language} name={profile.name}>\n              {profile.name}\n            </ProfileLink>\n          ) : (\n            <span className=\"text-middle\">{profile.name}</span>\n          )}\n          {profile.isBuiltIn && <BuiltInQualityProfileBadge className=\"spacer-left\" />}\n          {extendsBuiltIn && (\n            <HelpTooltip\n              className=\"spacer-left\"\n              overlay={translate('quality_profiles.extends_built_in')}\n            />\n          )}\n        </div>\n      </td>\n\n      <td>{translateWithParameters('quality_profile.x_active_rules', profile.activeRuleCount)}</td>\n\n      <td>\n        {profile.overridingRuleCount != null && (\n          <p>\n            {translateWithParameters(\n              'quality_profiles.x_overridden_rules',\n              profile.overridingRuleCount\n            )}\n          </p>\n        )}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProfileInheritance } from '../../../api/quality-profiles';\nimport { Profile } from '../types';\nimport ChangeParentForm from './ChangeParentForm';\nimport ProfileInheritanceBox from './ProfileInheritanceBox';\n\ninterface Props {\n  profile: Profile;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\ninterface State {\n  ancestors?: T.ProfileInheritanceDetails[];\n  children?: T.ProfileInheritanceDetails[];\n  formOpen: boolean;\n  loading: boolean;\n  profile?: T.ProfileInheritanceDetails;\n}\n\nexport default class ProfileInheritance extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  state: State = {\n    formOpen: false,\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile.key !== this.props.profile.key) {\n      this.loadData();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadData() {\n    getProfileInheritance(this.props.profile).then(\n      r => {\n        if (this.mounted) {\n          const { ancestors, children } = r;\n          ancestors.reverse();\n\n          this.setState({\n            children,\n            ancestors,\n            profile: r.profile,\n            loading: false\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleChangeParentClick = () => {\n    this.setState({ formOpen: true });\n  };\n\n  closeForm = () => {\n    this.setState({ formOpen: false });\n  };\n\n  handleParentChange = () => {\n    this.props.updateProfiles().then(\n      () => {\n        this.loadData();\n      },\n      () => {}\n    );\n    this.closeForm();\n  };\n\n  render() {\n    const { profile, profiles } = this.props;\n    const { ancestors } = this.state;\n\n    const highlightCurrent =\n      !this.state.loading &&\n      ancestors != null &&\n      this.state.children != null &&\n      (ancestors.length > 0 || this.state.children.length > 0);\n\n    const extendsBuiltIn = ancestors != null && ancestors.some(profile => profile.isBuiltIn);\n\n    return (\n      <div className=\"boxed-group quality-profile-inheritance\">\n        {profile.actions && profile.actions.edit && !profile.isBuiltIn && (\n          <div className=\"boxed-group-actions\">\n            <Button className=\"pull-right js-change-parent\" onClick={this.handleChangeParentClick}>\n              {translate('quality_profiles.change_parent')}\n            </Button>\n          </div>\n        )}\n\n        <header className=\"boxed-group-header\">\n          <h2>{translate('quality_profiles.profile_inheritance')}</h2>\n        </header>\n\n        <div className=\"boxed-group-inner\">\n          {this.state.loading ? (\n            <i className=\"spinner\" />\n          ) : (\n            <table className=\"data zebra\">\n              <tbody>\n                {ancestors != null &&\n                  ancestors.map((ancestor, index) => (\n                    <ProfileInheritanceBox\n                      depth={index}\n                      key={ancestor.key}\n                      language={profile.language}\n                      profile={ancestor}\n                      type=\"ancestor\"\n                    />\n                  ))}\n\n                {this.state.profile != null && (\n                  <ProfileInheritanceBox\n                    className={classNames({\n                      selected: highlightCurrent\n                    })}\n                    depth={ancestors ? ancestors.length : 0}\n                    displayLink={false}\n                    extendsBuiltIn={extendsBuiltIn}\n                    language={profile.language}\n                    profile={this.state.profile}\n                  />\n                )}\n\n                {this.state.children != null &&\n                  this.state.children.map(child => (\n                    <ProfileInheritanceBox\n                      depth={ancestors ? ancestors.length + 1 : 0}\n                      key={child.key}\n                      language={profile.language}\n                      profile={child}\n                      type=\"child\"\n                    />\n                  ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n\n        {this.state.formOpen && (\n          <ChangeParentForm\n            onChange={this.handleParentChange}\n            onClose={this.closeForm}\n            profile={profile}\n            profiles={profiles.filter(p => p !== profile && p.language === profile.language)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce, identity } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport GroupIcon from 'sonar-ui-common/components/icons/GroupIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport Avatar from '../../../components/ui/Avatar';\nimport { Group } from './ProfilePermissions';\n\ntype Option = T.UserSelected | Group;\ntype OptionWithValue = Option & { value: string };\n\ninterface Props {\n  onChange: (option: OptionWithValue) => void;\n  onSearch: (query: string) => Promise<Option[]>;\n  selected?: Option;\n}\n\ninterface State {\n  loading: boolean;\n  query: string;\n  searchResults: Option[];\n}\n\nexport default class ProfilePermissionsFormSelect extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.handleSearch = debounce(this.handleSearch, 250);\n    this.state = { loading: false, query: '', searchResults: [] };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.handleSearch(this.state.query);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSearch = (query: string) => {\n    this.setState({ loading: true });\n    this.props.onSearch(query).then(\n      searchResults => {\n        if (this.mounted) {\n          this.setState({ loading: false, searchResults });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  handleInputChange = (query: string) => {\n    this.setState({ query });\n    if (query.length > 1) {\n      this.handleSearch(query);\n    }\n  };\n\n  render() {\n    const noResultsText =\n      this.state.query.length === 1\n        ? translateWithParameters('select2.tooShort', 2)\n        : translate('no_results');\n\n    // create a uniq string both for users and groups\n    const options = this.state.searchResults.map(r => ({ ...r, value: getStringValue(r) }));\n\n    return (\n      <Select\n        autoFocus={true}\n        className=\"Select-big\"\n        clearable={false}\n        // disable default react-select filtering\n        filterOptions={identity}\n        isLoading={this.state.loading}\n        noResultsText={noResultsText}\n        onChange={this.props.onChange}\n        onInputChange={this.handleInputChange}\n        optionRenderer={optionRenderer}\n        options={options}\n        placeholder=\"\"\n        searchable={true}\n        value={this.props.selected && getStringValue(this.props.selected)}\n        valueRenderer={optionRenderer}\n      />\n    );\n  }\n}\n\nfunction isUser(option: Option): option is T.UserSelected {\n  return (option as T.UserSelected).login !== undefined;\n}\n\nfunction getStringValue(option: Option) {\n  return isUser(option) ? `user:${option.login}` : `group:${option.name}`;\n}\n\nfunction optionRenderer(option: OptionWithValue) {\n  return isUser(option) ? (\n    <>\n      <Avatar hash={option.avatar} name={option.name} size={16} />\n      <strong className=\"spacer-left\">{option.name}</strong>\n      <span className=\"note little-spacer-left\">{option.login}</span>\n    </>\n  ) : (\n    <>\n      <GroupIcon size={16} />\n      <strong className=\"spacer-left\">{option.name}</strong>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  addGroup,\n  addUser,\n  searchGroups,\n  searchUsers,\n  SearchUsersGroupsParameters\n} from '../../../api/quality-profiles';\nimport { Group } from './ProfilePermissions';\nimport ProfilePermissionsFormSelect from './ProfilePermissionsFormSelect';\n\ninterface Props {\n  onClose: () => void;\n  onGroupAdd: (group: Group) => void;\n  onUserAdd: (user: T.UserSelected) => void;\n  profile: { language: string; name: string };\n}\n\ninterface State {\n  selected?: T.UserSelected | Group;\n  submitting: boolean;\n}\n\nexport default class ProfilePermissionsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleUserAdd = (user: T.UserSelected) => {\n    const {\n      profile: { language, name }\n    } = this.props;\n    addUser({\n      language,\n      login: user.login,\n      qualityProfile: name\n    }).then(() => this.props.onUserAdd(user), this.stopSubmitting);\n  };\n\n  handleGroupAdd = (group: Group) => {\n    const {\n      profile: { language, name }\n    } = this.props;\n    addGroup({\n      group: group.name,\n      language,\n      qualityProfile: name\n    }).then(() => this.props.onGroupAdd(group), this.stopSubmitting);\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { selected } = this.state;\n    if (selected) {\n      this.setState({ submitting: true });\n      if ((selected as T.UserSelected).login !== undefined) {\n        this.handleUserAdd(selected as T.UserSelected);\n      } else {\n        this.handleGroupAdd(selected as Group);\n      }\n    }\n  };\n\n  handleSearch = (q: string) => {\n    const { profile } = this.props;\n    const parameters: SearchUsersGroupsParameters = {\n      language: profile.language,\n      q,\n      qualityProfile: profile.name,\n      selected: 'deselected'\n    };\n    return Promise.all([\n      searchUsers(parameters),\n      searchGroups(parameters)\n    ]).then(([usersResponse, groupsResponse]) => [\n      ...usersResponse.users,\n      ...groupsResponse.groups\n    ]);\n  };\n\n  handleValueChange = (selected: T.UserSelected | Group) => {\n    this.setState({ selected });\n  };\n\n  render() {\n    const header = translate('quality_profiles.grant_permissions_to_user_or_group');\n    const submitDisabled = !this.state.selected || this.state.submitting;\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label>{translate('quality_profiles.search_description')}</label>\n              <ProfilePermissionsFormSelect\n                onChange={this.handleValueChange}\n                onSearch={this.handleSearch}\n                selected={this.state.selected}\n              />\n            </div>\n          </div>\n          <footer className=\"modal-foot\">\n            {this.state.submitting && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitDisabled}>{translate('add_verb')}</SubmitButton>\n            <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, DeleteButton, ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal, { ChildrenProps } from 'sonar-ui-common/components/controls/SimpleModal';\nimport GroupIcon from 'sonar-ui-common/components/icons/GroupIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { removeGroup } from '../../../api/quality-profiles';\nimport { Group } from './ProfilePermissions';\n\ninterface Props {\n  group: Group;\n  onDelete: (group: Group) => void;\n  profile: { language: string; name: string };\n}\n\ninterface State {\n  deleteModal: boolean;\n}\n\nexport default class ProfilePermissionsGroup extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { deleteModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleDeleteClick = () => {\n    this.setState({ deleteModal: true });\n  };\n\n  handleDeleteModalClose = () => {\n    if (this.mounted) {\n      this.setState({ deleteModal: false });\n    }\n  };\n\n  handleDelete = () => {\n    const { group, profile } = this.props;\n\n    return removeGroup({\n      group: group.name,\n      language: profile.language,\n      qualityProfile: profile.name\n    }).then(() => {\n      this.handleDeleteModalClose();\n      this.props.onDelete(group);\n    });\n  };\n\n  renderDeleteModal = (props: ChildrenProps) => (\n    <div>\n      <header className=\"modal-head\">\n        <h2>{translate('groups.remove')}</h2>\n      </header>\n\n      <div className=\"modal-body\">\n        <FormattedMessage\n          defaultMessage={translate('groups.remove.confirmation')}\n          id=\"groups.remove.confirmation\"\n          values={{\n            user: <strong>{this.props.group.name}</strong>\n          }}\n        />\n      </div>\n\n      <footer className=\"modal-foot\">\n        {props.submitting && <i className=\"spinner spacer-right\" />}\n        <Button className=\"button-red\" disabled={props.submitting} onClick={props.onSubmitClick}>\n          {translate('remove')}\n        </Button>\n        <ResetButtonLink onClick={props.onCloseClick}>{translate('cancel')}</ResetButtonLink>\n      </footer>\n    </div>\n  );\n\n  render() {\n    const { group } = this.props;\n\n    return (\n      <div className=\"clearfix big-spacer-bottom\">\n        <DeleteButton\n          className=\"pull-right spacer-top spacer-left spacer-right button-small\"\n          onClick={this.handleDeleteClick}\n        />\n        <GroupIcon className=\"pull-left spacer-right\" size={32} />\n        <div className=\"overflow-hidden\" style={{ lineHeight: '32px' }}>\n          <strong>{group.name}</strong>\n        </div>\n\n        {this.state.deleteModal && (\n          <SimpleModal\n            header={translate('group.remove')}\n            onClose={this.handleDeleteModalClose}\n            onSubmit={this.handleDelete}>\n            {this.renderDeleteModal}\n          </SimpleModal>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  DeleteButton,\n  ResetButtonLink,\n  SubmitButton\n} from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal, { ChildrenProps } from 'sonar-ui-common/components/controls/SimpleModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { removeUser } from '../../../api/quality-profiles';\nimport Avatar from '../../../components/ui/Avatar';\n\ninterface Props {\n  onDelete: (user: T.UserSelected) => void;\n  profile: { language: string; name: string };\n  user: T.UserSelected;\n}\n\ninterface State {\n  deleteModal: boolean;\n}\n\nexport default class ProfilePermissionsUser extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { deleteModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleDeleteClick = () => {\n    this.setState({ deleteModal: true });\n  };\n\n  handleDeleteModalClose = () => {\n    if (this.mounted) {\n      this.setState({ deleteModal: false });\n    }\n  };\n\n  handleDelete = () => {\n    const { profile, user } = this.props;\n\n    return removeUser({\n      language: profile.language,\n      login: user.login,\n      qualityProfile: profile.name\n    }).then(() => {\n      this.handleDeleteModalClose();\n      this.props.onDelete(user);\n    });\n  };\n\n  renderDeleteModal = (props: ChildrenProps) => (\n    <div>\n      <header className=\"modal-head\">\n        <h2>{translate('users.remove')}</h2>\n      </header>\n\n      <div className=\"modal-body\">\n        <FormattedMessage\n          defaultMessage={translate('users.remove.confirmation')}\n          id=\"users.remove.confirmation\"\n          values={{\n            user: <strong>{this.props.user.name}</strong>\n          }}\n        />\n      </div>\n\n      <footer className=\"modal-foot\">\n        {props.submitting && <i className=\"spinner spacer-right\" />}\n        <SubmitButton\n          className=\"button-red\"\n          disabled={props.submitting}\n          onClick={props.onSubmitClick}>\n          {translate('remove')}\n        </SubmitButton>\n        <ResetButtonLink onClick={props.onCloseClick}>{translate('cancel')}</ResetButtonLink>\n      </footer>\n    </div>\n  );\n\n  render() {\n    const { user } = this.props;\n\n    return (\n      <div className=\"clearfix big-spacer-bottom\">\n        <DeleteButton\n          className=\"pull-right spacer-top spacer-left spacer-right button-small\"\n          onClick={this.handleDeleteClick}\n        />\n        <Avatar className=\"pull-left spacer-right\" hash={user.avatar} name={user.name} size={32} />\n        <div className=\"overflow-hidden\">\n          <strong>{user.name}</strong>\n          <div className=\"note\">{user.login}</div>\n        </div>\n\n        {this.state.deleteModal && (\n          <SimpleModal\n            header={translate('users.remove')}\n            onClose={this.handleDeleteModalClose}\n            onSubmit={this.handleDelete}>\n            {this.renderDeleteModal}\n          </SimpleModal>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy, uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  searchGroups,\n  searchUsers,\n  SearchUsersGroupsParameters\n} from '../../../api/quality-profiles';\nimport { Profile } from '../types';\nimport ProfilePermissionsForm from './ProfilePermissionsForm';\nimport ProfilePermissionsGroup from './ProfilePermissionsGroup';\nimport ProfilePermissionsUser from './ProfilePermissionsUser';\n\nexport interface Group {\n  name: string;\n}\n\ninterface Props {\n  profile: Pick<Profile, 'key' | 'language' | 'name'>;\n}\n\ninterface State {\n  addUserForm: boolean;\n  groups?: Group[];\n  loading: boolean;\n  users?: T.UserSelected[];\n}\n\nexport default class ProfilePermissions extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { addUserForm: false, loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchUsersAndGroups();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile.key !== this.props.profile.key) {\n      this.fetchUsersAndGroups();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchUsersAndGroups() {\n    this.setState({ loading: true });\n    const { profile } = this.props;\n    const parameters: SearchUsersGroupsParameters = {\n      language: profile.language,\n      qualityProfile: profile.name,\n      selected: 'selected'\n    };\n    Promise.all([searchUsers(parameters), searchGroups(parameters)]).then(\n      ([usersResponse, groupsResponse]) => {\n        if (this.mounted) {\n          this.setState({\n            groups: groupsResponse.groups,\n            loading: false,\n            users: usersResponse.users\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleAddUserButtonClick = () => {\n    this.setState({ addUserForm: true });\n  };\n\n  handleAddUserFormClose = () => {\n    if (this.mounted) {\n      this.setState({ addUserForm: false });\n    }\n  };\n\n  handleUserAdd = (addedUser: T.UserSelected) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        addUserForm: false,\n        users: state.users && uniqBy([...state.users, addedUser], user => user.login)\n      }));\n    }\n  };\n\n  handleUserDelete = (removedUser: T.UserSelected) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        users: state.users && state.users.filter(user => user !== removedUser)\n      }));\n    }\n  };\n\n  handleGroupAdd = (addedGroup: T.Group) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        addUserForm: false,\n        groups: state.groups && uniqBy([...state.groups, addedGroup], group => group.name)\n      }));\n    }\n  };\n\n  handleGroupDelete = (removedGroup: T.Group) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        groups: state.groups && state.groups.filter(group => group !== removedGroup)\n      }));\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"boxed-group\">\n        <h2>{translate('permissions.page')}</h2>\n        <div className=\"boxed-group-inner\">\n          <p className=\"note\">{translate('quality_profiles.default_permissions')}</p>\n\n          {this.state.loading ? (\n            <div className=\"big-spacer-top\">\n              <i className=\"spinner\" />\n            </div>\n          ) : (\n            <div className=\"big-spacer-top\">\n              {this.state.users &&\n                sortBy(this.state.users, 'name').map(user => (\n                  <ProfilePermissionsUser\n                    key={user.login}\n                    onDelete={this.handleUserDelete}\n                    profile={this.props.profile}\n                    user={user}\n                  />\n                ))}\n              {this.state.groups &&\n                sortBy(this.state.groups, 'name').map(group => (\n                  <ProfilePermissionsGroup\n                    group={group}\n                    key={group.name}\n                    onDelete={this.handleGroupDelete}\n                    profile={this.props.profile}\n                  />\n                ))}\n              <div className=\"text-right\">\n                <Button onClick={this.handleAddUserButtonClick}>\n                  {translate('quality_profiles.grant_permissions_to_more_users')}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {this.state.addUserForm && (\n          <ProfilePermissionsForm\n            onClose={this.handleAddUserFormClose}\n            onGroupAdd={this.handleGroupAdd}\n            onUserAdd={this.handleUserAdd}\n            profile={this.props.profile}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find, without } from 'lodash';\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport SelectList, {\n  SelectListFilter,\n  SelectListSearchParams\n} from 'sonar-ui-common/components/controls/SelectList';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  associateProject,\n  dissociateProject,\n  getProfileProjects,\n  ProfileProject\n} from '../../../api/quality-profiles';\nimport { Profile } from '../types';\n\ninterface Props {\n  onClose: () => void;\n  profile: Profile;\n}\n\ninterface State {\n  needToReload: boolean;\n  lastSearchParams?: SelectListSearchParams;\n  projects: ProfileProject[];\n  projectsTotalCount?: number;\n  selectedProjects: string[];\n}\n\nexport default class ChangeProjectsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      needToReload: false,\n      projects: [],\n      selectedProjects: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchProjects = (searchParams: SelectListSearchParams) =>\n    getProfileProjects({\n      key: this.props.profile.key,\n      p: searchParams.page,\n      ps: searchParams.pageSize,\n      q: searchParams.query !== '' ? searchParams.query : undefined,\n      selected: searchParams.filter\n    }).then(data => {\n      if (this.mounted) {\n        this.setState(prevState => {\n          const more = searchParams.page != null && searchParams.page > 1;\n\n          const projects = more ? [...prevState.projects, ...data.results] : data.results;\n          const newSeletedProjects = data.results\n            .filter(project => project.selected)\n            .map(project => project.key);\n          const selectedProjects = more\n            ? [...prevState.selectedProjects, ...newSeletedProjects]\n            : newSeletedProjects;\n\n          return {\n            lastSearchParams: searchParams,\n            needToReload: false,\n            projects,\n            projectsTotalCount: data.paging.total,\n            selectedProjects\n          };\n        });\n      }\n    });\n\n  handleSelect = (key: string) =>\n    associateProject(this.props.profile, key).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedProjects: [...state.selectedProjects, key]\n        }));\n      }\n    });\n\n  handleUnselect = (key: string) =>\n    dissociateProject(this.props.profile, key).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedProjects: without(state.selectedProjects, key)\n        }));\n      }\n    });\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  renderElement = (key: string): React.ReactNode => {\n    const project = find(this.state.projects, { key });\n    return (\n      <div className=\"select-list-list-item\">\n        {project === undefined ? (\n          key\n        ) : (\n          <>\n            {project.name}\n            <br />\n            <span className=\"note\">{project.key}</span>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const header = translate('projects');\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n\n        <div className=\"modal-body modal-container\" id=\"profile-projects\">\n          <SelectList\n            allowBulkSelection={true}\n            elements={this.state.projects.map(project => project.key)}\n            elementsTotalCount={this.state.projectsTotalCount}\n            labelAll={translate('quality_gates.projects.all')}\n            labelSelected={translate('quality_gates.projects.with')}\n            labelUnselected={translate('quality_gates.projects.without')}\n            needToReload={\n              this.state.needToReload &&\n              this.state.lastSearchParams &&\n              this.state.lastSearchParams.filter !== SelectListFilter.All\n            }\n            onSearch={this.fetchProjects}\n            onSelect={this.handleSelect}\n            onUnselect={this.handleUnselect}\n            renderElement={this.renderElement}\n            selectedElements={this.state.selectedProjects}\n            withPaging={true}\n          />\n        </div>\n\n        <div className=\"modal-foot\">\n          <a href=\"#\" onClick={this.handleCloseClick}>\n            {translate('close')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProfileProjects } from '../../../api/quality-profiles';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { Profile } from '../types';\nimport ChangeProjectsForm from './ChangeProjectsForm';\n\ninterface Props {\n  profile: Profile;\n}\n\ninterface State {\n  formOpen: boolean;\n  loading: boolean;\n  loadingMore: boolean;\n  page: number;\n  projects: Array<{ key: string; name: string }>;\n  total: number;\n}\n\nexport default class ProfileProjects extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  state: State = {\n    formOpen: false,\n    loading: true,\n    loadingMore: false,\n    page: 1,\n    projects: [],\n    total: 0\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadProjects();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile.key !== this.props.profile.key) {\n      this.loadProjects();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  loadProjects() {\n    if (this.props.profile.isDefault) {\n      this.setState({ loading: false, projects: [] });\n      return;\n    }\n\n    this.setState({ loading: true });\n    const data = { key: this.props.profile.key, page: this.state.page };\n    getProfileProjects(data).then(({ paging, results }) => {\n      if (this.mounted) {\n        this.setState({\n          projects: results,\n          total: paging.total,\n          loading: false\n        });\n      }\n    }, this.stopLoading);\n  }\n\n  loadMore = () => {\n    this.setState({ loadingMore: true });\n    const data = { key: this.props.profile.key, page: this.state.page + 1 };\n    getProfileProjects(data).then(({ paging, results }) => {\n      if (this.mounted) {\n        this.setState(state => ({\n          projects: [...state.projects, ...results],\n          total: paging.total,\n          loadingMore: false\n        }));\n      }\n    }, this.stopLoading);\n  };\n\n  handleChangeClick = () => {\n    this.setState({ formOpen: true });\n  };\n\n  closeForm = () => {\n    this.setState({ formOpen: false });\n    this.loadProjects();\n  };\n\n  renderDefault() {\n    return (\n      <div>\n        <span className=\"badge spacer-right\">{translate('default')}</span>\n        {translate('quality_profiles.projects_for_default')}\n      </div>\n    );\n  }\n\n  renderProjects() {\n    if (this.state.loading) {\n      return <i className=\"spinner\" />;\n    }\n\n    const { projects } = this.state;\n\n    if (projects.length === 0) {\n      return <div>{translate('quality_profiles.no_projects_associated_to_profile')}</div>;\n    }\n\n    return (\n      <>\n        <ul>\n          {projects.map(project => (\n            <li className=\"spacer-top js-profile-project\" data-key={project.key} key={project.key}>\n              <Link className=\"link-with-icon\" to={getProjectUrl(project.key)}>\n                <QualifierIcon qualifier=\"TRK\" /> <span>{project.name}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n        <ListFooter\n          count={projects.length}\n          loadMore={this.loadMore}\n          ready={!this.state.loadingMore}\n          total={this.state.total}\n        />\n      </>\n    );\n  }\n\n  render() {\n    const { profile } = this.props;\n    return (\n      <div className=\"boxed-group quality-profile-projects\">\n        {profile.actions && profile.actions.associateProjects && (\n          <div className=\"boxed-group-actions\">\n            <Button className=\"js-change-projects\" onClick={this.handleChangeClick}>\n              {translate('quality_profiles.change_projects')}\n            </Button>\n          </div>\n        )}\n\n        <header className=\"boxed-group-header\">\n          <h2>{translate('projects')}</h2>\n        </header>\n\n        <div className=\"boxed-group-inner\">\n          {profile.isDefault ? this.renderDefault() : this.renderProjects()}\n        </div>\n\n        {this.state.formOpen && <ChangeProjectsForm onClose={this.closeForm} profile={profile} />}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getDeprecatedActiveRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  activeDeprecatedRules: number;\n  profile: string;\n}\n\nexport default function ProfileRulesDeprecatedWarning(props: Props) {\n  return (\n    <div className=\"quality-profile-rules-deprecated clearfix\">\n      <span className=\"pull-left\">\n        <span className=\"text-middle\">{translate('quality_profiles.deprecated_rules')}</span>\n        <HelpTooltip\n          className=\"spacer-left\"\n          overlay={translate('quality_profiles.deprecated_rules_description')}\n        />\n      </span>\n      <Link className=\"pull-right\" to={getDeprecatedActiveRulesUrl({ qprofile: props.profile })}>\n        {props.activeDeprecatedRules}\n      </Link>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport IssueTypeIcon from 'sonar-ui-common/components/icons/IssueTypeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  count: number | null;\n  qprofile: string;\n  total: number | null;\n  type: string;\n}\n\nexport default function ProfileRulesRowOfType(props: Props) {\n  const activeRulesUrl = getRulesUrl({\n    qprofile: props.qprofile,\n    activation: 'true',\n    types: props.type\n  });\n  const inactiveRulesUrl = getRulesUrl({\n    qprofile: props.qprofile,\n    activation: 'false',\n    types: props.type\n  });\n  let inactiveCount = null;\n  if (props.count != null && props.total != null) {\n    inactiveCount = props.total - props.count;\n  }\n\n  return (\n    <tr>\n      <td>\n        <span>\n          <IssueTypeIcon className=\"little-spacer-right\" query={props.type} />\n          {translate('issue.type', props.type, 'plural')}\n        </span>\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {props.count != null && (\n          <Link to={activeRulesUrl}>{formatMeasure(props.count, 'SHORT_INT', null)}</Link>\n        )}\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {inactiveCount != null &&\n          (inactiveCount > 0 ? (\n            <Link className=\"small text-muted\" to={inactiveRulesUrl}>\n              {formatMeasure(inactiveCount, 'SHORT_INT', null)}\n            </Link>\n          ) : (\n            <span className=\"note text-muted\">0</span>\n          ))}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  count: number | null;\n  qprofile: string;\n  total: number | null;\n}\n\nexport default function ProfileRulesRowTotal(props: Props) {\n  const activeRulesUrl = getRulesUrl({ qprofile: props.qprofile, activation: 'true' });\n  const inactiveRulesUrl = getRulesUrl({ qprofile: props.qprofile, activation: 'false' });\n  let inactiveCount = null;\n  if (props.count != null && props.total != null) {\n    inactiveCount = props.total - props.count;\n  }\n\n  return (\n    <tr>\n      <td>\n        <strong>{translate('total')}</strong>\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {props.count != null && (\n          <Link to={activeRulesUrl}>\n            <strong>{formatMeasure(props.count, 'SHORT_INT', null)}</strong>\n          </Link>\n        )}\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {inactiveCount != null &&\n          (inactiveCount > 0 ? (\n            <Link className=\"small text-muted\" to={inactiveRulesUrl}>\n              <strong>{formatMeasure(inactiveCount, 'SHORT_INT', null)}</strong>\n            </Link>\n          ) : (\n            <span className=\"note text-muted\">0</span>\n          ))}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  language: string;\n  profile: string;\n  sonarway: string;\n  sonarWayMissingRules: number;\n}\n\nexport default function ProfileRulesSonarWayComparison(props: Props) {\n  const url = getRulesUrl({\n    qprofile: props.profile,\n    activation: 'false',\n    compareToProfile: props.sonarway,\n    languages: props.language\n  });\n\n  return (\n    <div className=\"quality-profile-rules-sonarway-missing clearfix\">\n      <span className=\"pull-left\">\n        <span className=\"text-middle\">{translate('quality_profiles.sonarway_missing_rules')}</span>\n        <HelpTooltip\n          className=\"spacer-left\"\n          overlay={translate('quality_profiles.sonarway_missing_rules_description')}\n        />\n      </span>\n      <Link className=\"pull-right\" data-test=\"rules\" to={url}>\n        {props.sonarWayMissingRules}\n      </Link>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { keyBy } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getQualityProfile } from '../../../api/quality-profiles';\nimport { searchRules, takeFacet } from '../../../api/rules';\nimport { getRulesUrl } from '../../../helpers/urls';\nimport { Profile } from '../types';\nimport ProfileRulesDeprecatedWarning from './ProfileRulesDeprecatedWarning';\nimport ProfileRulesRowOfType from './ProfileRulesRowOfType';\nimport ProfileRulesRowTotal from './ProfileRulesRowTotal';\nimport ProfileRulesSonarWayComparison from './ProfileRulesSonarWayComparison';\n\nconst TYPES = ['BUG', 'VULNERABILITY', 'CODE_SMELL', 'SECURITY_HOTSPOT'];\n\ninterface Props {\n  profile: Profile;\n}\n\ninterface ByType {\n  val: string;\n  count: number | null;\n}\n\ninterface State {\n  activatedTotal: number | null;\n  activatedByType: T.Dict<ByType>;\n  allByType: T.Dict<ByType>;\n  compareToSonarWay: { profile: string; profileName: string; missingRuleCount: number } | null;\n  total: number | null;\n}\n\nexport default class ProfileRules extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  state: State = {\n    activatedTotal: null,\n    activatedByType: keyBy(\n      TYPES.map(t => ({ val: t, count: null })),\n      'val'\n    ),\n    allByType: keyBy(\n      TYPES.map(t => ({ val: t, count: null })),\n      'val'\n    ),\n    compareToSonarWay: null,\n    total: null\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadRules();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile.key !== this.props.profile.key) {\n      this.loadRules();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadProfile() {\n    if (this.props.profile.isBuiltIn) {\n      return Promise.resolve(null);\n    }\n    return getQualityProfile({\n      compareToSonarWay: true,\n      profile: this.props.profile\n    });\n  }\n\n  loadAllRules() {\n    return searchRules({\n      languages: this.props.profile.language,\n      facets: 'types',\n      ps: 1\n    });\n  }\n\n  loadActivatedRules() {\n    return searchRules({\n      activation: 'true',\n      facets: 'types',\n      ps: 1,\n      qprofile: this.props.profile.key\n    });\n  }\n\n  loadRules() {\n    return Promise.all([this.loadAllRules(), this.loadActivatedRules(), this.loadProfile()]).then(\n      responses => {\n        if (this.mounted) {\n          const [allRules, activatedRules, showProfile] = responses;\n          this.setState({\n            activatedTotal: activatedRules.total,\n            allByType: keyBy<ByType>(takeFacet(allRules, 'types'), 'val'),\n            activatedByType: keyBy<ByType>(takeFacet(activatedRules, 'types'), 'val'),\n            compareToSonarWay: showProfile && showProfile.compareToSonarWay,\n            total: allRules.total\n          });\n        }\n      }\n    );\n  }\n\n  getRulesCountForType(type: string) {\n    return this.state.activatedByType && this.state.activatedByType[type]\n      ? this.state.activatedByType[type].count\n      : null;\n  }\n\n  getRulesTotalForType(type: string) {\n    return this.state.allByType && this.state.allByType[type]\n      ? this.state.allByType[type].count\n      : null;\n  }\n\n  render() {\n    const { profile } = this.props;\n    const { compareToSonarWay } = this.state;\n    const activateMoreUrl = getRulesUrl({ qprofile: profile.key, activation: 'false' });\n    const { actions = {} } = profile;\n\n    return (\n      <div className=\"boxed-group quality-profile-rules\">\n        <div className=\"quality-profile-rules-distribution\">\n          <table className=\"data condensed\">\n            <thead>\n              <tr>\n                <th>\n                  <h2>{translate('rules')}</h2>\n                </th>\n                <th>{translate('active')}</th>\n                <th>{translate('inactive')}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <ProfileRulesRowTotal\n                count={this.state.activatedTotal}\n                qprofile={profile.key}\n                total={this.state.total}\n              />\n              {TYPES.map(type => (\n                <ProfileRulesRowOfType\n                  count={this.getRulesCountForType(type)}\n                  key={type}\n                  qprofile={profile.key}\n                  total={this.getRulesTotalForType(type)}\n                  type={type}\n                />\n              ))}\n            </tbody>\n          </table>\n\n          {actions.edit && !profile.isBuiltIn && (\n            <div className=\"text-right big-spacer-top\">\n              <Link className=\"button js-activate-rules\" to={activateMoreUrl}>\n                {translate('quality_profiles.activate_more')}\n              </Link>\n            </div>\n          )}\n\n          {/* if a user is allowed to `copy` a profile if they are a global admin */}\n          {/* this user could potentially active more rules if the profile was not built-in */}\n          {/* in such cases it's better to show the button but disable it with a tooltip */}\n          {actions.copy && profile.isBuiltIn && (\n            <div className=\"text-right big-spacer-top\">\n              <Tooltip overlay={translate('quality_profiles.activate_more.help.built_in')}>\n                <Button className=\"disabled js-activate-rules\">\n                  {translate('quality_profiles.activate_more')}\n                </Button>\n              </Tooltip>\n            </div>\n          )}\n        </div>\n        {profile.activeDeprecatedRuleCount > 0 && (\n          <ProfileRulesDeprecatedWarning\n            activeDeprecatedRules={profile.activeDeprecatedRuleCount}\n            profile={profile.key}\n          />\n        )}\n        {compareToSonarWay != null && compareToSonarWay.missingRuleCount > 0 && (\n          <ProfileRulesSonarWayComparison\n            language={profile.language}\n            profile={profile.key}\n            sonarWayMissingRules={compareToSonarWay.missingRuleCount}\n            sonarway={compareToSonarWay.profile}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Exporter, Profile } from '../types';\nimport ProfileExporters from './ProfileExporters';\nimport ProfileInheritance from './ProfileInheritance';\nimport ProfilePermissions from './ProfilePermissions';\nimport ProfileProjects from './ProfileProjects';\nimport ProfileRules from './ProfileRules';\n\ninterface Props {\n  exporters: Exporter[];\n  profile: Profile;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\nexport default function ProfileDetails(props: Props) {\n  const { profile } = props;\n  return (\n    <div>\n      <div className=\"quality-profile-grid\">\n        <div className=\"quality-profile-grid-left\">\n          <ProfileRules profile={profile} />\n          <ProfileExporters exporters={props.exporters} profile={profile} />\n          {profile.actions && profile.actions.edit && !profile.isBuiltIn && (\n            <ProfilePermissions profile={profile} />\n          )}\n        </div>\n        <div className=\"quality-profile-grid-right\">\n          <ProfileInheritance\n            profile={profile}\n            profiles={props.profiles}\n            updateProfiles={props.updateProfiles}\n          />\n          <ProfileProjects profile={profile} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { map } from 'lodash';\nimport { csvEscape } from 'sonar-ui-common/helpers/csv';\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Exporter, ProfileChangelogEvent } from '../apps/quality-profiles/types';\n\nexport interface ProfileActions {\n  associateProjects?: boolean;\n  copy?: boolean;\n  delete?: boolean;\n  edit?: boolean;\n  setAsDefault?: boolean;\n}\n\nexport interface Actions {\n  create?: boolean;\n}\n\nexport interface Profile {\n  actions?: ProfileActions;\n  key: string;\n  name: string;\n  language: string;\n  languageName: string;\n  isInherited?: boolean;\n  parentKey?: string;\n  parentName?: string;\n  isDefault?: boolean;\n  activeRuleCount: number;\n  activeDeprecatedRuleCount: number;\n  rulesUpdatedAt?: string;\n  lastUsed?: string;\n  userUpdatedAt?: string;\n  isBuiltIn?: boolean;\n  projectCount?: number;\n}\n\nexport interface SearchQualityProfilesParameters {\n  defaults?: boolean;\n  language?: string;\n  project?: string;\n  qualityProfile?: string;\n}\n\nexport interface SearchQualityProfilesResponse {\n  actions?: Actions;\n  profiles: Profile[];\n}\n\nexport function searchQualityProfiles(\n  parameters?: SearchQualityProfilesParameters\n): Promise<SearchQualityProfilesResponse> {\n  return getJSON('/api/qualityprofiles/search', parameters).catch(throwGlobalError);\n}\n\nexport function getQualityProfile({\n  compareToSonarWay,\n  profile: { key }\n}: {\n  compareToSonarWay?: boolean;\n  profile: Profile;\n}): Promise<any> {\n  return getJSON('/api/qualityprofiles/show', { compareToSonarWay, key });\n}\n\nexport function createQualityProfile(data: RequestData): Promise<any> {\n  return postJSON('/api/qualityprofiles/create', data).catch(throwGlobalError);\n}\n\nexport function restoreQualityProfile(data: RequestData): Promise<any> {\n  return postJSON('/api/qualityprofiles/restore', data).catch(throwGlobalError);\n}\n\nexport interface ProfileProject {\n  key: string;\n  name: string;\n  selected: boolean;\n}\n\nexport function getProfileProjects(\n  data: RequestData\n): Promise<{ more: boolean; paging: T.Paging; results: ProfileProject[] }> {\n  return getJSON('/api/qualityprofiles/projects', data).catch(throwGlobalError);\n}\n\nexport function getProfileInheritance({\n  language,\n  name: qualityProfile\n}: Profile): Promise<{\n  ancestors: T.ProfileInheritanceDetails[];\n  children: T.ProfileInheritanceDetails[];\n  profile: T.ProfileInheritanceDetails;\n}> {\n  return getJSON('/api/qualityprofiles/inheritance', {\n    language,\n    qualityProfile\n  }).catch(throwGlobalError);\n}\n\nexport function setDefaultProfile({ language, name: qualityProfile }: Profile) {\n  return post('/api/qualityprofiles/set_default', {\n    language,\n    qualityProfile\n  });\n}\n\nexport function renameProfile(key: string, name: string) {\n  return post('/api/qualityprofiles/rename', { key, name }).catch(throwGlobalError);\n}\n\nexport function copyProfile(fromKey: string, toName: string): Promise<any> {\n  return postJSON('/api/qualityprofiles/copy', { fromKey, toName }).catch(throwGlobalError);\n}\n\nexport function deleteProfile({ language, name: qualityProfile }: Profile) {\n  return post('/api/qualityprofiles/delete', { language, qualityProfile }).catch(throwGlobalError);\n}\n\nexport function changeProfileParent(\n  { language, name: qualityProfile }: Profile,\n  parentProfile?: Profile\n) {\n  return post('/api/qualityprofiles/change_parent', {\n    language,\n    qualityProfile,\n    parentQualityProfile: parentProfile ? parentProfile.name : undefined\n  }).catch(throwGlobalError);\n}\n\nexport function getQualityProfileBackupUrl({ language, name: qualityProfile }: Profile) {\n  const queryParams = Object.entries({ language, qualityProfile })\n    .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n    .join('&');\n  return `/api/qualityprofiles/backup?${queryParams}`;\n}\n\nexport function getQualityProfileExporterUrl(\n  { key: exporterKey }: Exporter,\n  { language, name: qualityProfile }: Profile\n) {\n  const queryParams = Object.entries({ exporterKey, language, qualityProfile })\n    .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n    .join('&');\n  return `/api/qualityprofiles/export?${queryParams}`;\n}\n\nexport function getImporters(): Promise<\n  Array<{ key: string; languages: Array<string>; name: string }>\n> {\n  return getJSON('/api/qualityprofiles/importers').then(r => r.importers, throwGlobalError);\n}\n\nexport function getExporters(): Promise<any> {\n  return getJSON('/api/qualityprofiles/exporters').then(r => r.exporters);\n}\n\nexport function getProfileChangelog(\n  since: any,\n  to: any,\n  { language, name: qualityProfile }: Profile,\n  page?: number\n): Promise<{\n  events: ProfileChangelogEvent[];\n  p: number;\n  ps: number;\n  total: number;\n}> {\n  return getJSON('/api/qualityprofiles/changelog', {\n    since,\n    to,\n    language,\n    qualityProfile,\n    p: page\n  });\n}\n\nexport interface CompareResponse {\n  left: { name: string };\n  right: { name: string };\n  inLeft: Array<{ key: string; name: string; severity: string }>;\n  inRight: Array<{ key: string; name: string; severity: string }>;\n  modified: Array<{\n    key: string;\n    name: string;\n    left: { params: T.Dict<string>; severity: string };\n    right: { params: T.Dict<string>; severity: string };\n  }>;\n}\n\nexport function compareProfiles(leftKey: string, rightKey: string): Promise<CompareResponse> {\n  return getJSON('/api/qualityprofiles/compare', { leftKey, rightKey });\n}\n\nexport function associateProject({ language, name: qualityProfile }: Profile, project: string) {\n  return post('/api/qualityprofiles/add_project', {\n    language,\n    qualityProfile,\n    project\n  }).catch(throwGlobalError);\n}\n\nexport function dissociateProject({ language, name: qualityProfile }: Profile, project: string) {\n  return post('/api/qualityprofiles/remove_project', {\n    language,\n    qualityProfile,\n    project\n  }).catch(throwGlobalError);\n}\n\nexport interface SearchUsersGroupsParameters {\n  language: string;\n  qualityProfile: string;\n  q?: string;\n  selected?: 'all' | 'selected' | 'deselected';\n}\n\ninterface SearchUsersResponse {\n  users: T.UserSelected[];\n  paging: T.Paging;\n}\n\nexport function searchUsers(parameters: SearchUsersGroupsParameters): Promise<SearchUsersResponse> {\n  return getJSON('/api/qualityprofiles/search_users', parameters).catch(throwGlobalError);\n}\n\nexport interface SearchGroupsResponse {\n  groups: Array<{ name: string }>;\n  paging: T.Paging;\n}\n\nexport function searchGroups(\n  parameters: SearchUsersGroupsParameters\n): Promise<SearchGroupsResponse> {\n  return getJSON('/api/qualityprofiles/search_groups', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveUserParameters {\n  language: string;\n  login: string;\n  qualityProfile: string;\n}\n\nexport function addUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_user', parameters).catch(throwGlobalError);\n}\n\nexport function removeUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_user', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveGroupParameters {\n  group: string;\n  language: string;\n  qualityProfile: string;\n}\n\nexport function addGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_group', parameters).catch(throwGlobalError);\n}\n\nexport function removeGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_group', parameters).catch(throwGlobalError);\n}\n\nexport interface BulkActivateParameters {\n  activation?: boolean;\n  active_severities?: string;\n  asc?: boolean;\n  available_since?: string;\n  compareToProfile?: string;\n  inheritance?: string;\n  is_template?: string;\n  languages?: string;\n  q?: string;\n  qprofile?: string;\n  repositories?: string;\n  rule_key?: string;\n  s?: string;\n  severities?: string;\n  statuses?: string;\n  tags?: string;\n  targetKey: string;\n  targetSeverity?: string;\n  template_key?: string;\n  types?: string;\n}\n\nexport function bulkActivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/activate_rules', data);\n}\n\nexport function bulkDeactivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/deactivate_rules', data);\n}\n\nexport function activateRule(data: {\n  key: string;\n  params?: T.Dict<string>;\n  reset?: boolean;\n  rule: string;\n  severity?: string;\n}) {\n  const params =\n    data.params && map(data.params, (value, key) => `${key}=${csvEscape(value)}`).join(';');\n  return post('/api/qualityprofiles/activate_rule', { ...data, params }).catch(throwGlobalError);\n}\n\nexport function deactivateRule(data: { key: string; rule: string }) {\n  return post('/api/qualityprofiles/deactivate_rule', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  className?: string;\n  tooltip?: boolean;\n}\n\nexport default function BuiltInQualityProfileBadge({ className, tooltip = true }: Props) {\n  const badge = (\n    <div className={classNames('badge badge-info', className)}>\n      {translate('quality_profiles.built_in')}\n    </div>\n  );\n\n  if (tooltip) {\n    return <Tooltip overlay={translate('quality_profiles.built_in.description')}>{badge}</Tooltip>;\n  }\n\n  return badge;\n}\n"],"sourceRoot":""}