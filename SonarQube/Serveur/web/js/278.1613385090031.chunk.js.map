{"version":3,"sources":["webpack:///./src/main/js/app/components/ComponentContext.tsx","webpack:///./src/main/js/components/common/CodeSnippet.css?463c","webpack:///./src/main/js/components/common/CodeSnippet.css","webpack:///./src/main/js/components/common/PrivacyBadgeContainer.tsx","webpack:///./src/main/js/app/utils/isValidUri.ts","webpack:///./src/main/js/api/favorites.ts","webpack:///./src/main/js/components/controls/Favorite.tsx","webpack:///./src/main/js/components/common/BranchStatus.tsx","webpack:///./src/main/js/api/web-api.ts","webpack:///./src/main/js/apps/account/notifications/NotificationsList.tsx","webpack:///./src/main/js/api/projectLinks.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaLink.tsx","webpack:///./src/main/js/api/notifications.ts","webpack:///./src/main/js/components/hoc/withNotifications.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.css?8738","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.css","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.css?82fb","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.css","webpack:///./src/main/js/app/components/nav/component/Menu.css?14a8","webpack:///./src/main/js/app/components/nav/component/Menu.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.css?f7cf","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/styles.css?4563","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/styles.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.css?e00c","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.css","webpack:///./src/main/js/app/components/ComponentContainerNotFound.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavLicenseNotif.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBgTaskNotif.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/CurrentBranchLike.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/MenuItem.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/MenuItemList.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/Menu.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/CurrentBranchLikeMergeInformation.tsx","webpack:///./src/main/js/app/components/nav/component/Breadcrumb.tsx","webpack:///./src/main/js/app/components/nav/component/Header.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavWarnings.tsx","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.tsx","webpack:///./src/main/js/app/components/nav/component/Menu.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/utils.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/BadgeButton.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/BadgeParams.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/ProjectBadges.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawerPage.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/notifications/ProjectNotifications.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformationPages.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/DrawerLink.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaKey.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaLinks.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaQualityGate.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaQualityProfiles.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaSize.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaTagsSelector.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaTags.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformationRenderer.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNav.tsx","webpack:///./src/main/js/app/components/ComponentContainer.tsx","webpack:///./src/main/js/components/common/CodeSnippet.tsx","webpack:///./src/main/js/components/tags/TagsList.css?d861","webpack:///./src/main/js/components/common/DocumentationTooltip.tsx","webpack:///./src/main/js/components/common/MultiSelectOption.tsx","webpack:///./src/main/js/components/common/MultiSelect.tsx","webpack:///./src/main/js/components/tags/TagsList.tsx","webpack:///./src/main/js/components/tags/TagsList.css","webpack:///./src/main/js/api/nav.ts","webpack:///./src/main/js/components/tags/TagsSelector.tsx","webpack:///./src/main/js/apps/background-tasks/constants.ts","webpack:///./src/main/js/components/icons/BranchLikeIcon.tsx","webpack:///./src/main/js/helpers/projectLinks.ts","webpack:///./src/main/js/api/branches.ts","webpack:///./src/main/js/components/controls/HomePageSelect.tsx","webpack:///./src/main/js/components/shared/DrilldownLink.tsx"],"names":["ComponentContext","branchLike","undefined","component","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","PrivacyBadgeContainer","className","qualifier","visibility","overlay","url","test","addFavorite","removeFavorite","props","mounted","toggleFavorite","newFavorite","state","favorite","then","setState","handleFavorite","componentDidMount","this","componentDidUpdate","_prevProps","prevState","componentWillUnmount","render","status","level","small","fetchWebApi","showInternal","include_internals","r","catch","fetchResponseExample","domain","action","controller","isEnabled","type","channel","notifications","find","notification","handleCheck","checked","onAdd","onRemove","getDispatcherLabel","dispatcher","globalMessageKey","projectMessageKey","project","channels","checkboxId","types","map","key","id","onCheck","getProjectLinks","projectKey","deleteLink","linkId","createLink","data","expanded","handleClick","event","preventDefault","handleCollapse","handleSelect","currentTarget","select","iconOnly","link","linkTitle","isValid","href","onClick","rel","target","title","readOnly","value","getNotifications","throwGlobalError","addNotification","removeNotification","withNotifications","WrappedComponent","globalTypes","loading","perProjectTypes","fetchNotifications","response","addNotificationToState","added","areNotificationsEqual","removeNotificationFromState","removed","filter","a","b","displayName","ComponentContainerNotFound","defaultTitle","defer","to","fetchIsValidLicense","isValidLicense","currentTask","errorType","Alert","display","variant","componentQualifier","Project","errorMessage","appState","canAdmin","withAppState","renderMessage","messageKey","branch","stacktrace","location","backgroundTaskUrl","canSeeBackgroundTasks","configuration","showBackgroundTasks","isOnBackgroundTaskPage","pathname","defaultMessage","values","currentTaskOnSameBranch","isInProgress","isPending","ALL","Failed","pullRequest","pullRequestTitle","message","withRouter","branchesEnabled","currentBranchLike","hasManyBranches","isApplication","Application","canAdminComponent","showSettings","BranchLikeIcon","plusIcon","fill","blue","size","DocumentationTooltip","links","label","inPlace","additionalIcon","indent","setSelectedNode","onSelect","selected","active","ref","BranchStatus","listNode","selectedNode","parent","smooth","branchLikeTree","hasResults","selectedBranchLike","renderItem","node","mainBranchTree","branchTree","tree","pullRequests","length","pr","parentlessPullRequests","orphanPullRequests","processBranchLikes","branchLikes","branchLikesToDisplay","reduce","prev","t","branchLikesToDisplayTree","openHighlightedBranchLike","handleOnSelect","highlightSiblingBranchlike","indexDelta","selectBranchLikeIndex","findIndex","newIndex","handleKeyDown","keyCode","Enter","UpArrow","DownArrow","handleSearchChange","query","q","toLowerCase","filteredBranchLikes","bl","name","includes","onClose","router","some","showManageLink","Dropdown","noPadding","autoFocus","onChange","onKeyDown","placeholder","isMenuOpen","setIsMenuOpen","isMenuEnabled","currentBranchLikeElement","Boolean","dropdown","onRequestClose","open","Breadcrumb","breadcrumbs","lastBreadcrumbElement","isNoMainBranch","breadcrumbElement","isFirst","isNotLast","currentUser","Favorite","isFavorite","AnalysisWarningsModal","lazyLoadComponent","modal","blur","handleCloseModal","warnings","warningsCount","componentKey","onWarningDismiss","isABranch","currentPage","isMain","Portfolio","SubPortfolio","getCurrentPage","displayVersion","version","analysisDate","date","HomePageSelect","SETTINGS_URLS","MenuLink","hasAnalysis","isProject","isDeveloper","Developper","isPortfolio","getConfiguration","getQuery","renderDashboardLink","activeClassName","renderCodeLink","renderActivityLink","renderIssuesLink","resolved","renderComponentMeasuresLink","renderSecurityHotspotsLink","renderSecurityReports","extensions","extension","startsWith","renderAdministration","isSettingsActive","window","indexOf","adminLinks","renderAdministrationLinks","tagName","onToggleClick","role","renderSettingsLink","renderBranchesLink","renderBaselineLink","renderConsoleAppLink","renderAdminExtensions","renderProfilesLink","renderQualityGateLink","renderCustomMeasuresLink","renderLinksLink","renderPermissionsLink","renderBackgroundTasksLink","renderUpdateKeyLink","renderWebhooksLink","renderDeletionLink","renderProjectInformationButton","e","onToggleProjectInfo","tabIndex","showQualityProfiles","showQualityGates","showManualMeasures","showLinks","showPermissions","showUpdateKey","renderExtension","isAdmin","baseQuery","renderExtensions","withoutSecurityExtension","children","displayed","top","style","onKeydown","onClickOutside","BadgeType","getBadgeSnippet","getBadgeUrl","format","metric","projectUrl","marketing","measure","qualityGate","mdImage","color","width","alt","src","badgeMetrics","getColorOptions","getFormatOptions","getMetricOptions","metrics","handleColorChange","updateOptions","handleFormatChange","handleMetricChange","renderBadgeType","htmlFor","clearable","searchable","menuStyle","maxHeight","fetchBadgeMetrics","webservices","d","path","ws","actions","w","param","params","p","possibleValues","selectedType","badgeOptions","alert_status","handleSelectBadge","handleUpdateOptions","fullBadgeOptions","CodeSnippet","isOneLine","snippet","InfoDrawerPage","onPageChange","ProjectInformationPages","projectNotifications","n","NotificationsList","MetaKey","copyValue","loadLinks","prevProps","orderedLinks","MetaLink","MetaQualityGate","isDefault","deprecatedByKey","loadDeprecatedRules","existingProfiles","profiles","requests","profile","loadDeprecatedRulesForProfile","Promise","all","responses","forEach","count","profileKey","activation","ps","qprofile","statuses","getDeprecatedRulesCount","renderProfile","languageFromStore","languages","language","languageName","inner","deleted","tooltip","headerClassName","MetaSize","measures","isApp","ncloc","projects","DrilldownLink","Number","searchResult","onSearch","Math","min","selectedTags","tags","tag","setProjectTags","onUnselect","availableTags","TagsSelector","listSize","canUpdateTags","getPopupPos","eltPos","containerPos","height","right","setTags","application","join","handleSetProjectTags","onComponentChange","card","closeOnClick","closeOnClickOutside","overlayPlacement","BottomLeft","innerRef","tagsList","stopPropagation","TagsList","allowUpdate","canConfigureNotifications","canUseBadges","description","qualityProfiles","badges","page","main","setPage","loadMeasures","metricKeys","fetchMetrics","mapDispatchToProps","ComponentNav","notifComponent","contextNavHeightRaw","globalNavHeightRaw","displayProjectInfo","setDisplayProjectInfo","RecentHistory","add","contextNavHeight","notif","addQualifier","fetchBranches","breadcrumb","resolve","branches","getCurrentBranchLike","registerBranchStatuses","fetchStatus","current","queue","tasksInProgress","newCurrentTask","getCurrentTask","pendingTasks","getPendingTasks","newTasksInProgress","task","currentTaskChanged","progressChanged","clearTimeout","watchStatusTimer","setTimeout","fetchComponent","fetchWarnings","isSameBranch","registerBranchStatus","qualityGateStatus","handleComponentChange","changes","handleBranchesChange","handleWarningDismiss","nav","componentWithQualifier","match","replace","requireAuthorization","needIssueSync","PageUnavailableDueToIndexation","Provider","onBranchesChange","finalSnippet","noCopy","snippetRef","Array","isArray","line","MultiSelectOption","custom","disabled","element","onHover","renderLabel","onFocus","onMouseOver","onSelectChange","handleSelectChange","item","onSelectItem","onUnselectItem","onSearchQuery","validateSearchInput","handleElementHover","activeIdx","getAllElements","handleKeyboard","evt","selectNextElement","selectPreviousElement","toggleSelect","stopLoading","isNewElement","elem","selectedElements","elements","updateSelectedElements","filterSelected","updateUnselectedElements","unselectedElements","slice","setElementActive","idx","allElements","container","addEventListener","componentWillReceiveProps","nextProps","totalElements","searchInput","focus","removeEventListener","allowSelection","allowNewElements","footerNode","activeElement","showNewElement","infiniteList","listClasses","div","defaultProps","getComponentNavigation","getMarketplaceNavigation","getSettingsNavigation","validateTag","STATUSES","ALL_EXCEPT_PENDING","ALL_TYPES","CURRENTS","ONLY_CURRENTS","DEFAULT_FILTERS","taskType","currents","minSubmittedAt","maxExecutedAt","DEBOUNCE_DELAY","PROVIDED_TYPES","isProvided","orderLinks","provided","unknown","getLinkName","getBranches","getPullRequests","deleteBranch","deletePullRequest","renameBranch","excludeBranchFromPurge","branchName","excluded","DEFAULT_HOMEPAGE","setHomePage","handleReset","homepage","isChecked","isSameHomePage","filled","ISSUE_MEASURES","issueParamsPerMetric","blocker_violations","severities","new_blocker_violations","critical_violations","new_critical_violations","major_violations","new_major_violations","minor_violations","new_minor_violations","info_violations","new_info_violations","open_issues","reopened_issues","confirmed_issues","false_positive_issues","resolutions","code_smells","new_code_smells","bugs","new_bugs","vulnerabilities","new_vulnerabilities","isIssueMeasure","propsToIssueParams","sinceLeakPeriod","listView"],"mappings":"6FAAA,8CA2BaA,EAAmB,gBAA0C,CACxEC,gBAAYC,EACZC,eAAWD,K,qBC7Bb,IAAIE,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,wYAAyY,KAElaD,EAAOK,QAAUA,G,kCCNjB,kFA8Bc,SAAUG,EAAsB,G,IAC5CC,EAAS,YACTC,EAAS,YACTC,EAAU,aAEV,MAAmB,YAAfA,EACK,KAIP,gBAAC,IAAO,CAACC,QAAS,oBAAU,aAAcD,EAAY,cAAeD,IACnE,uBAAKD,UAAW,EAAW,QAASA,IAAa,oBAAU,aAAcE,O,kCCzC/E,aAqBc,aAAUE,GACtB,MAAO,aAAaC,KAAKD,MAAU,mBAASA,K,yECGxC,SAAUE,EAAYpB,GAC1B,OAAO,eAAK,qBAAsB,CAAEA,UAAS,IAGzC,SAAUqB,EAAerB,GAC7B,OAAO,eAAK,wBAAyB,CAAEA,UAAS,I,gVCKlD,cAGE,WAAYsB,GAAZ,MACE,YAAMA,IAAM,K,OAHd,EAAAC,SAAU,EAwBV,EAAAC,eAAiB,WACf,IAAMC,GAAe,EAAKC,MAAMC,SAGhC,OAFkBF,EAAcL,EAAcC,GAE7B,EAAKC,MAAMtB,WAAW4B,MAAK,WACtC,EAAKL,SACP,EAAKM,SAAS,CAAEF,SAAUF,IAAe,WACnC,EAAKH,MAAMQ,gBACb,EAAKR,MAAMQ,eAAe,EAAKR,MAAMtB,UAAWyB,UA3BxD,EAAKC,MAAQ,CACXC,SAAUL,EAAMK,U,EA8CtB,OArDsC,OAWpC,YAAAI,kBAAA,WACEC,KAAKT,SAAU,GAGjB,YAAAU,mBAAA,SAAmBC,EAAmBC,GAChCA,EAAUR,WAAaK,KAAKV,MAAMK,UACpCK,KAAKH,SAAS,CAAEF,SAAUK,KAAKV,MAAMK,YAIzC,YAAAS,qBAAA,WACEJ,KAAKT,SAAU,GAkBjB,YAAAc,OAAA,WACQ,MAA2BL,KAAKV,MAA9BR,EAAS,YAAEC,EAAS,YACpBY,EAAaK,KAAKN,MAAV,SAEhB,OACE,gBAAC,IAAc,CACbZ,UAAWA,EACXa,SAAUA,EACVZ,UAAWA,EACXS,eAAgBQ,KAAKR,kBAI7B,EArDA,CAAsC,iB,yCCnCtC,gDAgDe,iBANS,SAACE,EAAcJ,GAC7B,IAAAxB,EAA0BwB,EAAhB,WAAEtB,EAAcsB,EAAL,UAE7B,MAAO,CAAEgB,OADU,sCAA4BZ,EAAO1B,EAAWF,GAAnD,UAID,EAdT,SAAuB,G,IAAEwC,EAAM,SACnC,OAAKA,EAIE,gBAAC,IAAK,CAACC,MAAOD,EAAQE,OAAO,IAH3B,S,kCCpCX,yFA+BM,SAAUC,EAAYC,GAC1B,YAD0B,IAAAA,OAAA,GACnB,kBAAQ,wBAAyB,CAAEC,kBAAmBD,IAC1Dd,MAAK,SAAAgB,GAAK,OAAAA,EAAA,eACVC,MAAM,KAGL,SAAUC,EAAqBC,EAAgBC,GACnD,OAAO,kBAAQ,oCAAqC,CAAEC,WAAYF,EAAQC,OAAM,IAAIH,MAClF,O,6kBCNJ,2B,+CA8CA,OA9C+C,OAC7C,YAAAK,UAAA,SAAUC,EAAcC,GACtB,QAASpB,KAAKV,MAAM+B,cAAcC,MAChC,SAAAC,GAAgB,OAAAA,EAAaJ,OAASA,GAAQI,EAAaH,UAA3C,MAIpB,YAAAI,YAAA,SAAYL,EAAcC,EAAiBK,GACrCA,EACFzB,KAAKV,MAAMoC,MAAM,CAAEP,KAAI,EAAEC,QAAO,IAEhCpB,KAAKV,MAAMqC,SAAS,CAAER,KAAI,EAAEC,QAAO,KAIvC,YAAAQ,mBAAA,SAAmBC,GACjB,IAAMC,EAAmB,CAAC,0BAA2BD,GAC/CE,EAAoB,EAAID,EAAgB,CAAE,YAEhD,OADgC9B,KAAKV,MAAM0C,SAAW,aAAU,aAAID,GAEhE,YAAS,aAAIA,GACb,YAAS,aAAID,IAGnB,YAAAzB,OAAA,sBACQ,EAAkCL,KAAKV,MAArC2C,EAAQ,WAAEC,EAAU,aAAEC,EAAK,QAEnC,OACE,6BACGA,EAAMC,KAAI,SAAAjB,GAAQ,OACjB,sBAAIkB,IAAKlB,GACP,0BAAK,EAAKS,mBAAmBT,IAC5Bc,EAASG,KAAI,SAAAhB,GAAW,OACvB,sBAAItC,UAAU,cAAcuD,IAAKjB,GAC/B,gBAAC,IAAQ,CACPK,QAAS,EAAKP,UAAUC,EAAMC,GAC9BkB,GAAIJ,EAAWf,EAAMC,GACrBmB,QAAS,SAAAd,GAAW,SAAKD,YAAYL,EAAMC,EAAvB,gBAStC,EA9CA,CAA+C,iB,yCCjC/C,2HAsBM,SAAUoB,EAAgBC,GAC9B,OAAO,kBAAQ,4BAA6B,CAAEA,WAAU,IAAI7C,MAAK,SAAAgB,GAAK,OAAAA,EAAA,QAAS,KAG3E,SAAU8B,EAAWC,GACzB,OAAO,eAAK,4BAA6B,CAAEL,GAAIK,IAAU9B,MAAM,KAG3D,SAAU+B,EAAWC,GAKzB,OAAO,mBAAS,4BAA6BA,GAAMjD,MAAK,SAAAgB,GAAK,OAAAA,EAAA,OAAQ,O,yaCDvE,yE,OACE,EAAAlB,MAAQ,CAAEoD,UAAU,GAEpB,EAAAC,YAAc,SAACC,GACbA,EAAMC,iBACN,EAAKpD,UAAS,SAAC,GAAiB,MAAC,CAAEiD,UAAV,gBAG3B,EAAAI,eAAiB,WACf,EAAKrD,SAAS,CAAEiD,UAAU,KAG5B,EAAAK,aAAe,SAACH,GACdA,EAAMI,cAAcC,U,EAkCxB,OA/CsC,OAgBpC,YAAAhD,OAAA,WACQ,MAAqBL,KAAKV,MAAxBgE,EAAQ,WAAEC,EAAI,OAChBC,EAAY,YAAYD,GACxBE,EAAU,YAAWF,EAAKrE,KAChC,OACE,0BACE,qBACEJ,UAAU,iBACV4E,KAAMD,EAAUF,EAAKrE,SAAMnB,EAC3B4F,QAASF,OAAU1F,EAAYiC,KAAK+C,YACpCa,IAAI,+BACJC,OAAO,SACPC,MAAON,GACP,gBAAC,IAAe,CAAC1E,UAAU,sBAAsBqC,KAAMoC,EAAKpC,QAC1DmC,GAAYE,GAEfxD,KAAKN,MAAMoD,UACV,uBAAKhE,UAAU,yCACb,yBACEA,UAAU,wBACV6E,QAAS3D,KAAKmD,aACdY,UAAU,EACV5C,KAAK,OACL6C,MAAOT,EAAKrE,MAEd,gBAAC,cAAW,CAACJ,UAAU,qBAAqB6E,QAAS3D,KAAKkD,oBAMtE,EA/CA,CAAsC,iB,2HCZhC,SAAUe,IAMd,OAAO,kBAAQ,2BAA2BpD,MAAMqD,EAAA,GAG5C,SAAUC,EAAgBtB,GAC9B,OAAO,eAAK,yBAA0BA,GAAMhC,MAAMqD,EAAA,GAG9C,SAAUE,EAAmBvB,GACjC,OAAO,eAAK,4BAA6BA,GAAMhC,MAAMqD,EAAA,G,guBCMjD,SAAUG,EACdC,GAuGA,OArGA,uE,OACE,EAAA/E,SAAU,EAGV,EAAAG,MAAe,CACbuC,SAAU,GACVsC,YAAa,GACbC,SAAS,EACTnD,cAAe,GACfoD,gBAAiB,IAYnB,EAAAC,mBAAqB,WACnBT,IAAmBrE,MACjB,SAAA+E,GACM,EAAKpF,SACP,EAAKM,SAAS,CACZoC,SAAU0C,EAAS1C,SACnBsC,YAAaI,EAASJ,YACtBC,SAAS,EACTnD,cAAesD,EAAStD,cACxBoD,gBAAiBE,EAASF,qBAIhC,WACM,EAAKlF,SACP,EAAKM,SAAS,CAAE2E,SAAS,QAMjC,EAAAI,uBAAyB,SAACC,GACxB,EAAKhF,UAAS,SAAAH,GAEZ,MAAO,CAAE2B,cADa,IAAQ,EAAK3B,EAAM2B,cAAa,CAAEwD,IAAQ,EAAKC,4BAKzE,EAAAC,4BAA8B,SAACC,GAC7B,EAAKnF,UAAS,SAAAH,GAIZ,MAAO,CAAE2B,cAHa3B,EAAM2B,cAAc4D,QACxC,SAAA1D,GAAgB,OAAC,EAAKuD,sBAAsBvD,EAA5B,WAMtB,EAAA4C,gBAAkB,SAACU,GAEjB,EAAKD,uBAAuBC,GAI5BV,EADa,CAAE/C,QAASyD,EAAMzD,QAASY,QAAS6C,EAAM7C,QAASb,KAAM0D,EAAM1D,OACrDN,OAAM,WAC1B,EAAKkE,4BAA4BF,OAIrC,EAAAT,mBAAqB,SAACY,GAEpB,EAAKD,4BAA4BC,GAIjCZ,EADa,CAAEhD,QAAS4D,EAAQ5D,QAASY,QAASgD,EAAQhD,QAASb,KAAM6D,EAAQ7D,OACxDN,OAAM,WAC7B,EAAK+D,uBAAuBI,OAIhC,EAAAF,sBAAwB,SAACI,EAAmBC,GAC1C,OAAOD,EAAE9D,UAAY+D,EAAE/D,SAAW8D,EAAE/D,OAASgE,EAAEhE,MAAQ+D,EAAElD,UAAYmD,EAAEnD,S,EAkB3E,OAnGsB,OAYpB,YAAAjC,kBAAA,WACEC,KAAKT,SAAU,EACfS,KAAK0E,sBAGP,YAAAtE,qBAAA,WACEJ,KAAKT,SAAU,GAkEjB,YAAAc,OAAA,WACQ,MAAqEL,KAAKN,MAAxEuC,EAAQ,WAAEsC,EAAW,cAAEC,EAAO,UAAEnD,EAAa,gBAAEoD,EAAe,kBACtE,OACE,gBAACH,EAAgB,KACXtE,KAAKV,MAAK,CACd6E,gBAAiBnE,KAAKmE,gBACtBlC,SAAUA,EACVsC,YAAaA,EACbC,QAASA,EACTnD,cAAeA,EACfoD,gBAAiBA,EACjBL,mBAAoBpE,KAAKoE,uBA7FxB,EAAAgB,YAAc,YAAsBd,EAAkB,qBAiG/D,EAnGA,CAAsB,e,qBC7CxB,IAAIrG,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,wvBAAyvB,KAElxBD,EAAOK,QAAUA,G,qBCNjB,IAAIT,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,qGAAsG,KAE/HD,EAAOK,QAAUA,G,qBCNjB,IAAIT,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,oQAAqQ,KAE9RD,EAAOK,QAAUA,G,qBCNjB,IAAIT,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,uhBAAwhB,KAEjjBD,EAAOK,QAAUA,G,qBCNjB,IAAIT,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,kgBAAmgB,KAE5hBD,EAAOK,QAAUA,G,qBCNjB,IAAIT,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,mbAAob,KAE7cD,EAAOK,QAAUA,G,0PCkBH,SAAU2G,IACtB,OACE,gCACE,gBAAC,IAAM,CAACC,aAAc,oBAAU,iBAAkBC,OAAO,IACzD,uBAAKzG,UAAU,sBAAsBwD,GAAG,MACtC,uBAAKxD,UAAU,cAAcwD,GAAG,SAC9B,sBAAIxD,UAAU,qBAAqB,oBAAU,gCAC7C,qBAAGA,UAAU,iBAAiB,oBAAU,kCACxC,yBACE,gBAAC,IAAI,CAAC0G,GAAG,KAAK,oBAAU,4B,icCKpC,yE,OACE,EAAAjG,SAAU,EACV,EAAAG,MAAe,CAAE8E,SAAS,GAW1B,EAAAiB,oBAAsB,WACpB,EAAK5F,SAAS,CAAE2E,SAAS,IACzB,cAAiB5E,MACf,SAAC,G,IAAE8F,EAAc,iBACX,EAAKnG,SACP,EAAKM,SAAS,CAAE6F,eAAc,EAAElB,SAAS,OAG7C,WACM,EAAKjF,SACP,EAAKM,SAAS,CAAE2E,SAAS,Q,EAsCnC,OA7D8C,OAI5C,YAAAzE,kBAAA,WACEC,KAAKT,SAAU,EACfS,KAAKyF,uBAGP,YAAArF,qBAAA,WACEJ,KAAKT,SAAU,GAmBjB,YAAAc,OAAA,WACU,IAAAsF,EAAgB3F,KAAKV,MAAV,YACb,EAA8BU,KAAKN,MAAjCgG,EAAc,iBAEtB,OAF+B,WAEfC,GAAgBA,EAAYC,UAIxCF,GAA4C,kBAA1BC,EAAYC,UAE9B,gBAACC,EAAA,MAAK,CAACC,QAAQ,SAASC,QAAQ,SAC7B,kCACC,gEACA,oBAAU,YAAaJ,EAAYK,oBAAsB,IAAmBC,WAOlF,gBAACJ,EAAA,MAAK,CAACC,QAAQ,SAASC,QAAQ,SAC9B,wBAAMjH,UAAU,uBAAuB6G,EAAYO,cAClDlG,KAAKV,MAAM6G,SAASC,SACnB,gBAAC,IAAI,CAACZ,GAAG,gCACN,oBAAU,sCAAuCG,EAAYC,WACzD,KAEP,oBAAU,iCAtBP,MA2Bb,EA7DA,CAA8C,iBA+D/B,SAAAS,EAAA,GAAa,G,iWC/D5B,2B,+CAkFA,OAlF6C,OAC3C,YAAAC,cAAA,SAAcC,EAAoBjG,EAAiBkG,GAC3C,IAMFrF,EAMAjC,EACAuH,EAbE,EAAuCzG,KAAKV,MAA1CtB,EAAS,YAAE2H,EAAW,cAAEe,EAAQ,WAClCC,EAAoB,YAA8B3I,EAAUqE,IAAK/B,GACjEsG,EACJ5I,EAAU6I,eAAiB7I,EAAU6I,cAAcC,oBAC/CC,EAAyBL,EAASM,WAAaL,EAAkBK,SAsBvE,OAnBIrB,GAAe,qBAAW,uBAAwBA,EAAYxE,QAChEoF,GAAc,KACdpF,EAAO,oBAAU,uBAAwBwE,EAAYxE,OAKnDyF,IACFL,GAAc,SAEVQ,GACFR,GAAc,QACdE,EAAa,oBAAU,sCAEvBF,GAAc,QACdrH,EAAM,gBAAC,IAAI,CAACsG,GAAImB,GAAoB,oBAAU,4BAKhD,gBAAC,mBAAgB,CACfM,eAAgB,oBAAUV,GAC1BjE,GAAIiE,EACJW,OAAQ,CAAEV,OAAM,EAAEtH,IAAG,EAAEuH,WAAU,EAAEtF,KAAI,MAK7C,YAAAd,OAAA,WACQ,MAAoEL,KAAKV,MAAvEqG,EAAW,cAAEwB,EAAuB,0BAAEC,EAAY,eAAEC,EAAS,YACrE,GAAID,EACF,OACE,gBAACvB,EAAA,MAAK,CAACC,QAAQ,SAASC,QAAQ,QAC7B/F,KAAKsG,cAAc,4CAGnB,GAAIe,EACT,OACE,gBAACxB,EAAA,MAAK,CAACC,QAAQ,SAASC,QAAQ,QAC7B/F,KAAKsG,cAAc,sCAAuC,IAASgB,MAGnE,GAAI3B,GAAeA,EAAYrF,SAAW,IAAaiH,OAAQ,CACpE,GACE5B,EAAYC,WACZ,qBAAW,sCAAuCD,EAAYC,WAE9D,OAAO,gBAAC,EAAwB,CAACD,YAAaA,IAEhD,IAAMa,EACJb,EAAYa,QACTb,EAAY6B,aACb7B,EAAY8B,iBAAmB,MAAQ9B,EAAY8B,iBAAmB,IAEtEC,OAAO,EAWX,OATEA,GAD8B,IAA5BP,GAAqCX,EAC7BxG,KAAKsG,cACb,iDACAvI,EACAyI,GAGQxG,KAAKsG,cAAc,sCAI7B,gBAACT,EAAA,MAAK,CAACC,QAAQ,SAASC,QAAQ,SAC7B2B,GAIP,OAAO,MAEX,EAlFA,CAA6C,iBAoF9B,SAAAC,EAAA,GAAW,G,iICgBX,cAlGT,SAA4BrI,GAE9B,IAAAsI,EAKEtI,EALa,gBACftB,EAIEsB,EAJO,UACIuH,EAGXvH,EAAK,UAHmB,cAC1BuI,EAEEvI,EAFe,kBACjBwI,EACExI,EADa,gBAGX8F,EAAc,YAAyByC,GACvCE,EAAgB/J,EAAUe,YAAc,IAAmBiJ,YAC3DC,EAAoBpB,GAAiBA,EAAcqB,aA0EzD,OACE,wBAAMpJ,UAAU,iDACd,gBAACqJ,EAAA,EAAc,CAACrK,WAAY+J,IAC5B,wBACE/I,UAAU,yEACVgF,MAAOsB,GACNA,GA9EgB,WACrB,IAAMgD,EAAW,gBAAC,IAAc,CAACC,KAAM,SAAOC,KAAMC,KAAM,KAE1D,GAAIX,GAAmBE,EACrB,OAAO,gBAAC,IAAY,MAGtB,GAAIC,GACF,IAAKD,GAAmBG,EACtB,OACE,gBAAC,IAAW,CACVhJ,QACE,gCACE,yBAAI,oBAAU,8BACd,sBAAIH,UAAU,6BACd,gBAAC,IAAI,CAAC0G,GAAI,YAAuBxH,EAAUqE,MACxC,oBAAU,gCAIhB+F,OAIF,CACL,IAAKR,EACH,OACE,gBAACY,EAAA,EAAoB,CACnBtK,QAAS,oBAAU,oDAAmD,YAC5D,4BACVuK,MAAO,CACL,CACE/E,KAAM,2DACNgF,MAAO,oBAAU,gBAGrB5E,MAAO,oBAAU,mDAChBsE,GAKP,IAAKN,EACH,OACE,gBAACU,EAAA,EAAoB,CACnBtK,QAAS,oBAAU,kDAAiD,YAC1D,uBACVuK,MAAO,CACL,CACE/E,KAAM,oCACNgF,MAAO,oBAAU,yDAEnB,CACEhF,KAAM,wCACNgF,MAAO,oBAAU,uDAEnB,CACEhF,KAAM,iBAAiB1F,EAAUqE,IACjCqG,MAAO,oBAAU,0CACjBC,SAAS,IAGb7E,MAAO,oBAAU,iDAChBsE,GAMT,OAAO,KAWJQ,O,oFCnEQ,eA9BT,SAAmBtJ,GACf,IAAAxB,EAAuEwB,EAA7D,WAAEtB,EAA2DsB,EAAlD,UAAEuJ,EAAgDvJ,EAA1C,OAAEwJ,EAAwCxJ,EAAzB,gBAAEyJ,EAAuBzJ,EAAf,SAAE0J,EAAa1J,EAAL,SACpE8F,EAAc,YAAyBtH,GAE7C,OACE,sBACEgB,UAAW,EAAW,OAAQ,CAC5BmK,OAAQD,IAEVrF,QAAS,WAAM,OAAAoF,EAAA,IACfG,IAAKF,EAAWF,OAAkB/K,GAClC,uBACEe,UAAW,EAAW,iDAAkD,CACtE,kBAAmB+J,KAErB,uBAAK/J,UAAU,0BAA0BgF,MAAOsB,GAC9C,gBAAC+C,EAAA,EAAc,CAACrK,WAAYA,IAC5B,wBAAMgB,UAAU,eAAesG,GAC9B,YAAatH,IACZ,wBAAMgB,UAAU,qBAAqB,oBAAU,0BAGnD,uBAAKA,UAAU,eACb,gBAACqK,GAAA,EAAY,CAACrL,WAAYA,EAAYE,UAAWA,EAAUqE,Y,yLCoDtD,eA3ET,SAAuB/C,GAC3B,IAAI8J,EAAoC,KACpCC,EAAqC,KAEzC,aAAgB,WACVD,GAAYC,GACd,2BAAgBA,EAAc,CAAEC,OAAQF,EAAUG,QAAQ,OAItD,IAAAC,EAAwElK,EAA1D,eAAEtB,EAAwDsB,EAA/C,UAAEmK,EAA6CnK,EAAnC,WAAEyJ,EAAiCzJ,EAAzB,SAAEoK,EAAuBpK,EAAL,mBAErEqK,EAAa,SAAC7L,EAAwB+K,GAAqB,OAC/D,gBAAC,GAAQ,CACP/K,WAAYA,EACZE,UAAWA,EACX6K,OAAQA,EACRxG,IAAK,YAAiBvE,GACtBiL,SAAUA,EACVC,SAAU,YAAiBlL,EAAY4L,GACvCZ,gBAAiB,SAAAc,GAAQ,OAACP,EAAD,MAI7B,OACE,sBAAIvK,UAAU,YAAYoK,IAAK,SAAAU,GAAQ,OAACR,EAAD,KACnCK,GACA,sBAAI3K,UAAU,QACZ,wBAAMA,UAAU,QAAQ,oBAAU,gBAKrC,IAAC0K,EAAeK,gBAAmBL,EAAeM,YAAY7E,OAAO,cAAW7C,KAAI,SAAA2H,GAAQ,OAC3F,gBAAC,WAAc,CAAC1H,IAAK,YAAiB0H,EAAKvD,SACxCmD,EAAWI,EAAKvD,QAChBuD,EAAKC,aAAaC,OAAS,GAC1B,gCACE,sBAAInL,UAAU,eACZ,wBAAMA,UAAU,mBACb,oBAAU,0CAGdiL,EAAKC,aAAa5H,KAAI,SAAA8H,GAAM,OAAAP,EAAWO,GAAX,OAGjC,qBAbyF,UAkB5FV,EAAeW,uBAAuBF,OAAS,GAC9C,gCACE,sBAAInL,UAAU,eAAe,oBAAU,yCACtC0K,EAAeW,uBAAuB/H,KAAI,SAAA8H,GAAM,OAAAP,EAAA,OAKpDH,EAAeY,mBAAmBH,OAAS,GAC1C,gCACE,sBAAInL,UAAU,eACX,oBAAU,+CACX,gBAAC,IAAW,CACVA,UAAU,qBACVG,QAAS,oBAAU,0DAGtBuK,EAAeY,mBAAmBhI,KAAI,SAAA8H,GAAM,OAAAP,EAAA,W,4uBCnDvD,eACE,WAAYrK,GAAZ,MACE,YAAMA,IAAM,KAiBd,EAAA+K,mBAAqB,SAACC,GACpB,IAAMP,EAAO,YAAsBO,GACnC,MAAO,CACLC,qBAAsB,GAChBR,EAAKF,eACN,IAAEE,EAAKF,eAAerD,QAAWuD,EAAKF,eAAeG,cACpD,GACDD,EAAKD,WAAWU,QAAO,SAACC,EAAMC,GAAM,UAAID,EAAI,CAAEC,EAAElE,QAAWkE,EAAvB,gBAAwC,IAC5EX,EAAKI,uBACLJ,EAAKK,oBAEVO,yBAA0BZ,IAI9B,EAAAa,0BAA4B,WACtB,EAAKlL,MAAMgK,oBACb,EAAKmB,eAAe,EAAKnL,MAAMgK,qBAInC,EAAAoB,2BAA6B,SAACC,GAC5B,IAAMC,EAAwB,EAAKtL,MAAM6K,qBAAqBU,WAAU,SAAA9F,GACtE,mBAAiBA,EAAG,EAAKzF,MAAMgK,uBAE3BwB,EAAWF,EAAwBD,GAGZ,IAA3BC,GACAE,GAAY,GACZA,EAAW,EAAKxL,MAAM6K,qBAAqBN,QAE3C,EAAKpK,UAAS,SAAC,GAA6B,MAAC,CAC3C6J,mBADmC,uBACMwB,QAK/C,EAAAC,cAAgB,SAACnI,GACf,OAAQA,EAAMoI,SACZ,KAAK,YAASC,MACZrI,EAAMC,iBACN,EAAK2H,4BACL,MACF,KAAK,YAASU,QACZtI,EAAMC,iBACN,EAAK6H,4BAA4B,GACjC,MACF,KAAK,YAASS,UACZvI,EAAMC,iBACN,EAAK6H,2BAA2B,KAKtC,EAAAU,mBAAqB,SAACC,GACpB,IAAMC,EAAID,EAAME,cAOVC,EAAsB,EAAKtM,MAAMgL,YAAYrF,QACjD,SAAA4G,GAAM,OANcrF,EAMDqF,EALnB,YAASrF,IAAWA,EAAOsF,KAAKH,cAAcI,SAASL,KAC9BxB,EAInB,EAHN,YAAcA,KAAQA,EAAGpG,MAAM6H,cAAcI,SAASL,IAAMxB,EAAG7H,IAAIsJ,cAAcI,SAASL,KADlE,IAACxB,EAFL1D,KAStB,EAAK3G,SAAQ,IACX4L,MAAOC,EACPhC,mBAAoBkC,EAAoB3B,OAAS,EAAI2B,EAAoB,QAAK7N,GAC3E,EAAKsM,mBAAmBuB,MAI/B,EAAAf,eAAiB,SAAC/M,GAChB,EAAK+B,SAAS,CAAE6J,mBAAoB5L,IAAc,WAChD,EAAKwB,MAAM0M,UACX,EAAK1M,MAAM2M,OAAOrN,KAAK,YAAiB,EAAKU,MAAMtB,UAAUqE,IAAKvE,QA5FpE,IAAI4L,OAAqB3L,E,OAErBuB,EAAMgL,YAAY4B,MAAK,SAAA/G,GAAK,mBAAiBA,EAAG7F,EAApB,sBAC9BoK,EAAqBpK,EAAMuI,kBAClBvI,EAAMgL,YAAYL,OAAS,IACpCP,EAAqBpK,EAAMgL,YAAY,IAGzC,EAAK5K,MAAK,IACR+L,MAAO,GACP/B,mBAAkB,GACf,EAAKW,mBAAmB/K,EAAMgL,c,EAmIvC,OAlJ0B,QAoGxB,YAAAjK,OAAA,WACQ,MAA4CL,KAAKV,MAA/C2I,EAAiB,oBAAEjK,EAAS,YAAEgO,EAAO,UACvC,EAKFhM,KAAKN,MAJP6K,EAAoB,uBACpBI,EAAwB,2BACxBc,EAAK,QACL/B,EAAkB,qBAGdyC,EAAiBnO,EAAUe,YAAc,IAAmBkH,SAAWgC,EACvEwB,EAAac,EAAqBN,OAAS,EAEjD,OACE,gBAACmC,GAAA,gBAAe,CAACtN,UAAU,8BAA8BuN,WAAW,GAClE,uBAAKvN,UAAU,wBACb,gBAAC,KAAS,CACRwN,WAAW,EACXC,SAAUvM,KAAKwL,mBACfgB,UAAWxM,KAAKmL,cAChBsB,YAAa,oBAAU,iDACvBzI,MAAOyH,KAIX,uBAAK3M,UAAU,uBACb,gBAAC,GAAY,CACX0K,eAAgBmB,EAChB3M,UAAWA,EACXyL,WAAYA,EACZV,SAAU/I,KAAK6K,eACfnB,mBAAoBA,KAIvByC,GACC,uBAAKrN,UAAU,6BACb,gBAAC,IAAI,CACH6E,QAAS,WAAM,OAAAqI,KACfxG,GAAI,CAAEwB,SAAU,oBAAqByE,MAAO,CAAEnJ,GAAItE,EAAUqE,OAC3D,oBAAU,qCAOzB,EAlJA,CAA0B,iBAoJX,UAAAsF,EAAA,GAAW,IC9GX,cAAAtB,EAAA,GAAa,QAxDtB,SAA+B/G,GAErB,IAAAsI,EAKVtI,EAAK,SALoB,gBAC3BgL,EAIEhL,EAJS,YACXtB,EAGEsB,EAHO,UACIuH,EAEXvH,EAAK,UAFmB,cAC1BuI,EACEvI,EADe,kBAGb,EAA8B,YAAe,GAA5CoN,EAAU,KAAEC,EAAa,KAE1B1E,EAAoBpB,GAAiBA,EAAcqB,aACnDJ,EAAkBwC,EAAYL,QAAU,EACxC2C,EAAgBhF,GAAmBE,EAEnC+E,EACJ,gBAAC,EAAiB,CAChBjF,gBAAiBkF,QAAQlF,GACzB5J,UAAWA,EACX6J,kBAAmBA,EACnBC,gBAAiBA,IAIrB,OACE,wBACEhJ,UAAW,EAAW,kEAAmE,CACvFiO,SAAUH,KAEXA,EACC,gBAAC,IAAO,CACNI,eAAgB,WAAM,OAAAL,GAAA,IACtBM,KAAMP,EACNzN,QACE,gBAAC,GAAI,CACHqL,YAAaA,EACbrC,kBAAmBA,EACnBjK,UAAWA,EACX6J,kBAAmBA,EACnBmE,QAAS,WAAM,OAAAW,GAAA,OAGnB,qBACE7N,UAAU,oCACV4E,KAAK,IACLC,QAAS,WAAM,OAAAgJ,GAAA,KACdE,IAILA,OCnCO,eArBT,SAA4CvN,GACxC,IAAAuI,EAAsBvI,EAAL,kBAEzB,OAAK,YAAcuI,GAKjB,wBAAM/I,UAAU,kDACd,gBAAC,mBAAgB,CACfmI,eAAgB,oBAAU,kDAC1B3E,GAAG,iDACH4E,OAAQ,CACNrD,OAAQ,8BAASgE,EAAkBhE,QACnC2C,OAAQ,8BAASqB,EAAkBrB,YAVlC,Q,0CCDL,SAAU0G,GAAW5N,GAEV,IAAA6N,EAEX7N,EAAK,UAFiB,YACxBuI,EACEvI,EADe,kBAEb8N,EAAwB,KAAKD,GAC7BE,EAAiBxF,IAAsB,YAAaA,GAE1D,OACE,uBAAK/I,UAAU,uCACZqO,EAAY/K,KAAI,SAACkL,EAAmBhP,GACnC,IAAMiP,EAAgB,IAANjP,EACVkP,EAAYlP,EAAI6O,EAAYlD,OAAS,EAE3C,OACE,wBAAMnL,UAAU,kCAAkCuD,IAAKiL,EAAkBjL,KACtEkL,GAAWH,GACV,gBAAC,KAAa,CAACtO,UAAU,eAAeC,UAAWqO,EAAsBrO,YAE1EsO,GAAkBG,EACjB,gBAAC,IAAI,CACH1O,UAAU,kCACVgF,MAAOwJ,EAAkBxB,KACzBtG,GAAI,YAAwB8H,EAAkBjL,IAAKiL,EAAkBvO,YACpEuO,EAAkBxB,MAGrB,wBAAMhN,UAAU,gBAAgBgF,MAAOwJ,EAAkBxB,MACtDwB,EAAkBxB,MAGtB0B,GAAa,wBAAM1O,UAAU,yBAQ3B,OAAWoO,ICH1B,IAIe,gBAJS,SAACxN,GAAiB,MAAC,CACzC+N,YAAa,yBAAe/N,MAGf,CAAyB,QAnClC,SAAiBJ,GACb,IAAAgL,EAA2DhL,EAAhD,YAAEtB,EAA8CsB,EAArC,UAAEuI,EAAmCvI,EAAlB,kBAAEmO,EAAgBnO,EAAL,YAE9D,OACE,gCACE,gBAAC,IAAM,CAACwE,MAAO9F,EAAU8N,OACzB,0BAAQhN,UAAU,mCAChB,gBAACoO,GAAU,CAAClP,UAAWA,EAAW6J,kBAAmBA,IACpD,YAAW4F,IACV,gBAACC,EAAA,EAAQ,CACP5O,UAAU,cACVd,UAAWA,EAAUqE,IACrB1C,SAAUmN,QAAQ9O,EAAU2P,YAC5B5O,UAAWf,EAAUe,YAGxB8I,GACC,gCACE,gBAAC,GAAoB,CACnByC,YAAaA,EACbtM,UAAWA,EACX6J,kBAAmBA,IAErB,gBAAC,GAAiC,CAACA,kBAAmBA,W,gaClC5D+F,GAAwB,OAAAC,GAAA,oBAC5B,WAAM,yCACN,yB,GAaF,uE,OACE,EAAAnO,MAAe,CAAEoO,OAAO,GAExB,EAAA/K,YAAc,SAACC,GACbA,EAAMC,iBACND,EAAMI,cAAc2K,OACpB,EAAKlO,SAAS,CAAEiO,OAAO,KAGzB,EAAAE,iBAAmB,WACjB,EAAKnO,SAAS,CAAEiO,OAAO,K,EAoC3B,OA9CkD,QAahD,YAAAzN,OAAA,WACE,OACE,gCACE,gBAACwF,EAAA,MAAK,CAAC/G,UAAU,wCAAwCgH,QAAQ,SAASC,QAAQ,WAChF,gBAAC,mBAAgB,CACfkB,eAAgB,oBAAU,mDAC1B3E,GAAG,kDACH4E,OAAQ,CACN+G,SACE,qBAAGvK,KAAK,IAAIC,QAAS3D,KAAK+C,aACxB,gBAAC,mBAAgB,CACfkE,eAAgB,oBAAU,mCAC1B3E,GAAG,kCACH4E,OAAQ,CACNgH,cAAelO,KAAKV,MAAM2O,SAAShE,eAQhDjK,KAAKN,MAAMoO,OACV,gBAACF,GAAqB,CACpBO,aAAcnO,KAAKV,MAAM6O,aACzBnC,QAAShM,KAAKgO,iBACdI,iBAAkBpO,KAAKV,MAAM8O,iBAC7BH,SAAUjO,KAAKV,MAAM2O,aAMjC,EA9CA,CAAkD,iB,QCoFlD,IAIe,gBAJS,SAACvO,GAAiB,MAAC,CACzC+N,YAAa,yBAAe/N,MAGf,EAtFT,SAAqBJ,GACjB,IAAAxB,EAAiDwB,EAAvC,WAAEtB,EAAqCsB,EAA5B,UAAEmO,EAA0BnO,EAAf,YAAE2O,EAAa3O,EAAL,SAE9C+O,EAAY,YAASvQ,GACrBwQ,EAgDF,SAAyBtQ,EAAwBF,GACrD,IAAIwQ,EAEE9H,EAAS,YAAS1I,KAAgBA,EAAWyQ,OAASzQ,EAAWgO,UAAO/N,EAE9E,OAAQC,EAAUe,WAChB,KAAK,IAAmByP,UACxB,KAAK,IAAmBC,aACtBH,EAAc,CAAEnN,KAAM,YAAanD,UAAWA,EAAUqE,KACxD,MACF,KAAK,IAAmB2F,YACtBsG,EAAc,CACZnN,KAAM,cACNnD,UAAWA,EAAUqE,IACrBmE,OAAM,GAER,MACF,KAAK,IAAmBP,QAEtBqI,EAAc,CACZnN,KAAM,UACNnD,UAAWA,EAAUqE,IACrBmE,OAAM,GAKZ,OAAO8H,EA3EaI,CAAe1Q,EAAWF,GACxC6Q,OAAuC5Q,IAAtBC,EAAU4Q,SAAyBP,EAE1D,OACE,gCACE,uBAAKvP,UAAU,oCACZmP,EAAShE,OAAS,GACjB,wBAAMnL,UAAU,wBACd,gBAAC,GAAoB,CACnBqP,aAAcnQ,EAAUqE,IACxB+L,iBAAkB9O,EAAM8O,iBACxBH,SAAUA,KAIfjQ,EAAU6Q,cACT,wBAAM/P,UAAU,2BACd,gBAAC,KAAiB,CAACgQ,KAAM9Q,EAAU6Q,gBAGtCF,GACC,wBAAM7P,UAAU,2BAA8B,oBAAU,WAAU,IAChEd,EAAU4Q,SAGb,YAAWnB,SAAgC1P,IAAhBuQ,IAA8B,YAAcxQ,IACtE,gBAACiR,GAAA,EAAc,CAACjQ,UAAU,cAAcwP,YAAaA,KAGxD,YAAcxQ,IACb,uBAAKgB,UAAU,iEACOf,IAAnBD,EAAWoB,KACV,qBACEJ,UAAU,8CACV4E,KAAM5F,EAAWoB,IACjB0E,IAAI,sBACJC,OAAO,UACN,oBAAU,uBACX,gBAAC,KAAU,CAAC/E,UAAU,qBAAqByJ,KAAM,MAGrD,gBAACY,GAAA,EAAY,CAACrL,WAAYA,EAAYE,UAAWA,EAAUqE,W,4oCCpD/D2M,GAAgB,CACpB,uBACA,iBACA,oBACA,oBACA,oBACA,4BACA,wBACA,mBACA,iBACA,iBACA,mBACA,mBACA,eACA,oBACA,qBAeF,SAASC,GAAS,GAChB,IAAAC,EAAW,cACXxG,EAAK,QACFpJ,EAAK,KAHQ,yBAKhB,OAAO4P,EACL,gBAAC,IAAI,MAAK5P,GAAQoJ,GAElB,gBAAC,KAAO,CAACzJ,QAAS,oBAAU,8BAC1B,qCAAiB,OAAOH,UAAU,iBAC/B4J,IAMT,8E,OACE,EAAAwG,YAAc,WACN,MAA2D,EAAK5P,MAA9D,IAAAgL,mBAAW,IAAG,KAAE,EAAEtM,EAAS,YAAEoJ,EAAY,eAAEC,EAAS,YAE5D,OADoBiD,EAAYL,OAAS,GACnB7C,GAAgBC,QAAwCtJ,IAA3BC,EAAU6Q,cAG/D,EAAAM,UAAY,WACV,OAAO,EAAK7P,MAAMtB,UAAUe,YAAc,IAAmBkH,SAG/D,EAAAmJ,YAAc,WACZ,OAAO,EAAK9P,MAAMtB,UAAUe,YAAc,IAAmBsQ,YAG/D,EAAAC,YAAc,WACJ,IAAAvQ,EAAc,EAAKO,MAAMtB,UAAhB,UACjB,OAAO,YAAgBe,IAGzB,EAAAgJ,cAAgB,WACd,OAAO,EAAKzI,MAAMtB,UAAUe,YAAc,IAAmBiJ,aAG/D,EAAAuH,iBAAmB,WACjB,OAAO,EAAKjQ,MAAMtB,UAAU6I,eAAiB,IAG/C,EAAA2I,SAAW,WACT,WAASlN,GAAI,EAAKhD,MAAMtB,UAAUqE,KAAQ,YAAmB,EAAK/C,MAAMxB,cAG1E,EAAA2R,oBAAsB,SAAC,EAA8BH,GAA5B,IAAAhN,EAAE,KAAKxE,EAAU,KAAnB,QACrB,OACE,0BACE,gBAAC,IAAI,CACH4R,gBAAgB,SAChBlK,GAAI8J,EAAc,YAAgBhN,GAAM,YAAmBA,EAAIxE,IAC9D,oBAAU,oBAMnB,EAAA6R,eAAiB,SACfT,EACAzD,EACA1D,EACAuH,GAEA,OAAI,EAAKF,cACA,KAIP,0BACE,gBAACH,GAAQ,CACPS,gBAAgB,SAChBR,YAAaA,EACbxG,MACE4G,GAAevH,EAAgB,oBAAU,sBAAwB,oBAAU,aAE7EvC,GAAI,CAAEwB,SAAU,QAASyE,MAAK,OAMtC,EAAAmE,mBAAqB,SAACV,EAAsBzD,GAClC,IAAA3N,EAAe,EAAKwB,MAAV,WAElB,OAAI,YAAcxB,GACT,KAIP,0BACE,gBAACmR,GAAQ,CACPS,gBAAgB,SAChBR,YAAaA,EACbxG,MAAO,oBAAU,yBACjBlD,GAAI,CAAEwB,SAAU,oBAAqByE,MAAK,OAMlD,EAAAoE,iBAAmB,SAACX,EAAsBzD,GACxC,OACE,0BACE,gBAACwD,GAAQ,CACPS,gBAAgB,SAChBR,YAAaA,EACbxG,MAAO,oBAAU,eACjBlD,GAAI,CAAEwB,SAAU,kBAAmByE,MAAO,GAAF,MAAOA,GAAK,CAAEqE,SAAU,eAMxE,EAAAC,4BAA8B,SAACb,EAAsBzD,GACnD,OACE,0BACE,gBAACwD,GAAQ,CACPS,gBAAgB,SAChBR,YAAaA,EACbxG,MAAO,oBAAU,mBACjBlD,GAAI,CAAEwB,SAAU,sBAAuByE,MAAK,OAMpD,EAAAuE,2BAA6B,SAACd,EAAsBzD,EAAc6D,GAChE,OACGA,GACC,0BACE,gBAACL,GAAQ,CACPS,gBAAgB,SAChBR,YAAaA,EACbxG,MAAO,oBAAU,4BACjBlD,GAAI,CAAEwB,SAAU,qBAAsByE,MAAK,OAOrD,EAAAwE,sBAAwB,SAACf,EAAsBzD,GACvC,MAA4B,EAAKnM,MAA/BxB,EAAU,aACV,EADqB,YACN,WAAfoS,OAAU,IAAG,KAAE,EAEvB,OAAI,YAAcpS,GACT,KAGyBoS,EAAWhE,MAAK,SAAAiE,GAChD,OAAAA,EAAU9N,IAAI+N,WAAW,sBAQzB,0BACE,gBAACnB,GAAQ,CACPS,gBAAgB,SAChBR,YAAaA,EACbxG,MAAO,oBAAU,2BACjBlD,GAAI,CACFwB,SAAU,mDACVyE,MAAK,MAXJ,MAkBX,EAAA4E,qBAAuB,SACrB5E,EACA0D,EACApH,EACAuH,GAEM,MAA4B,EAAKhQ,MAA/BxB,EAAU,aAAEE,EAAS,YAE7B,IAAK,EAAKuR,mBAAmBrH,cAAgB,YAAcpK,GACzD,OAAO,KAGT,IAAMwS,EAAmBtB,GAAc9C,MAAK,SAAAhN,GAAO,WAAAqR,OAAO7J,SAAShD,KAAK8M,QAAQtR,MAE1EuR,EAAa,EAAKC,0BAA0BjF,EAAO0D,EAAWpH,EAAeuH,GACnF,OAAKmB,EAAWvE,MAAK,SAAA3I,GAAQ,aAAAA,KAK3B,gBAAC,KAAQ,aACG,iBACVtE,QAAS,sBAAIH,UAAU,QAAQ2R,GAC/BE,QAAQ,OACP,SAAC,G,IAAEC,EAAa,gBAAE3D,EAAI,OAAO,OAC5B,qCACiBA,EAAI,gBACL,OACd4D,KAAK,SACL/R,UAAW,EAAW,kBAAmB,CAAEmK,OAAQqH,GAAoBrD,IACvEvJ,KAAK,IACLpB,GAAG,6BACHqB,QAASiN,GACR,qBAAW,kBAAmB5S,EAAUe,WACrC,oBAAU,kBAAmBf,EAAUe,WACvC,oBAAU,mBACd,gBAAC,IAAY,CAACD,UAAU,2BApBvB,MA2BX,EAAA4R,0BAA4B,SAC1BjF,EACA0D,EACApH,EACAuH,GAEA,WACE,EAAKwB,mBAAmBrF,EAAO1D,EAAeuH,GAC9C,EAAKyB,mBAAmBtF,EAAO0D,GAC/B,EAAK6B,mBAAmBvF,EAAO1D,EAAeuH,GAC9C,EAAK2B,qBAAqBxF,EAAO1D,IAC9B,EAAKmJ,sBAAsBzF,EAAO1D,GAAc,CACnD,EAAKoJ,mBAAmB1F,GACxB,EAAK2F,sBAAsB3F,GAC3B,EAAK4F,yBAAyB5F,GAC9B,EAAK6F,gBAAgB7F,GACrB,EAAK8F,sBAAsB9F,GAC3B,EAAK+F,0BAA0B/F,GAC/B,EAAKgG,oBAAoBhG,GACzB,EAAKiG,mBAAmBjG,EAAO0D,GAC/B,EAAKwC,mBAAmBlG,MAI5B,EAAAmG,+BAAiC,SAACzC,EAAoBpH,GACpD,OAAI,YAAc,EAAKzI,MAAMxB,YACpB,MAINqR,GAAapH,IACZ,0BACE,qBACEjJ,UAAU,cACV6E,QAAS,SAACkO,GACRA,EAAE5O,iBACF4O,EAAEzO,cAAc2K,OAChB,EAAKzO,MAAMwS,uBAEbjB,KAAK,SACLkB,SAAU,GACV,gBAAC,KAAc,CAACjT,UAAU,wBACzB,oBAAUqQ,EAAY,UAAY,cAAe,iBAO5D,EAAA2B,mBAAqB,SAACrF,EAAc1D,EAAwBuH,GAC1D,OAAK,EAAKC,mBAAmBrH,cAAgBH,GAAiBuH,EACrD,KAGP,sBAAIjN,IAAI,YACN,gBAAC,IAAI,CAACqN,gBAAgB,SAASlK,GAAI,CAAEwB,SAAU,oBAAqByE,MAAK,IACtE,oBAAU,4BAMnB,EAAAsF,mBAAqB,SAACtF,EAAc0D,GAClC,OACG,EAAK7P,MAAM6G,SAASyB,iBACpBuH,GACA,EAAKI,mBAAmBrH,aAMzB,sBAAI7F,IAAI,YACN,gBAAC,IAAI,CAACqN,gBAAgB,SAASlK,GAAI,CAAEwB,SAAU,oBAAqByE,MAAK,IACtE,oBAAU,sCANR,MAYX,EAAAuF,mBAAqB,SAACvF,EAAc1D,EAAwBuH,GAC1D,OAAK,EAAKC,mBAAmBrH,cAAgBH,GAAiBuH,EACrD,KAGP,sBAAIjN,IAAI,YACN,gBAAC,IAAI,CAACqN,gBAAgB,SAASlK,GAAI,CAAEwB,SAAU,oBAAqByE,MAAK,IACtE,oBAAU,4BAMnB,EAAAwF,qBAAuB,SAACxF,EAAc1D,GACpC,OAAKA,EAIH,sBAAI1F,IAAI,eACN,gBAAC,IAAI,CAACqN,gBAAgB,SAASlK,GAAI,CAAEwB,SAAU,uBAAwByE,MAAK,IACzE,oBAAU,8BALR,MAWX,EAAA0F,mBAAqB,SAAC1F,GACpB,OAAK,EAAK8D,mBAAmByC,oBAI3B,sBAAI3P,IAAI,YACN,gBAAC,IAAI,CAACqN,gBAAgB,SAASlK,GAAI,CAAEwB,SAAU,4BAA6ByE,MAAK,IAC9E,oBAAU,mCALR,MAWX,EAAA2F,sBAAwB,SAAC3F,GACvB,OAAK,EAAK8D,mBAAmB0C,iBAI3B,sBAAI5P,IAAI,gBACN,gBAAC,IAAI,CAACqN,gBAAgB,SAASlK,GAAI,CAAEwB,SAAU,wBAAyByE,MAAK,IAC1E,oBAAU,+BALR,MAWX,EAAA4F,yBAA2B,SAAC5F,GAC1B,OAAI,4BAAmB,EAAK8D,mBAAmB2C,mBACtC,KAGP,sBAAI7P,IAAI,mBACN,gBAAC,IAAI,CAACqN,gBAAgB,SAASlK,GAAI,CAAEwB,SAAU,mBAAoByE,MAAK,IACrE,oBAAU,2BAMnB,EAAA6F,gBAAkB,SAAC7F,GACjB,OAAK,EAAK8D,mBAAmB4C,UAI3B,sBAAI9P,IAAI,SACN,gBAAC,IAAI,CAACqN,gBAAgB,SAASlK,GAAI,CAAEwB,SAAU,iBAAkByE,MAAK,IACnE,oBAAU,wBALR,MAWX,EAAA8F,sBAAwB,SAAC9F,GACvB,OAAK,EAAK8D,mBAAmB6C,gBAI3B,sBAAI/P,IAAI,eACN,gBAAC,IAAI,CAACqN,gBAAgB,SAASlK,GAAI,CAAEwB,SAAU,iBAAkByE,MAAK,IACnE,oBAAU,sBALR,MAWX,EAAA+F,0BAA4B,SAAC/F,GAC3B,OAAK,EAAK8D,mBAAmBzI,oBAI3B,sBAAIzE,IAAI,oBACN,gBAAC,IAAI,CAACqN,gBAAgB,SAASlK,GAAI,CAAEwB,SAAU,4BAA6ByE,MAAK,IAC9E,oBAAU,2BALR,MAWX,EAAAgG,oBAAsB,SAAChG,GACrB,OAAK,EAAK8D,mBAAmB8C,cAI3B,sBAAIhQ,IAAI,cACN,gBAAC,IAAI,CAACqN,gBAAgB,SAASlK,GAAI,CAAEwB,SAAU,eAAgByE,MAAK,IACjE,oBAAU,qBALR,MAWX,EAAAiG,mBAAqB,SAACjG,EAAc0D,GAClC,OAAK,EAAKI,mBAAmBrH,cAAiBiH,EAI5C,sBAAI9M,IAAI,YACN,gBAAC,IAAI,CAACqN,gBAAgB,SAASlK,GAAI,CAAEwB,SAAU,oBAAqByE,MAAK,IACtE,oBAAU,mBALR,MAWX,EAAAkG,mBAAqB,SAAClG,GACZ,IAAA1M,EAAc,EAAKO,MAAMtB,UAAhB,UAEjB,OAAK,EAAKuR,mBAAmBrH,cAK1B,CACC,IAAmBjC,QACnB,IAAmBuI,UACnB,IAAmBxG,aACnB+D,SAAShN,GAMX,sBAAIsD,IAAI,kBACN,gBAAC,IAAI,CAACqN,gBAAgB,SAASlK,GAAI,CAAEwB,SAAU,oBAAqByE,MAAK,IACtE,oBAAU,mBAhBR,MAsBX,EAAA6G,gBAAkB,SAAC,EAA4BC,EAAkBC,G,IAA5CnQ,EAAG,MAAEyJ,EAAI,OACtB9E,EAAWuL,EAAU,4BAA4BlQ,EAAQ,sBAAsBA,EAC/EoJ,EAAQ,GAAH,MAAQ+G,GAAS,CAAEzT,UAAW,EAAKO,MAAMtB,UAAUe,YAC9D,OACE,sBAAIsD,IAAKA,GACP,gBAAC,IAAI,CAACqN,gBAAgB,SAASlK,GAAI,CAAEwB,SAAQ,EAAEyE,MAAK,IACjDK,KAMT,EAAAoF,sBAAwB,SAACzF,EAAc1D,GAErC,OADmB,EAAKwH,mBAAmBW,YAAc,IAEtDjL,QAAO,SAAA4M,GAAK,OAAC9J,GAAD,uBAAkB8J,EAAExP,OAChCD,KAAI,SAAAyP,GAAK,SAAKS,gBAAgBT,GAAG,EAAxB,OAGd,EAAAY,iBAAmB,SAAChH,GAClB,IACMiH,GADa,EAAKpT,MAAMtB,UAAUkS,YAAc,IACVjL,QAC1C,SAAAkL,GAAa,OAACA,EAAU9N,IAAI+N,WAAf,sBAGf,OAAwC,IAApCsC,EAAyBzI,OACpB,KAIP,gBAAC,KAAQ,aACG,aACVhL,QACE,sBAAIH,UAAU,QACX4T,EAAyBtQ,KAAI,SAAAyP,GAAK,SAAKS,gBAAgBT,GAAG,EAAxB,OAGvClB,QAAQ,OACP,SAAC,G,IAAEC,EAAa,gBAAE3D,EAAI,OAAO,OAC5B,qCACiBA,EAAI,gBACL,OACd4D,KAAK,SACL/R,UAAW,EAAW,kBAAmB,CAAEmK,OAAQgE,IACnDvJ,KAAK,IACLpB,GAAG,4BACHqB,QAASiN,GACR,oBAAU,QACX,gBAAC,IAAY,CAAC9R,UAAU,4B,EAgCpC,OAtgB0B,QA6exB,YAAAuB,OAAA,WACE,IAAM8O,EAAYnP,KAAKmP,YACjBpH,EAAgB/H,KAAK+H,gBACrBuH,EAActP,KAAKsP,cACnBJ,EAAclP,KAAKkP,cACnBzD,EAAQzL,KAAKwP,WACnB,OACE,uBAAK1Q,UAAU,kDACb,gBAAC,KAAU,KACRkB,KAAKyP,oBAAoBhE,EAAO6D,GAChCtP,KAAK6P,iBAAiBX,EAAazD,GACnCzL,KAAKgQ,2BAA2Bd,EAAazD,EAAO6D,GACpDtP,KAAKiQ,sBAAsBf,EAAazD,GACxCzL,KAAK+P,4BAA4Bb,EAAazD,GAC9CzL,KAAK2P,eAAeT,EAAazD,EAAO1D,EAAeuH,GACvDtP,KAAK4P,mBAAmBV,EAAazD,GACrCzL,KAAKyS,iBAAiBhH,IAEzB,gBAAC,KAAU,KACRzL,KAAKqQ,qBAAqB5E,EAAO0D,EAAWpH,EAAeuH,GAC3DtP,KAAK4R,+BAA+BzC,EAAWpH,MAK1D,EAtgBA,CAA0B,iBAwgBX,UAAA1B,EAAA,GAAa,I,6DCzjBd,SAAU,GAAW/G,GACzB,IAAAqT,EAAsCrT,EAA9B,SAAEsT,EAA4BtT,EAAnB,UAAE0M,EAAiB1M,EAAV,QAAEuT,EAAQvT,EAAL,IAEzC,OACE,uBACER,UAAW,EAAW,+BAAgC,CAAEmO,KAAM2F,IAC9DE,MAAO,CAAED,IAAG,IACZ,uBAAK/T,UAAU,gBACb,gBAAC,eAAW,CAAC6E,QAASqI,KAEvB4G,GACC,gBAAC,KAAiB,CAACG,UAAW/G,GAC5B,gBAAC,KAAmB,CAACgH,eAAgBhH,GACnC,uBAAKlN,UAAU,sCAAsC6T,M,ICTrDM,G,2DAMN,SAAUC,GAAgB/R,EAAiB5C,GAC/C,IAAMW,EAAMiU,GAAYhS,EAAM5C,GACtBiI,EAA4DjI,EAAtD,OAAE,EAAoDA,EAAvC,OAAb6U,OAAM,IAAG,OAAI,EAAE,EAAqC7U,EAAd,OAAvB8U,OAAM,IAAG,iBAAc,EAAErR,EAAYzD,EAAL,QAE/D,GAAe,QAAX6U,EACF,OAAOlU,EAEP,IAAIwJ,OAAK,EACL4K,OAAU,EAEd,OAAQnS,GACN,KAAK8R,GAAUM,UACb7K,EAAQ,aACR,MACF,KAAKuK,GAAUO,QACb9K,EAAQ,iCAAuB,CAAErG,IAAKgR,IACtC,MACF,KAAKJ,GAAUQ,YACf,QACE/K,EAAQ,eAIR1G,IACFsR,EAAa,8BAAmB,YAActR,EAASwE,IAAS,IAGlE,IAAMkN,EAAU,KAAKhL,EAAK,KAAKxJ,EAAG,IAClC,OAAOoU,EAAa,IAAII,EAAO,KAAKJ,EAAU,IAAMI,EAIlD,SAAUP,GACdhS,EACA,G,IAAEqF,EAAM,SAAExE,EAAO,UAAE,IAAA2R,aAAK,IAAG,UAAO,EAAE,IAAAN,cAAM,IAAG,iBAAc,EAAE7L,EAAW,cAExE,OAAQrG,GACN,KAAK8R,GAAUM,UACb,OAAU,wBAAY,qCAAqCI,EAAK,OAClE,KAAKV,GAAUQ,YACb,OAAU,wBAAY,oCAAoC,qBACxD,mBAAQ,CAAEjN,OAAM,EAAExE,QAAO,EAAEwF,YAAW,KAE1C,KAAKyL,GAAUO,QACf,QACE,OAAU,wBAAY,+BAA+B,qBACnD,mBAAQ,CAAEhN,OAAM,EAAExE,QAAO,EAAEqR,OAAM,EAAE7L,YAAW,OApDtD,SAAYyL,GACV,oBACA,6BACA,wBAHF,CAAYA,QAAS,K,yWCLrB,uE,OACE,EAAAlQ,YAAc,WACZ,EAAKzD,MAAMqE,QAAQ,EAAKrE,MAAM6B,O,EAYlC,OAdyC,QAKvC,YAAAd,OAAA,WACQ,MAA0BL,KAAKV,MAA7B0J,EAAQ,WAAE7H,EAAI,OAAEjC,EAAG,MACrB0U,EAAQzS,IAAS8R,GAAUO,QAAU,aAAUzV,EACrD,OACE,gBAAC,UAAM,CAACe,UAAW,EAAW,eAAgB,CAAEkK,SAAQ,IAAKrF,QAAS3D,KAAK+C,aACzE,uBAAK8Q,IAAK,oBAAU,kBAAmB1S,EAAM,OAAQ2S,IAAK5U,EAAK0U,MAAOA,MAI9E,EAdA,CAAyC,iB,qYCMzC,uE,OACE,EAAArU,SAAU,EAEV,EAAAG,MAAe,CAAEqU,aAAc,IA2B/B,EAAAC,gBAAkB,WAChB,MAAO,CAAC,QAAS,QAAS,UAAU5R,KAAI,SAAAuR,GAAS,MAAC,CAChDjL,MAAO,oBAAU,iCAAkCiL,GACnD3P,MAAO2P,OAIX,EAAAM,iBAAmB,WACjB,MAAO,CAAC,KAAM,OAAO7R,KAAI,SAAAgR,GAAU,MAAC,CAClC1K,MAAO,oBAAU,kCAAmC0K,GACpDpP,MAAOoP,OAIX,EAAAc,iBAAmB,WACjB,OAAO,EAAKxU,MAAMqU,aAAa3R,KAAI,SAAAC,GACjC,IAAMgR,EAAS,EAAK/T,MAAM6U,QAAQ9R,GAClC,MAAO,CACL2B,MAAO3B,EACPqG,MAAO2K,EAAS,iCAAuBA,GAAUhR,OAKvD,EAAA+R,kBAAoB,SAAC,G,IAAEpQ,EAAK,QAC1B,EAAK1E,MAAM+U,cAAc,CAAEV,MAAO3P,KAGpC,EAAAsQ,mBAAqB,SAAC,G,IAAEtQ,EAAK,QAC3B,EAAK1E,MAAM+U,cAAc,CAAEjB,OAAQpP,KAGrC,EAAAuQ,mBAAqB,SAAC,G,IAAEvQ,EAAK,QAC3B,EAAK1E,MAAM+U,cAAc,CAAEhB,OAAQrP,KAGrC,EAAAwQ,gBAAkB,SAACrT,EAAiB5C,GAClC,OAAI4C,IAAS8R,GAAUM,UAEnB,gCACE,yBAAOzU,UAAU,eAAe2V,QAAQ,eACrC,oBAAU,SACL,KACR,gBAAC,KAAM,CACL3V,UAAU,eACV4V,WAAW,EACX5I,KAAK,cACLS,SAAU,EAAK6H,kBACf7V,QAAS,EAAKyV,kBACdW,YAAY,EACZ3Q,MAAOzF,EAAQoV,SAIZxS,IAAS8R,GAAUO,QAE1B,gCACE,yBAAO1U,UAAU,eAAe2V,QAAQ,gBACrC,oBAAU,0BACL,KACR,gBAAC,KAAM,CACL3V,UAAU,eACV4V,WAAW,EACXE,UAAW,CAAEC,UAAW,KACxB/I,KAAK,eACLS,SAAU,EAAKgI,mBACfhW,QAAS,EAAK2V,mBACdS,YAAY,EACZ3Q,MAAOzF,EAAQ8U,UAKd,M,EA6Bb,OApIyC,QAKvC,YAAAtT,kBAAA,WACEC,KAAKT,SAAU,EACfS,KAAK8U,qBAGP,YAAA1U,qBAAA,WACEJ,KAAKT,SAAU,GAGjB,YAAAuV,kBAAA,sBACE,cAAY,GAAOlV,MACjB,SAAAmV,GACE,GAAI,EAAKxV,QAAS,CAChB,IAAMwB,EAASgU,EAAYzT,MAAK,SAAA0T,GAAK,6BAAAA,EAAEC,QACjCC,EAAKnU,GAAUA,EAAOoU,QAAQ7T,MAAK,SAAA8T,GAAK,kBAAAA,EAAE/S,OAC1CgT,EAAQH,GAAMA,EAAGI,QAAUJ,EAAGI,OAAOhU,MAAK,SAAAiU,GAAK,iBAAAA,EAAElT,OACnDgT,GAASA,EAAMG,gBACjB,EAAK3V,SAAS,CAAEkU,aAAcsB,EAAMG,qBAI1C,gBAiFJ,YAAAnV,OAAA,WACQ,MAA+BL,KAAKV,MAAlCR,EAAS,YAAEP,EAAO,UAAE4C,EAAI,OAChC,OACE,uBAAKrC,UAAWA,GACbkB,KAAKwU,gBAAgBrT,EAAM5C,GAE5B,yBACEO,UAAW,EAAW,eAAgB,CACpC,aAAcqC,IAAS8R,GAAUQ,cAEnCgB,QAAQ,gBACP,oBAAU,UACL,KACR,gBAAC,KAAM,CACL3V,UAAU,eACV4V,WAAW,EACX5I,KAAK,eACLS,SAAUvM,KAAKsU,mBACf/V,QAASyB,KAAKiU,mBACdU,YAAY,EACZ3Q,MAAOhE,KAAKV,MAAMf,QAAQ6U,QAAU,SAK9C,EApIA,CAAyC,iB,gkBCIzC,uE,OACE,EAAA1T,MAAe,CACb+V,aAAcxC,GAAUO,QACxBkC,aAAc,CAAE/B,MAAO,QAASN,OAAQ,KAAUsC,eAGpD,EAAAC,kBAAoB,SAACH,GACnB,EAAK5V,SAAS,CAAE4V,aAAY,KAG9B,EAAAI,oBAAsB,SAACtX,GACrB,EAAKsB,UAAS,SAAAH,GAAS,MAAC,CAAEgW,aAAc,GAAF,MAAOhW,EAAMgW,cAA5B,Q,EAyC3B,OApD2C,QAczC,YAAArV,OAAA,WACQ,MAAqCL,KAAKV,MAAxCxB,EAAU,aAAEkE,EAAO,UAAEjD,EAAS,YAChC,EAAiCiB,KAAKN,MAApC+V,EAAY,eAAEC,EAAY,eAC5BI,EAAmB,GAAH,IAAK9T,QAAO,GAAK0T,GAAiB,YAAmB5X,IAE3E,OACE,uBAAKgB,UAAU,uBACb,0BAAK,oBAAU,4BAA6BC,IAC5C,qBAAGD,UAAU,qBAAqB,oBAAU,8BAA+BC,IAC3E,gBAAC,GAAW,CACV4E,QAAS3D,KAAK4V,kBACd5M,SAAUiK,GAAUO,UAAYiC,EAChCtU,KAAM8R,GAAUO,QAChBtU,IAAKiU,GAAYF,GAAUO,QAASsC,KAEtC,qBAAGhX,UAAU,iCACV,oBAAU,kBAAmBmU,GAAUO,QAAS,cAAezU,IAElE,gBAAC,GAAW,CACV4E,QAAS3D,KAAK4V,kBACd5M,SAAUiK,GAAUQ,cAAgBgC,EACpCtU,KAAM8R,GAAUQ,YAChBvU,IAAKiU,GAAYF,GAAUQ,YAAaqC,KAE1C,qBAAGhX,UAAU,iCACV,oBAAU,kBAAmBmU,GAAUQ,YAAa,cAAe1U,IAEtE,gBAAC,GAAW,CACVD,UAAU,wCACVqV,QAASnU,KAAKV,MAAM6U,QACpB5V,QAASmX,EACTvU,KAAMsU,EACNpB,cAAerU,KAAK6V,sBAEtB,gBAACE,GAAA,EAAW,CAACC,WAAW,EAAMC,QAAS/C,GAAgBuC,EAAcK,OAI7E,EApDA,CAA2C,iB,sBCZ7B,SAAUI,GAAe5W,GAC7B,IAAAqT,EAAsCrT,EAA9B,SAAEsT,EAA4BtT,EAAnB,UAAE6W,EAAiB7W,EAAL,aACzC,OACE,uBACER,UAAW,EACT,wEACA,CACEmO,KAAM2F,KAGV,sBAAI9T,UAAU,yCAAyC6E,QAAS,WAAM,OAAAwS,MACpE,gBAAC,KAAQ,CAACrX,UAAU,wBACnB,oBAAU,SAGZ8T,GAAa,uBAAK9T,UAAU,8BAA8B6T,I,+CC6ClD,ICvEHyD,GDuEG,UAAA/R,GAAA,IAzDT,SAA+B/E,GAC3B,IAAA2C,EAAiE3C,EAAzD,SAAEtB,EAAuDsB,EAA9C,UAAEkF,EAA4ClF,EAArC,QAAE+B,EAAmC/B,EAAtB,cAAEmF,EAAoBnF,EAAL,gBAkB9D+W,EAAuBhV,EAAc4D,QAAO,SAAAqR,GAAK,OAAAA,EAAEtU,SAAWsU,EAAEtU,UAAYhE,EAA3B,OAEvD,OACE,gCACE,0BAAK,oBAAU,+BAEf,gBAAC6H,EAAA,MAAK,CAAC/G,UAAU,aAAaiH,QAAQ,QACnC,oBAAU,wCAGb,gBAAC,KAAe,CAACvB,QAASA,GACxB,yBAAO1F,UAAU,kCACf,6BACE,0BACE,mCAAgB,oBAAU,aACzBmD,EAASG,KAAI,SAAAhB,GAAW,OACvB,sBAAItC,UAAU,cAAcuD,IAAKjB,GAC/B,0BAAK,oBAAU,uBAFM,UAQ7B,gBAACmV,GAAA,EAAiB,CAChBtU,SAAUA,EACVC,WA7BY,SAACf,EAAcC,GACnC,MAAO,wBAAwBpD,EAAUqE,IAAG,IAAIlB,EAAI,IAAIC,GA6BhDC,cAAegV,EACf3U,MA3CoB,SAAC,G,IAAEN,EAAO,UAAED,EAAI,OAC5C7B,EAAM6E,gBAAgB,CAAEnC,QAAShE,EAAUqE,IAAKjB,QAAO,EAAED,KAAI,KA2CrDQ,SAxCuB,SAAC,G,IAAEP,EAAO,UAAED,EAAI,OAC/C7B,EAAM8E,mBAAmB,CACvBpC,QAAShE,EAAUqE,IACnBjB,QAAO,EACPD,KAAI,KAqCEa,SAAS,EACTG,MAAOsC,U,SC/DnB,SAAY2R,GACV,mBACA,uBACA,qCAHF,CAAYA,QAAuB,K,oCCwBpB,eAfT,SAAwB9W,GACpB,IAAAoJ,EAAcpJ,EAAT,MAAEkG,EAAOlG,EAAL,GAEjB,OACE,qBACER,UAAU,wDACV6E,QAAS,WAAM,OAAArE,EAAM6W,aAAN,IACftF,KAAK,OACLkB,SAAU,GACTrJ,EACD,gBAAC,KAAgB,U,UCVT,SAAU8N,GAAQ,G,IAAErI,EAAY,eAAEpP,EAAS,YACvD,OACE,gCACE,0BAAK,oBAAU,uBAAwBA,IACvC,uBAAKD,UAAU,uBACb,yBAAOA,UAAU,eAAeiF,UAAU,EAAM5C,KAAK,OAAO6C,MAAOmK,IACnE,gBAAC,mBAAe,CAACrP,UAAU,qBAAqB2X,UAAWtI,M,yYCDnE,uE,OACE,EAAA5O,SAAU,EACV,EAAAG,MAAe,GAiBf,EAAAgX,UAAY,WACV,oBAAgB,EAAKpX,MAAMtB,UAAUqE,KAAKzC,MACxC,SAAA6I,GACM,EAAKlJ,SACP,EAAKM,SAAS,CAAE4I,MAAK,OAGzB,gB,EAyBN,OAnDuC,QAIrC,YAAA1I,kBAAA,WACEC,KAAKT,SAAU,EACfS,KAAK0W,aAGP,YAAAzW,mBAAA,SAAmB0W,GACbA,EAAU3Y,UAAUqE,MAAQrC,KAAKV,MAAMtB,UAAUqE,KACnDrC,KAAK0W,aAIT,YAAAtW,qBAAA,WACEJ,KAAKT,SAAU,GAajB,YAAAc,OAAA,WACU,IAAAoI,EAAUzI,KAAKN,MAAV,MAEb,IAAK+I,GAA0B,IAAjBA,EAAMwB,OAClB,OAAO,KAGT,IAAM2M,EAAe,aAAWnO,GAEhC,OACE,gCACE,uBAAK3J,UAAU,8BACb,0BAAK,oBAAU,4BACf,sBAAIA,UAAU,qBACX8X,EAAaxU,KAAI,SAAAmB,GAAQ,OACxB,gBAACsT,GAAA,EAAQ,CAACxU,IAAKkB,EAAKjB,GAAIiB,KADA,WAQtC,EAnDA,CAAuC,iBCLzB,SAAUuT,GAAgB,G,IAAErD,EAAW,cACnD,OACE,gCACE,0BAAK,oBAAU,8BAEf,sBAAI3U,UAAU,qBACZ,0BACG2U,EAAYsD,WACX,wBAAMjY,UAAU,qB,IAAsB,oBAAU,WAAmB,KAErE,gBAAC,IAAI,CAAC0G,GAAI,YAAkBiO,EAAYpR,MAAOoR,EAAY3H,S,gXCGrE,0E,OACE,EAAAvM,SAAU,EACV,EAAAG,MAAe,CAAEsX,gBAAiB,I,EAiGpC,OAnGyC,QAIvC,YAAAjX,kBAAA,WACEC,KAAKT,SAAU,EACfS,KAAKiX,uBAGP,YAAA7W,qBAAA,WACEJ,KAAKT,SAAU,GAGjB,YAAA0X,oBAAA,sBACQC,EAAmBlX,KAAKV,MAAM6X,SAASlS,QAAO,SAAAsQ,GAAK,OAACA,EAAD,WACnD6B,EAAWF,EAAiB9U,KAAI,SAAAiV,GACpC,SAAKC,8BAA8BD,EAAQhV,QAE7CkV,QAAQC,IAAIJ,GAAUxX,MACpB,SAAA6X,GACE,GAAI,EAAKlY,QAAS,CAChB,IAAM,EAAkC,GACxCkY,EAAUC,SAAQ,SAACC,EAAOrZ,GACxB,IAAMsZ,EAAaV,EAAiB5Y,GAAG+D,IACvC,EAAgBuV,GAAcD,KAEhC,EAAK9X,SAAS,CAAEmX,gBAAe,QAGnC,gBAIJ,YAAAM,8BAAA,SAA8BM,GAC5B,IAAM/U,EAAO,CACXgV,WAAY,OACZC,GAAI,EACJC,SAAUH,EACVI,SAAU,cAEZ,OAAO,aAAYnV,GAAMjD,MAAK,SAAAgB,GAAK,OAAAA,EAAA,UAGrC,YAAAqX,wBAAA,SAAwBZ,GAEtB,OADcrX,KAAKN,MAAMsX,gBAAgBK,EAAQhV,MACjC,GAGlB,YAAA6V,cAAA,SAAcb,GACZ,IAAMc,EAAoBnY,KAAKV,MAAM8Y,UAAUf,EAAQgB,UACjDC,EAAeH,EAAoBA,EAAkBrM,KAAOuL,EAAQgB,SAEpEE,EACJ,uBAAKzZ,UAAU,iBACb,wBAAMA,UAAU,qB,IAAsBwZ,EAAqB,KAC1DjB,EAAQmB,QACPnB,EAAQvL,KAER,gBAAC,IAAI,CAACtG,GAAI,YAAqB6R,EAAQvL,KAAMuL,EAAQgB,WAAYhB,EAAQvL,OAK/E,GAAIuL,EAAQmB,QAAS,CACnB,IAAMC,EAAU,kCAAwB,2BAA4BpB,EAAQvL,MAC5E,OACE,gBAAC,KAAO,CAACzJ,IAAKgV,EAAQhV,IAAKpD,QAASwZ,GAClC,sBAAI3Z,UAAU,gCAAgCyZ,IAKpD,IAAMZ,EAAQ3X,KAAKiY,wBAAwBZ,GAE3C,GAAIM,EAAQ,EAAG,CACPc,EAAU,kCAAwB,8BAA+Bd,GACvE,OACE,gBAAC,KAAO,CAACtV,IAAKgV,EAAQhV,IAAKpD,QAASwZ,GAClC,sBAAI3Z,UAAU,iCAAiCyZ,IAKrD,OAAO,sBAAIlW,IAAKgV,EAAQhV,KAAMkW,IAGhC,YAAAlY,OAAA,sBACQ,EAAgCL,KAAKV,MAAnCoZ,EAAe,kBAAEvB,EAAQ,WAEjC,OACE,gCACE,sBAAIrY,UAAW4Z,GAAkB,oBAAU,8BAE3C,sBAAI5Z,UAAU,qBACXqY,EAAS/U,KAAI,SAAAiV,GAAW,SAAKa,cAAL,SAKnC,EAnGA,CAAyC,iBAyG1B,gBAJS,SAACxY,GAAiB,MAAC,CACzC0Y,UAAW,uBAAa1Y,MAGX,CAAyB,I,0CClH1B,SAAUiZ,GAAS,G,IAAE3a,EAAS,YAAE4a,EAAQ,WAC9CC,EAAQ7a,EAAUe,YAAc,IAAmBiJ,YACnD8Q,EAAQF,EAAStX,MAAK,SAAAkS,GAAW,OAAAA,EAAQH,SAAW,KAAnB,SACjC0F,EAAWF,EACbD,EAAStX,MAAK,SAAAkS,GAAW,OAAAA,EAAQH,SAAW,KAAnB,iBACzBtV,EAEJ,OACE,gCACE,0BAAK,0BAAe,KAAU+a,QAC9B,uBAAKha,UAAU,uBACZga,EACC,gCACE,gBAACE,GAAA,EAAa,CAACla,UAAU,OAAOd,UAAWA,EAAUqE,IAAKgR,OAAQ,KAAUyF,OACzE,yBAAcA,EAAM9U,MAAO,cAG9B,wBAAMlF,UAAU,eACd,gBAAC,KAAU,CAACkF,MAAOiV,OAAOH,EAAM9U,WAIpC,iCAGD6U,GACC,wBAAM/Z,UAAU,+CACbia,EACC,gBAACC,GAAA,EAAa,CAAChb,UAAWA,EAAUqE,IAAKgR,OAAQ,KAAU0F,UACzD,wBAAMja,UAAU,OAAO,yBAAcia,EAAS/U,MAAO,eAGvD,wBAAMlF,UAAU,OAAK,KAEvB,wBAAMA,UAAU,iCACb,oBAAU,4B,0mBC/BzB,uE,OACE,EAAAS,SAAU,EACV,EAAAG,MAAe,CAAEwZ,aAAc,IAU/B,EAAAC,SAAW,SAAC1N,GACV,OAAO,YAAkB,CACvBC,EAAGD,EACHqM,GAAIsB,KAAKC,IAAI,EAAK/Z,MAAMga,aAAarP,OAAS,EAjBlC,GAiBiD,OAC5DrK,MACD,SAAC,G,IAAE2Z,EAAI,OACD,EAAKha,SACP,EAAKM,SAAS,CAAEqZ,aAAcK,OAGlC,gBAIJ,EAAAxQ,SAAW,SAACyQ,GACV,EAAKla,MAAMma,eAAc,GAAK,EAAKna,MAAMga,aAAY,CAAEE,MAGzD,EAAAE,WAAa,SAACF,GACZ,EAAKla,MAAMma,eAAe,KAAQ,EAAKna,MAAMga,aAAcE,K,EAgB/D,OA/C8C,QAI5C,YAAAzZ,kBAAA,WACEC,KAAKT,SAAU,GAGjB,YAAAa,qBAAA,WACEJ,KAAKT,SAAU,GAyBjB,YAAAc,OAAA,WACE,IAAMsZ,EAAgB,KAAW3Z,KAAKN,MAAMwZ,aAAclZ,KAAKV,MAAMga,cACrE,OACE,gBAACM,GAAA,EAAY,CACXC,SAxCU,GAyCVV,SAAUnZ,KAAKmZ,SACfpQ,SAAU/I,KAAK+I,SACf2Q,WAAY1Z,KAAK0Z,WACjBJ,aAActZ,KAAKV,MAAMga,aACzBC,KAAMI,KAId,EA/CA,CAA8C,iB,qWCF9C,uE,OAKE,EAAAG,cAAgB,WACN,IAAAjT,EAAkB,EAAKvH,MAAMtB,UAAhB,cACrB,OAAO6I,GAAiBA,EAAcqB,cAGxC,EAAA6R,YAAc,SAACC,EAAoBC,GAA6B,MAAC,CAC/DpH,IAAKmH,EAAOE,OACZC,MAAOF,EAAarG,MAAQoG,EAAOpG,QAGrC,EAAAwG,QAAU,SAAClT,GACD,IAAAlJ,EAAc,EAAKsB,MAAV,UAEjB,OAAItB,EAAUe,YAAc,IAAmBiJ,YACtC,YAAmB,CACxBqS,YAAarc,EAAUqE,IACvBkX,KAAMrS,EAAOoT,KAAK,OAGb,YAAe,CACpBtY,QAAShE,EAAUqE,IACnBkX,KAAMrS,EAAOoT,KAAK,QAKxB,EAAAC,qBAAuB,SAACrT,GACtB,EAAKkT,QAAQlT,GAAQtH,MACnB,WAAM,SAAKN,MAAMkb,kBAAkB,CAAEjB,KAA/B,OACN,gB,EAwCN,OA1EsC,QAsCpC,YAAAlZ,OAAA,sBACUgC,EAAQrC,KAAKV,MAAMtB,UAAhB,IACLub,EAAOvZ,KAAKV,MAAMtB,UAAUub,MAAQ,GAE1C,OAAIvZ,KAAK8Z,gBAEL,uBAAKhb,UAAU,mCAAmCoK,IAAK,SAAAuR,GAAQ,OAAC,EAAKA,KAAN,IAC7D,gBAAC,KAAQ,CACPC,cAAc,EACdC,qBAAqB,EACrB1b,QACE,gBAAC,GAAgB,CACf+C,QAASK,EACTiX,aAAcC,EACdE,eAAgBzZ,KAAKua,uBAGzBK,iBAAkB,kBAAeC,YACjC,gBAAC,cAAU,CAACC,SAAU,SAAAC,GAAY,OAAC,EAAKA,SAAN,GAA4BC,iBAAiB,GAC7E,gBAACC,GAAA,EAAQ,CAACC,aAAa,EAAM3B,KAAMA,EAAKtP,OAASsP,EAAO,CAAC,oBAAU,iBAOzE,uBAAKza,UAAU,oCACb,gBAACmc,GAAA,EAAQ,CACPC,aAAa,EACbpc,UAAU,OACVya,KAAMA,EAAKtP,OAASsP,EAAO,CAAC,oBAAU,gBAMlD,EA1EA,CAAsC,iBCqFvB,eA9ET,SAAqCja,GACjC,IAAA6b,EAAsE7b,EAA7C,0BAAE8b,EAA2C9b,EAA/B,aAAEtB,EAA6BsB,EAApB,UAAE,EAAkBA,EAAL,SAAbsZ,OAAQ,IAAG,KAAE,EAEnEC,EAAQ7a,EAAUe,YAAc,IAAmBiJ,YAEzD,OACE,gCACE,2BACE,sBAAIlJ,UAAU,8BACX,oBAAU+Z,EAAQ,cAAgB,UAAW,gBAIlD,uBAAK/Z,UAAU,mBACb,uBAAKA,UAAU,8BACb,uBAAKA,UAAU,uBACb,sBAAIA,UAAU,gBAAgB,oBAAU,6BACvCd,EAAUgB,YACT,gBAACH,GAAA,EAAqB,CACpBE,UAAWf,EAAUe,UACrBC,WAAYhB,EAAUgB,cAK3BhB,EAAUqd,aACT,qBAAGvc,UAAU,2BAA2Bd,EAAUqd,aAGpD,gBAAC,GAAQ,CAACrd,UAAWA,EAAWwc,kBAAmBlb,EAAMkb,qBAG3D,uBAAK1b,UAAU,oDACb,gBAAC6Z,GAAQ,CAAC3a,UAAWA,EAAW4a,SAAUA,MAG1CC,IACC7a,EAAUyV,aACRzV,EAAUsd,iBAAmBtd,EAAUsd,gBAAgBrR,OAAS,IACjE,gCACE,uBAAKnL,UAAU,8BACZd,EAAUyV,aAAe,gBAACqD,GAAe,CAACrD,YAAazV,EAAUyV,cAEjEzV,EAAUsd,iBAAmBtd,EAAUsd,gBAAgBrR,OAAS,GAC/D,gBAAC,GAAmB,CAClByO,gBAAiB1a,EAAUyV,YAAc,sBAAmB1V,EAC5DoZ,SAAUnZ,EAAUsd,qBAO9BzC,GAAS,gBAAC,GAAS,CAAC7a,UAAWA,IAEjC,uBAAKc,UAAU,8BACb,gBAAC0X,GAAO,CAACrI,aAAcnQ,EAAUqE,IAAKtD,UAAWf,EAAUe,aAG5Dqc,GACC,gBAAC,GAAU,CACT1S,MAAO,oBAAU,4BAA6B1K,EAAUe,WACxDoX,aAAc7W,EAAM6W,aACpB3Q,GAAI4Q,GAAwBmF,SAG/BJ,GACC,gBAAC,GAAU,CACTzS,MAAO,oBAAU,iCACjByN,aAAc7W,EAAM6W,aACpB3Q,GAAI4Q,GAAwB/U,qB,kWC9DxC,0E,OACE,EAAA9B,SAAU,EACV,EAAAG,MAAe,CACb8b,KAAMpF,GAAwBqF,MAahC,EAAAC,QAAU,SAACF,QAAA,IAAAA,MAAgCpF,GAAwBqF,MACjE,EAAK5b,SAAS,CAAE2b,KAAI,KAGtB,EAAAG,aAAe,WAEE,IAAAtZ,EACX,EAAK/C,MAAK,UADI,IAGlB,OAAO,aAAY,CACjBtB,UAAWqE,EACXuZ,WAAY,CAAC,KAAU9C,MAAO,KAAUC,UAAUuB,SACjD1a,MAAK,SAAAgZ,GACF,EAAKrZ,SACP,EAAKM,SAAS,CAAE+Y,SAAQ,Q,EAiDhC,OA/EwC,QAMtC,YAAA7Y,kBAAA,WACEC,KAAKT,SAAU,EACfS,KAAKV,MAAMuc,eACX7b,KAAK2b,gBAGP,YAAAvb,qBAAA,WACEJ,KAAKT,SAAU,GAsBjB,YAAAc,OAAA,WACQ,MAAkDL,KAAKV,MAArDxB,EAAU,aAAEE,EAAS,YAAEyP,EAAW,cAAE0G,EAAO,UAC7C,EAAqBnU,KAAKN,MAAxBkZ,EAAQ,WAAE4C,EAAI,OAEhBL,EACJ,YAAW1N,IAAgBzP,EAAUe,YAAc,IAAmBkH,QAClEmV,OACQrd,IAAZoW,GACyB,YAAzBnW,EAAUgB,aACThB,EAAUe,YAAc,IAAmBiJ,aAC1ChK,EAAUe,YAAc,IAAmBkH,SAE/C,OACE,gCACE,gBAAC,GAA0B,CACzBkV,0BAA2BA,EAC3BC,aAAcA,EACdpd,UAAWA,EACX4a,SAAUA,EACV4B,kBAAmBxa,KAAKV,MAAMkb,kBAC9BrE,aAAcnW,KAAK0b,UAEpBN,GACC,gBAAClF,GAAc,CACbtD,UAAW4I,IAASpF,GAAwBmF,OAC5CpF,aAAcnW,KAAK0b,SACnB,gBAAC,GAAa,CACZ5d,WAAYA,EACZqW,QAASA,EACTnS,QAAShE,EAAUqE,IACnBtD,UAAWf,EAAUe,aAI1Boc,GACC,gBAACjF,GAAc,CACbtD,UAAW4I,IAASpF,GAAwB/U,cAC5C8U,aAAcnW,KAAK0b,SACnB,gBAAC,GAAoB,CAAC1d,UAAWA,OAM7C,EA/EA,CAAwC,iBAiFlC8d,GAAqB,CAAED,aAAY,KAO1B,gBALS,SAACnc,GAAiB,MAAC,CACzC+N,YAAa,yBAAe/N,GAC5ByU,QAAS,qBAAWzU,MAGkBoc,GAAzB,CAA6C,IC1F9C,SAAUC,GAAazc,GAEjC,IA4BE0c,EA5BF1R,EAQEhL,EARS,YACXtB,EAOEsB,EAPO,UACTuI,EAMEvI,EANe,kBACjBqG,EAKErG,EALS,YACX6H,EAIE7H,EAJqB,wBACvB8H,EAGE9H,EAHU,aACZ+H,EAEE/H,EAFO,UACT2O,EACE3O,EADM,SAEF2c,EAA4C,WAAzB,oBAAEC,EAAuB,WAAL,mBAEzC,EAA8C,YAAe,GAA5DC,EAAkB,KAAEC,EAAqB,KAEhD,aAAgB,WACN,IAAAjP,EAA2BnP,EAAhB,YAAEqE,EAAcrE,EAAX,IAAE8N,EAAS9N,EAAL,KACtBe,EAAcoO,EAAYA,EAAYlD,OAAS,GAAtC,UAEf,CACE,IAAmBhE,QACnB,IAAmBuI,UACnB,IAAmBxG,YACnB,IAAmBqH,YACnBtD,SAAShN,IAEXsd,EAAA,EAAcC,IAAIja,EAAKyJ,EAAM/M,EAAU4M,iBAExC,CAAC3N,EAAWA,EAAUqE,OAGrB+E,GAAgBC,GAAc1B,GAAeA,EAAYrF,SAAW,IAAaiH,UACnFyU,EACE,gBAAC,EAAuB,CACtBhe,UAAWA,EACX2H,YAAaA,EACbwB,wBAAyBA,EACzBC,aAAcA,EACdC,UAAWA,KAKjB,IAAMkV,EAAmBP,EAAiBC,EAAsB,GAAKA,EAErE,OACE,gBAAC,IAAa,CAAC/B,OAAQqC,EAAkBja,GAAG,qBAAqBka,MAAOR,GACtE,uBACEld,UAAW,EAAW,mEAAoE,CACxF,gBAAqC,IAApBmP,EAAShE,UAE5B,gBAAC,GAAM,CACLK,YAAaA,EACbtM,UAAWA,EACX6J,kBAAmBA,IAErB,gBAAC,GAAU,CACT/J,WAAY+J,EACZ7J,UAAWA,EACXoQ,iBAAkB9O,EAAM8O,iBACxBH,SAAUA,KAGd,gBAAC,GAAI,CACHnQ,WAAY+J,EACZyC,YAAaA,EACbtM,UAAWA,EACXoJ,aAAcA,EACdC,UAAWA,EACXyK,oBAAqB,WAAM,OAAAsK,GAAA,MAE7B,gBAAC,GAAU,CACTxJ,UAAWuJ,EACXnQ,QAAS,WAAM,OAAAoQ,GAAA,IACfvJ,IAAKqJ,EAAqBD,GAC1B,gBAAC,GAAkB,CACjBne,WAAY+J,EACZ7J,UAAWA,EACXwc,kBAAmBlb,EAAMkb,sB,gvBC7DnC,0E,OAEE,EAAAjb,SAAU,EACV,EAAAG,MAAe,CAAE4K,YAAa,GAAIjD,WAAW,EAAO7C,SAAS,EAAMyJ,SAAU,IAsB7E,EAAAwO,aAAe,SAACze,GAA2B,gBACtCA,GAAS,CACZe,UAAWf,EAAUmP,YAAYnP,EAAUmP,YAAYlD,OAAS,GAFvB,aA0D3C,EAAAyS,cAAgB,SACd1e,GAMA,IAAM2e,EAAa3e,EAAUmP,YAAY7L,MAAK,SAAC,G,IAAEvC,EAAS,YACxD,MAAO,CAAC,MAAO,OAAOgN,SAAShN,MAGjC,GAAI4d,EAAY,CACN,IAAAta,EAAQsa,EAAL,IACX,OAAOpF,QAAQC,IAAI,CACjB,YAAYnV,GACa,QAAzBsa,EAAW5d,UAAsBwY,QAAQqF,QAAQ,IAAM,YAAgBva,KACtEzC,MAAK,SAAC,G,IAACid,EAAQ,KAAE7S,EAAY,KACxBM,EAAc,GAAIuS,EAAa7S,GAC/BlM,EAAa,EAAKgf,qBAAqBxS,GAI7C,OAFA,EAAKyS,uBAAuBzS,EAAatM,GAElC,CAAEF,WAAU,EAAEwM,YAAW,EAAEtM,UAAS,MAG7C,OAAOuZ,QAAQqF,QAAQ,CAAEtS,YAAa,GAAItM,UAAS,KAIvD,EAAAgf,YAAc,SAAChf,GACb,YAAqBA,EAAUqE,KAAKzC,MAClC,SAAC,G,IAAEqd,EAAO,UAAEC,EAAK,QACf,GAAI,EAAK3d,QAAS,CAChB,IAAI,GAAuB,EAC3B,EAAKM,UACH,SAAC,G,IAAE/B,EAAU,aAAEE,EAAS,YAAE2H,EAAW,cAAEwX,EAAe,kBAC9CC,EAAiB,EAAKC,eAAeJ,EAASnf,GAC9Cwf,EAAe,EAAKC,gBAAgBL,EAAOpf,GAC3C0f,EAAqBF,EAAarY,QACtC,SAAAwY,GAAQ,OAAAA,EAAKnd,SAAW,IAAhB,cAGJod,GACF/X,GAAeyX,GAChBzX,GAAeyX,GAAkBzX,EAAYrD,KAAO8a,EAAe9a,GAChEqb,EACJR,IACCK,EAAmBvT,SAAWkT,EAAgBlT,QAC7C,IAAauT,EAAoBL,EAAiB,MAAMlT,OAAS,GAiBrE,QAfA,EAAuB6C,QAAQ4Q,GAAsBC,KAGnD3f,IACCwf,EAAmBvT,OAAS,IAAMjM,EAAU6Q,gBAG7C0B,OAAOqN,aAAa,EAAKC,kBACzB,EAAKA,iBAAmBtN,OAAOuN,YAC7B,WAAM,SAAKd,YAAL,KAhJO,MAsJV,CACLrX,YAAayX,EACb/V,UAHgBiW,EAAapR,MAAK,SAAAuR,GAAQ,OAAAA,EAAKnd,SAAW,IAAhB,WAI1C6c,gBAAiBK,MAGrB,WACM,GACF,EAAKO,wBAMf,gBAIJ,EAAAC,cAAgB,SAAChgB,EAAwBF,GACX,QAAxBE,EAAUe,WACZ,YAAkB,GAAD,CACff,UAAWA,EAAUqE,KAClB,YAAmBvE,KACrB8B,MACD,SAAC,G,IAAE5B,EAAS,YACV,EAAK6B,SAAS,CAAEoO,SAAUjQ,EAAUiQ,cAEtC,gBAKN,EAAA6O,qBAAuB,SAACxS,GACd,IAAAmB,EAAU,EAAKnM,MAAMoH,SAAhB,MACb,OAAO+E,EAAMjE,YACT8C,EAAYhJ,MAAK,SAAA6D,GAAK,mBAAcA,IAAMA,EAAE9C,MAAQoJ,EAA9B,eACtBnB,EAAYhJ,MAAK,SAAA6D,GAAK,mBAASA,KAAOsG,EAAMjF,OAASrB,EAAE2G,OAASL,EAAMjF,OAASrB,EAAzD,YAG5B,EAAAkY,eAAiB,SAACJ,EAAenf,GAC/B,GAAKmf,EAIL,OAAOA,EAAQ3c,SAAW,IAAaiH,QAAU,EAAK0W,aAAahB,EAASnf,GACxEmf,OACAlf,GAGN,EAAAwf,gBAAkB,SAACD,EAAsBxf,GACvC,OAAOwf,EAAarY,QAAO,SAAAwY,GAAQ,SAAKQ,aAAaR,EAAlB,OAGrC,EAAAQ,aAAe,SAACR,EAA4C3f,GAC1D,GAAIA,EAAY,CACd,GAAI,YAAaA,GACf,OAAS2f,EAAKjW,cAAgBiW,EAAKjX,QAAW1I,EAAWgO,OAAS2R,EAAKjX,OAEzE,GAAI,YAAc1I,GAChB,OAAOA,EAAWuE,MAAQob,EAAKjW,YAEjC,GAAI,YAAS1J,GACX,OAAOA,EAAWgO,OAAS2R,EAAKjX,OAGpC,OAAQiX,EAAKjX,SAAWiX,EAAKjW,aAG/B,EAAAuV,uBAAyB,SAACzS,EAA2BtM,GACnDsM,EAAYoN,SAAQ,SAAA5Z,GACdA,EAAWwC,QACb,EAAKhB,MAAM4e,qBACTpgB,EACAE,EAAUqE,IACVvE,EAAWwC,OAAO6d,uBAM1B,EAAAC,sBAAwB,SAACC,GACnB,EAAK9e,SACP,EAAKM,UAAS,SAAAH,GACZ,OAAIA,EAAM1B,UAED,CAAEA,UADS,SAAqB0B,EAAM1B,WAAcqgB,IAGtD,SAKb,EAAAC,qBAAuB,WACjB,EAAK/e,SAAW,EAAKG,MAAM1B,WAC7B,EAAK0e,cAAc,EAAKhd,MAAM1B,WAAW4B,MACvC,SAAC,G,IAAE9B,EAAU,aAAEwM,EAAW,cACpB,EAAK/K,SACP,EAAKM,SAAS,CAAE/B,WAAU,EAAEwM,YAAW,OAG3C,gBAKN,EAAAiU,qBAAuB,WACb,IAAAvgB,EAAc,EAAK0B,MAAV,eACC3B,IAAdC,GACF,EAAKggB,cAAchgB,I,EAsDzB,OAtTwC,QAKtC,YAAA+B,kBAAA,WACEC,KAAKT,SAAU,EACfS,KAAK+d,kBAGP,YAAA9d,mBAAA,SAAmB0W,GAEfA,EAAUjQ,SAAS+E,MAAMnJ,KAAOtC,KAAKV,MAAMoH,SAAS+E,MAAMnJ,IAC1DqU,EAAUjQ,SAAS+E,MAAMjF,SAAWxG,KAAKV,MAAMoH,SAAS+E,MAAMjF,QAC9DmQ,EAAUjQ,SAAS+E,MAAMjE,cAAgBxH,KAAKV,MAAMoH,SAAS+E,MAAMjE,aAEnExH,KAAK+d,kBAIT,YAAA3d,qBAAA,WACEJ,KAAKT,SAAU,EACfgR,OAAOqN,aAAa5d,KAAK6d,mBAQ3B,YAAAE,eAAA,sBACQ,EAAmC/d,KAAKV,MAAMoH,SAAS+E,MAArDjF,EAAM,SAAMnE,EAAG,KAAEmF,EAAW,cACpCxH,KAAKH,SAAS,CAAE2E,SAAS,IAYzB+S,QAAQC,IAAI,CACV,YAAuB,CAAExZ,UAAWqE,EAAKmE,OAAM,EAAEgB,YAAW,IAC5D,YAAiB,CAAExJ,UAAWqE,EAAKmE,OAAM,EAAEgB,YAAW,MAErD5H,MAAK,SAAC,G,IAAC4e,EAAG,KAAIxgB,EAAS,eAChBygB,EAAyB,EAAKhC,aAAY,SAAM+B,GAAQxgB,IAc9D,OANE,EAAKsB,MAAMoH,SAASM,SAAS0X,MAAM,cACnC,YAAgBD,EAAuB1f,YAEvC,EAAKO,MAAM2M,OAAO0S,QAAQ,YAAgB3gB,EAAUqE,MAG/Coc,KA7BK,SAAC9Z,GACX,EAAKpF,UACHoF,GAAgC,MAApBA,EAASrE,OACvB,EAAKhB,MAAMsf,qBAAqB,EAAKtf,MAAM2M,QAE3C,EAAKpM,SAAS,CAAE7B,eAAWD,EAAWyG,SAAS,QA0BlD5E,KAAKI,KAAK0c,eACV9c,MACC,SAAC,G,IAAE9B,EAAU,aAAEwM,EAAW,cAAEtM,EAAS,YAC/B,EAAKuB,UACP,EAAKM,SAAS,CACZ/B,WAAU,EACVwM,YAAW,EACXtM,UAAS,EACTwG,SAAS,IAEX,EAAKwY,YAAYhf,GACjB,EAAKggB,cAAchgB,EAAWF,OAGlC,gBAqLN,YAAAuC,OAAA,WACQ,MAAyBL,KAAKN,MAA5B1B,EAAS,YAAEwG,EAAO,UAE1B,IAAKA,IAAYxG,EACf,OAAO,gBAACqH,EAA0B,MAGpC,GAAIrH,aAAS,EAATA,EAAW6gB,cACb,OAAO,gBAACC,EAAA,EAA8B,CAAC9gB,UAAWA,IAG9C,MAAuEgC,KAAKN,MAA1E5B,EAAU,aAAEwM,EAAW,cAAE3E,EAAW,cAAE0B,EAAS,YAAE8V,EAAe,kBAClE/V,EAAe+V,GAAmBA,EAAgBlT,OAAS,EAEjE,OACE,2BACGjM,IAAc,CAAC,MAAO,OAAO+N,SAAS/N,EAAUe,YAC/C,gBAACgd,GAAY,CACXzR,YAAaA,EACbtM,UAAWA,EACX6J,kBAAmB/J,EACnB6H,YAAaA,EACbwB,wBAAyBxB,GAAe3F,KAAKie,aAAatY,EAAa7H,GACvEsJ,aAAcA,EACdC,UAAWA,EACXmT,kBAAmBxa,KAAKoe,sBACxBhQ,iBAAkBpO,KAAKue,qBACvBtQ,SAAUjO,KAAKN,MAAMuO,WAGxBzJ,EACC,uBAAK1F,UAAU,qBACb,qBAAGA,UAAU,aAGf,gBAACjB,EAAA,EAAiBkhB,SAAQ,CAAC/a,MAAO,CAAElG,WAAU,EAAEE,UAAS,IACtD,eAAmBgC,KAAKV,MAAMqT,SAAU,CACvC7U,WAAU,EACVwM,YAAW,EACXtM,UAAS,EACToJ,aAAY,EACZC,UAAS,EACT2X,iBAAkBhf,KAAKse,qBACvB9D,kBAAmBxa,KAAKoe,2BAOtC,EAtTA,CAAwC,iBAwTlC,GAAqB,CAAEF,qBAAoB,IAAEU,qBAAoB,KAExD,iBAAAjX,EAAA,GAAW,YAAQ,KAAM,GAAd,CAAkC,M,iCC1X5D,iFA+Bc,SAAUoO,EAAYzW,GAC1B,IAGJ2f,EAHIjJ,EAA+B1W,EAAtB,UAAE4f,EAAoB5f,EAAd,OAAE2W,EAAY3W,EAAL,QAC5B6f,EAAa,SAA6B,MAShD,OALEF,EADEG,MAAMC,QAAQpJ,GACDA,EAAQhR,QAAO,SAAAqa,GAAQ,iCAAiBhF,KAAKtE,EAAY,IAAM,WAE/DC,EAIf,uBAAKnX,UAAW,EAAW,yDAA0D,KACnF,uBAAKA,UAAU,SAASoK,IAAKiW,GAC1BF,IAEDC,GAAU,gBAAC,kBAAe,CAACzI,UAAWwI,O,oBC/C9C,IAAIhhB,EAAM,EAAQ,KACFC,EAAU,EAAQ,KAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,iCCpBjB,oGAiCc,SAAUgK,EAAqBlJ,GACnC,IAAAR,EAAqCQ,EAA5B,UAAEpB,EAA0BoB,EAAnB,QAAEmJ,EAAiBnJ,EAAZ,MAAEwE,EAAUxE,EAAL,MAExC,OACE,gBAAC,IAAW,CACVR,UAAWA,EACXG,QACE,uBAAKH,UAAU,oCACZgF,GACC,uBAAKhF,UAAU,iBACb,8BAASgF,IAIZ5F,GAAW,yBAAIA,GAEfuK,GACC,gCACE,sBAAI3J,UAAU,qCAEb2J,EAAMrG,KAAI,SAAC,G,IAAEsB,EAAI,OAAEgF,EAAK,QAAEC,EAAO,UAAO,OACvC,uBAAK7J,UAAU,uBAAuBuD,IAAKqG,GACxCC,EACC,gBAAC,IAAI,CAACnD,GAAI9B,GACR,4BAAOgF,IAGT,qBACE5J,UAAU,4CACV4E,KAAMA,EACNE,IAAI,sBACJC,OAAO,UACN,mBAASH,IAAS,gBAAC,IAAU,CAAC6E,KAAM,GAAIzJ,UAAU,iBACnD,4BAAO4J,WAStBpJ,EAAMqT,Y,qHCxCC,SAAU4M,EAAkBjgB,GAChC,IAAA2J,EAAgD3J,EAA1C,OAAEkgB,EAAwClgB,EAAlC,OAAEmgB,EAAgCngB,EAAxB,SAAEogB,EAAsBpgB,EAAf,QAAE0J,EAAa1J,EAAL,SAC7CqgB,EAAU,WAAM,OAAArgB,EAAMqgB,QAAN,IAChB7gB,EAAY,EAAW,CAAEmK,OAAM,EAAEwW,SAAQ,IACzC/W,EAAQpJ,EAAMsgB,YAAYF,GAEhC,OACE,sBAAIG,QAASF,EAASG,YAAaH,GACjC,gBAAC,IAAQ,CACPle,QAASqL,QAAQ9D,GACjBlK,UAAWA,EACX2gB,SAAUA,EACVnd,GAAIod,EACJnd,QAASjD,EAAMygB,gBACdP,EACC,qCACiB,oBAAU,sBAAqB,KAAK9W,EACnD5J,UAAU,sBACV,uCAAmB,EAAMA,UAAU,uBAAqB,KAGvD4J,GAGH,wBAAM5J,UAAU,sBAAsB4J,K,wgBCAhD,cAaE,WAAYpJ,GAAZ,MACE,YAAMA,IAAM,K,OAXd,EAAAC,SAAU,EA2DV,EAAAygB,mBAAqB,SAAChX,EAAmBiX,GACnCjX,EACF,EAAKkX,aAAaD,GAElB,EAAKE,eAAeF,IAIxB,EAAAzU,mBAAqB,SAACxH,GACpB,EAAKoc,cAAe,EAAK9gB,MAA2B+gB,oBAAoBrc,KAG1E,EAAAsc,mBAAqB,SAACZ,GACpB,EAAK7f,UAAS,SAACM,EAAWb,GACxB,MAAO,CAAEihB,UAAW,EAAKC,eAAelhB,EAAOa,GAAWqQ,QAAQkP,QAItE,EAAAe,eAAiB,SAACC,GAChB,OAAQA,EAAItV,SACV,KAAK,GACHsV,EAAI1F,kBACJ0F,EAAIzd,iBACJ,EAAKpD,SAAS,EAAK8gB,mBACnB,MACF,KAAK,GACHD,EAAI1F,kBACJ0F,EAAIzd,iBACJ,EAAKpD,SAAS,EAAK+gB,uBACnB,MACF,KAAK,GACL,KAAK,GACHF,EAAI1F,kBACJ,MACF,KAAK,GACC,EAAKtb,MAAM6gB,WAAa,GAC1B,EAAKM,aAAa,EAAKL,eAAe,EAAKlhB,MAAO,EAAKI,OAAO,EAAKA,MAAM6gB,cAMjF,EAAAH,cAAgB,SAAC3U,GACf,EAAK5L,SAAS,CAAE0gB,UAAW,EAAG/b,SAAS,EAAMiH,MAAK,IAClD,EAAKnM,MAAM6Z,SAAS1N,GAAO7L,KAAK,EAAKkhB,YAAa,EAAKA,cAGzD,EAAAZ,aAAe,SAACD,GACV,EAAKc,aAAad,EAAM,EAAK3gB,QAC/B,EAAK8gB,cAAc,IAErB,EAAK9gB,MAAMyJ,SAASkX,IAGtB,EAAAE,eAAiB,SAACF,GAAiB,SAAK3gB,MAAMoa,WAAX,IAEnC,EAAAqH,aAAe,SAACC,EAAc,G,IAAEC,EAAgB,mBAAEC,EAAQ,WACxD,OAAAF,EAAK/W,OAAS,IAAyC,IAApCgX,EAAiBzQ,QAAQwQ,KAA4C,IAA5BE,EAAS1Q,QAAQwQ,IAE/E,EAAAG,uBAAyB,SAAC7hB,GACxB,EAAKO,UAAS,SAACH,GACb,OAAIA,EAAM+L,MACD,CACLwV,iBAAkB3hB,EAAM8hB,eAAe1hB,EAAM+L,MAAOnM,EAAM2hB,mBAGrD,CAAEA,iBAAkB,EAAI3hB,EAAM2hB,uBAK3C,EAAAI,yBAA2B,SAAC/hB,GAC1B,EAAKO,UAAS,SAACH,GACb,OAAuB,IAAnBJ,EAAMua,SACD,CAAEyH,mBAAoB,IAAWhiB,EAAM4hB,SAAU5hB,EAAM2hB,mBACrD3hB,EAAMua,SAAWna,EAAMuhB,iBAAiBhX,OAC1C,CAAEqX,mBAAoB,IAEtB,CACLA,mBAAoB,IAAWhiB,EAAM4hB,SAAU5hB,EAAM2hB,kBAAkBM,MACrE,EACAjiB,EAAMua,SAAWna,EAAMuhB,iBAAiBhX,aAOlD,EAAAuW,eAAiB,SAAClhB,EAAcI,GAC9B,OAAI,EAAKqhB,aAAarhB,EAAM+L,MAAOnM,GACjC,EAAWI,EAAMuhB,iBAAqBvhB,EAAM4hB,mBAAkB,CAAE5hB,EAAM+L,QAEtE,EAAW/L,EAAMuhB,iBAAqBvhB,EAAM4hB,qBAIhD,EAAAE,iBAAmB,SAACC,GAAgB,SAAK5hB,SAAS,CAAE0gB,UAAhB,KAEpC,EAAAI,kBAAoB,SAACjhB,EAAcJ,GACzB,IAAAihB,EAAc7gB,EAAL,UACXgiB,EAAc,EAAKlB,eAAelhB,EAAOI,GAC/C,OAAI6gB,EAAY,GAAKA,GAAamB,EAAYzX,OAAS,EAC9C,CAAEsW,UAAW,GAEb,CAAEA,UAAWA,EAAY,IAIpC,EAAAK,sBAAwB,SAAClhB,EAAcJ,GAC7B,IAAAihB,EAAc7gB,EAAL,UACXgiB,EAAc,EAAKlB,eAAelhB,EAAOI,GAC/C,OAAI6gB,GAAa,EAER,CAAEA,UADOmB,EAAYzX,OAAS,GAG9B,CAAEsW,UAAWA,EAAY,IAIpC,EAAAO,YAAc,WACR,EAAKvhB,SACP,EAAKM,SAAS,CAAE2E,SAAS,KAI7B,EAAAqc,aAAe,SAACZ,IACqC,IAA/C,EAAK3gB,MAAM2hB,iBAAiBzQ,QAAQyP,GACtC,EAAKC,aAAaD,GAElB,EAAKE,eAAeF,IAhLtB,EAAKvgB,MAAQ,CACX6gB,UAAW,EACX/b,SAAS,EACTiH,MAAO,GACPwV,iBAAkB,GAClBK,mBAAoB,I,EAqP1B,OAzQyC,OAwBvC,YAAAvhB,kBAAA,WACEC,KAAKT,SAAU,EACfS,KAAKogB,cAAc,IACnBpgB,KAAKmhB,uBAAuBnhB,KAAKV,OACjCU,KAAKqhB,yBAAyBrhB,KAAKV,OAC/BU,KAAK2hB,WACP3hB,KAAK2hB,UAAUC,iBAAiB,UAAW5hB,KAAKygB,gBAAgB,IAIpE,YAAAoB,0BAAA,SAA0BC,GACxB,GACE9hB,KAAKV,MAAM4hB,WAAaY,EAAUZ,UAClClhB,KAAKV,MAAM2hB,mBAAqBa,EAAUb,iBAC1C,CACAjhB,KAAKmhB,uBAAuBW,GAC5B9hB,KAAKqhB,yBAAyBS,GAE9B,IAAMC,EAAgB/hB,KAAKwgB,eAAesB,EAAW9hB,KAAKN,OAAOuK,OAC7DjK,KAAKN,MAAM6gB,WAAawB,GAC1B/hB,KAAKH,SAAS,CAAE0gB,UAAWwB,EAAgB,MAKjD,YAAA9hB,mBAAA,WACMD,KAAKgiB,aACPhiB,KAAKgiB,YAAYC,SAIrB,YAAA7hB,qBAAA,WACEJ,KAAKT,SAAU,EACXS,KAAK2hB,WACP3hB,KAAK2hB,UAAUO,oBAAoB,UAAWliB,KAAKygB,iBAyIvD,YAAApgB,OAAA,sBACQ,EAAsEL,KAAKV,MAAzE,IAAA6iB,sBAAc,IAAG,GAAI,EAAE,IAAAC,wBAAgB,IAAG,GAAI,EAAE,IAAAC,kBAAU,IAAG,KAAE,EAC/DzC,EAAgB5f,KAAKV,MAAV,YACb,EAA6DU,KAAKN,MAAhE+L,EAAK,QAAE8U,EAAS,YAAEU,EAAgB,mBAAEK,EAAkB,qBACxDgB,EAAgBtiB,KAAKwgB,eAAexgB,KAAKV,MAAOU,KAAKN,OAAO6gB,GAC5DgC,EAAiBH,GAAoBpiB,KAAK+gB,aAAatV,EAAOzL,KAAKV,OACnEkjB,EAAuC,IAAxBxiB,KAAKV,MAAMua,SAC1B4I,EAAc,EAAW,OAAQ,CACrC,0BAA2BD,EAC3B,aAAcA,EACd,qBAAsBA,EACtB,wBAAyB1V,QAAQuV,KAGnC,OACE,uBAAKvjB,UAAU,eAAeoK,IAAK,SAAAwZ,GAAO,OAAC,EAAKf,UAAN,IACxC,uBAAK7iB,UAAU,eACb,gBAAC,IAAS,CACRwN,WAAW,EACXxN,UAAU,oBACV0F,QAASxE,KAAKN,MAAM8E,QACpB+H,SAAUvM,KAAKwL,mBACfiB,YAAazM,KAAKV,MAAMmN,YACxBzI,MAAOyH,KAGX,sBAAI3M,UAAW2jB,GACZxB,EAAiBhX,OAAS,GACzBgX,EAAiB7e,KAAI,SAAAsd,GAAW,OAC9B,gBAACH,EAAiB,CAChBtW,OAAQqZ,IAAkB5C,EAC1BA,QAASA,EACTrd,IAAKqd,EACLC,QAAS,EAAKW,mBACdP,eAAgB,EAAKC,mBACrBJ,YAAaA,EACb5W,UAR4B,OAWjCsY,EAAmBrX,OAAS,GAC3BqX,EAAmBlf,KAAI,SAAAsd,GAAW,OAChC,gBAACH,EAAiB,CAChBtW,OAAQqZ,IAAkB5C,EAC1BD,UAAW0C,EACXzC,QAASA,EACTrd,IAAKqd,EACLC,QAAS,EAAKW,mBACdP,eAAgB,EAAKC,mBACrBJ,YAR8B,OAWnC2C,GACC,gBAAChD,EAAiB,CAChBtW,OAAQqZ,IAAkB7W,EAC1B+T,QAAQ,EACRE,QAASjU,EACTpJ,IAAKoJ,EACLkU,QAAS3f,KAAKsgB,mBACdP,eAAgB/f,KAAKggB,mBACrBJ,YAAaA,KAGf2C,GAAkBtB,EAAiBhX,OAAS,GAAKqX,EAAmBrX,OAAS,GAC7E,sBAAInL,UAAU,eAAe,kCAAwB,mBAAoB2M,KAG5E4W,IAhQA,EAAAM,aAA6B,CAClCvB,eAAgB,SAAC3V,EAAewV,GAC9B,OAAAA,EAAiBhc,QAAO,SAAA+b,GAAQ,OAAAA,EAAKjV,SAAL,OAClC8N,SAAU,EACV+F,YAAa,SAACF,GAAoB,OAAAA,GAClCW,oBAAqB,SAACrc,GAAkB,OAAAA,IA+P5C,EAzQA,CAAyC,iBAApB,O,iCC3DrB,2GAgCc,SAAUiX,EAAS,G,IAAE,IAAAC,mBAAW,IAAG,GAAK,EAAEpc,EAAS,YAAEya,EAAI,OACrE,OACE,qCACc,kCAAwB,cAAeA,EAAKe,KAAK,OAC7Dxb,UAAW,EAAW,YAAaA,IACnC,gBAAC,IAAQ,CAACA,UAAU,gBACpB,uCAAmB,EAAMA,UAAU,4BAA4BgF,MAAOyV,EAAKe,KAAK,OAC7Ef,EAAKe,KAAK,OAEZY,GAAe,gBAAC,IAAY,CAACpc,UAAU,mB,qBCvC9CJ,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,mNAAoN,KAE7OD,EAAOK,QAAUA,G,iCCNjB,2HAyBM,SAAUkkB,EACd/f,GAEA,OAAO,kBAAQ,4BAA6BA,GAAMhC,MAAM,KAGpD,SAAUgiB,IACd,OAAO,kBAAQ,+BAA+BhiB,MAAM,KAGhD,SAAUiiB,IACd,OAAO,kBAAQ,4BAA4BjiB,MAAM,O,iCCpCnD,uEAiCc,SAAU+Y,EAAata,GACnC,OACE,gBAAC,IAAW,CACV4hB,SAAU5hB,EAAMia,KAChBM,SAAUva,EAAMua,SAChBV,SAAU7Z,EAAM6Z,SAChBpQ,SAAUzJ,EAAMyJ,SAChB2Q,WAAYpa,EAAMoa,WAClBjN,YAAa,oBAAU,0BACvBwU,iBAAkB3hB,EAAMga,aACxB+G,oBAAqB0C,IAKrB,SAAUA,EAAY/e,GAE1B,OAAOA,EAAM2H,cAAcgT,QAAQ,kBAAmB,M,iCC7BxD,0KAAO,IAAMqE,EAAW,CACtB1b,IAAK,UACL2b,mBAAoB,0BAGTC,EAAY,YAEZC,EAAW,CACtB7b,IAAK,UACL8b,cAAe,YASJC,EAAyB,CACpC/iB,OAAQ0iB,EAASC,mBACjBK,SAAUJ,EACVK,SAAUJ,EAAS7b,IACnBkc,oBAAgBzlB,EAChB0lB,mBAAe1lB,EACf0N,MAAO,IAKIiY,EAAiB,K,upBCpBhB,SAAUvb,EAAe,GAAE,IAAArK,EAAU,aAAKwB,EAAK,IAAtB,gBACrC,OAAI,YAAcxB,GACT,gBAAC,IAAe,KAAKwB,IAErB,gBAAC,IAAU,KAAKA,M,gXCZrBqkB,EAAiB,CAAC,WAAY,KAAM,QAAS,MAAO,WAGpD,SAAUC,EAAWrgB,GACzB,OAAOogB,EAAe5X,SAASxI,EAAKpC,MAGhC,SAAU0iB,EAAkCpb,GAC1C,MAAsB,IAAaA,EAAOmb,GAAzCE,EAAQ,KAAEC,EAAO,KACxB,SACK,IAAOD,GAAU,SAAAvgB,GAAQ,OAAAogB,EAAenT,QAAQjN,EAAvB,SACzB,IAAOwgB,GAAS,SAAAxgB,GAAQ,OAAAA,EAAKuI,MAAQvI,EAAKuI,KAAlB,kBAIzB,SAAUkY,EAAYzgB,GAC1B,OAAOqgB,EAAWrgB,GAAQ,oBAAU,gBAAiBA,EAAKpC,MAAQoC,EAAKuI,O,iCCtCzE,iOAuBM,SAAUmY,EAAYjiB,GAC1B,OAAO,kBAAQ,6BAA8B,CAAEA,QAAO,IAAIpC,MAAK,SAAAgB,GAAK,OAAAA,EAAA,WAAY,KAG5E,SAAUsjB,EAAgBliB,GAC9B,OAAO,kBAAQ,kCAAmC,CAAEA,QAAO,IAAIpC,MAC7D,SAAAgB,GAAK,OAAAA,EAAA,eACL,KAIE,SAAUujB,EAAathB,GAC3B,OAAO,eAAK,+BAAgCA,GAAMhC,MAAM,KAGpD,SAAUujB,EAAkBvhB,GAChC,OAAO,eAAK,oCAAqCA,GAAMhC,MAAM,KAGzD,SAAUwjB,EAAariB,EAAiB8J,GAC5C,OAAO,eAAK,+BAAgC,CAAE9J,QAAO,EAAE8J,KAAI,IAAIjL,MAAM,KAGjE,SAAUyjB,EAAuB7hB,EAAoB8hB,EAAoBC,GAC7E,OAAO,eAAK,0DAA2D,CACrExiB,QAASS,EACT+D,OAAQ+d,EACRvgB,MAAOwgB,IACN3jB,MAAM,O,4dCRE4jB,EAA+B,CAAEtjB,KAAM,YAEpD,yE,OACE,EAAA4B,YAAc,WACZ,EAAKzD,MAAMolB,YAAY,EAAKplB,MAAMgP,cAGpC,EAAAqW,YAAc,WACZ,EAAKrlB,MAAMolB,YAAYD,I,EAoC3B,OA1CoC,OASlC,YAAApkB,OAAA,WACQ,MAA+BL,KAAKV,MAAlCgP,EAAW,cAAEb,EAAW,cAEhC,IAAK,YAAWA,GACd,OAAO,KAGD,IAAAmX,EAAanX,EAAL,SACVoX,OAAyB9mB,IAAb6mB,GAA0BE,EAAeF,EAAUtW,GAC/DyI,EAAY8N,GAAaC,EAAexW,EAAamW,GACrDhM,EAAUoM,EACZ,oBAAU9N,EAAY,8BAAgC,oBACtD,oBAAU,kBAEd,OACE,gBAAC,IAAO,CAAC9X,QAASwZ,GACf1B,EACC,qCACc0B,EACZ3Z,UAAW,EAAW,uBAAwBkB,KAAKV,MAAMR,YACzD,gBAAC,IAAQ,CAACimB,OAAQF,KAGpB,gBAAC,aAAU,cACGpM,EACZ3Z,UAAW,EAAW,oBAAqB,oBAAqBkB,KAAKV,MAAMR,WAC3E6E,QAASkhB,EAAY7kB,KAAK2kB,YAAc3kB,KAAK+C,aAC7C,gBAAC,IAAQ,CAACgiB,OAAQF,OAM9B,EA1CA,CAAoC,iBAgD9B/I,EAAoC,CAAE4I,YAAW,KAIvD,SAASI,EAAe5f,EAAeC,GACrC,OACED,EAAE/D,OAASgE,EAAEhE,MACZ+D,EAAUsB,SAAYrB,EAAUqB,QAChCtB,EAAUlH,YAAemH,EAAUnH,UANzB,iBANS,SAAC0B,GAA6B,MAAC,CACrD+N,YAAa,yBAAe/N,MAKUoc,EAAzB,CAA6C/M,I,mmBCtEtDiW,EAAiB,CACrB,aACA,iBACA,qBACA,sBACA,mBACA,mBACA,kBACA,yBACA,0BACA,uBACA,uBACA,sBACA,cACA,kBACA,mBACA,wBACA,cACA,kBACA,OACA,WACA,kBACA,uBAGIC,EAA+C,CACnDC,mBAAoB,CAAEpV,SAAU,QAASqV,WAAY,WACrDC,uBAAwB,CAAEtV,SAAU,QAASqV,WAAY,WACzDE,oBAAqB,CAAEvV,SAAU,QAASqV,WAAY,YACtDG,wBAAyB,CAAExV,SAAU,QAASqV,WAAY,YAC1DI,iBAAkB,CAAEzV,SAAU,QAASqV,WAAY,SACnDK,qBAAsB,CAAE1V,SAAU,QAASqV,WAAY,SACvDM,iBAAkB,CAAE3V,SAAU,QAASqV,WAAY,SACnDO,qBAAsB,CAAE5V,SAAU,QAASqV,WAAY,SACvDQ,gBAAiB,CAAE7V,SAAU,QAASqV,WAAY,QAClDS,oBAAqB,CAAE9V,SAAU,QAASqV,WAAY,QACtDU,YAAa,CAAE/V,SAAU,QAASkI,SAAU,QAC5C8N,gBAAiB,CAAEhW,SAAU,QAASkI,SAAU,YAChD+N,iBAAkB,CAAEjW,SAAU,QAASkI,SAAU,aACjDgO,sBAAuB,CAAEC,YAAa,kBACtCC,YAAa,CAAEpW,SAAU,QAAS3N,MAAO,cACzCgkB,gBAAiB,CAAErW,SAAU,QAAS3N,MAAO,cAC7CikB,KAAM,CAAEtW,SAAU,QAAS3N,MAAO,OAClCkkB,SAAU,CAAEvW,SAAU,QAAS3N,MAAO,OACtCmkB,gBAAiB,CAAExW,SAAU,QAAS3N,MAAO,iBAC7CokB,oBAAqB,CAAEzW,SAAU,QAAS3N,MAAO,kBAYnD,yE,OACE,EAAAqkB,eAAiB,WACf,OAAsD,IAA/CxB,EAAexU,QAAQ,EAAKlR,MAAM+T,SAG3C,EAAAoT,mBAAqB,WACnB,IAAMnR,EAAM,KACN2P,EAAqB,EAAK3lB,MAAM+T,SAAW,CAAEvD,SAAU,UAO7D,OAJI,EAAKxQ,MAAMonB,kBACbpR,EAAOoR,iBAAkB,GAGpBpR,GAGT,EAAAzF,iBAAmB,WACjB,IAAM3Q,EAAM,YAAsB,EAAKI,MAAMtB,UAAS,OACjD,EAAKyoB,sBACL,YAAmB,EAAKnnB,MAAMxB,cAGnC,OACE,gBAAC,IAAI,CAACgB,UAAW,EAAKQ,MAAMR,UAAW0G,GAAItG,GACxC,EAAKI,MAAMqT,W,EAsBpB,OA/C2C,OA8BzC,YAAAtS,OAAA,WACE,GAAIL,KAAKwmB,iBACP,OAAOxmB,KAAK6P,mBAGd,IAAM3Q,EAAM,YAAyB,CACnCiP,aAAcnO,KAAKV,MAAMtB,UACzBqV,OAAQrT,KAAKV,MAAM+T,OACnBvV,WAAYkC,KAAKV,MAAMxB,WACvB6oB,UAAU,IAEZ,OACE,gBAAC,IAAI,CAAC7nB,UAAWkB,KAAKV,MAAMR,UAAW0G,GAAItG,GACxCc,KAAKV,MAAMqT,WAIpB,EA/CA,CAA2C,iB","file":"js/278.1613385090031.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface ComponentContextType {\n  branchLike: BranchLike | undefined;\n  component: T.Component | undefined;\n}\n\nexport const ComponentContext = React.createContext<ComponentContextType>({\n  branchLike: undefined,\n  component: undefined\n});\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./CodeSnippet.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".code-snippet{background:#e6e6e6;border-radius:3px}.code-snippet pre{padding:8px 16px;border-right:1px solid hsla(0,0%,78.4%,.5);overflow-y:hidden;overflow-x:auto}.code-snippet>button{height:auto;border:0;border-radius:0;background:transparent;padding:8px}.code-snippet>button:active,.code-snippet>button:focus,.code-snippet>button:hover{background-color:hsla(0,0%,78.4%,.5);color:#236a97}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface PrivacyBadgeContainerProps {\n  className?: string;\n  qualifier: string;\n  visibility: T.Visibility;\n}\n\nexport default function PrivacyBadgeContainer({\n  className,\n  qualifier,\n  visibility\n}: PrivacyBadgeContainerProps) {\n  if (visibility !== 'private') {\n    return null;\n  }\n\n  return (\n    <Tooltip overlay={translate('visibility', visibility, 'description', qualifier)}>\n      <div className={classNames('badge', className)}>{translate('visibility', visibility)}</div>\n    </Tooltip>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isWebUri } from 'valid-url';\n\nexport default function(url: string): boolean {\n  return /^(\\/|scm:)/.test(url) || !!isWebUri(url);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\n\nexport function getFavorites(): Promise<any> {\n  return getJSON('/api/favorites/search');\n}\n\nexport function addFavorite(component: string): Promise<void> {\n  return post('/api/favorites/add', { component });\n}\n\nexport function removeFavorite(component: string): Promise<void> {\n  return post('/api/favorites/remove', { component });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport FavoriteButton from 'sonar-ui-common/components/controls/FavoriteButton';\nimport { addFavorite, removeFavorite } from '../../api/favorites';\n\ninterface Props {\n  className?: string;\n  component: string;\n  favorite: boolean;\n  qualifier: string;\n  handleFavorite?: (component: string, isFavorite: boolean) => void;\n}\n\ninterface State {\n  favorite: boolean;\n}\n\nexport default class Favorite extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      favorite: props.favorite\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.favorite !== this.props.favorite) {\n      this.setState({ favorite: this.props.favorite });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  toggleFavorite = () => {\n    const newFavorite = !this.state.favorite;\n    const apiMethod = newFavorite ? addFavorite : removeFavorite;\n\n    return apiMethod(this.props.component).then(() => {\n      if (this.mounted) {\n        this.setState({ favorite: newFavorite }, () => {\n          if (this.props.handleFavorite) {\n            this.props.handleFavorite(this.props.component, newFavorite);\n          }\n        });\n      }\n    });\n  };\n\n  render() {\n    const { className, qualifier } = this.props;\n    const { favorite } = this.state;\n\n    return (\n      <FavoriteButton\n        className={className}\n        favorite={favorite}\n        qualifier={qualifier}\n        toggleFavorite={this.toggleFavorite}\n      />\n    );\n  }\n}\n/*  */\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { getBranchStatusByBranchLike, Store } from '../../store/rootReducer';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface ExposedProps {\n  branchLike: BranchLike;\n  component: string;\n}\n\ninterface BranchStatusProps {\n  status?: string;\n}\n\nexport function BranchStatus({ status }: BranchStatusProps) {\n  if (!status) {\n    return null;\n  }\n\n  return <Level level={status} small={true} />;\n}\n\nconst mapStateToProps = (state: Store, props: ExposedProps) => {\n  const { branchLike, component } = props;\n  const { status } = getBranchStatusByBranchLike(state, component, branchLike);\n  return { status };\n};\n\nexport default connect(mapStateToProps)(BranchStatus);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\ninterface RawDomain {\n  actions: T.WebApi.Action[];\n  deprecatedSince?: string;\n  description: string;\n  internal: boolean;\n  path: string;\n  since?: string;\n}\n\nexport function fetchWebApi(showInternal = true): Promise<RawDomain[]> {\n  return getJSON('/api/webservices/list', { include_internals: showInternal })\n    .then(r => r.webServices)\n    .catch(throwGlobalError);\n}\n\nexport function fetchResponseExample(domain: string, action: string): Promise<T.WebApi.Example> {\n  return getJSON('/api/webservices/response_example', { controller: domain, action }).catch(\n    throwGlobalError\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onAdd: (n: T.Notification) => void;\n  onRemove: (n: T.Notification) => void;\n  channels: string[];\n  checkboxId: (type: string, channel: string) => string;\n  project?: boolean;\n  types: string[];\n  notifications: T.Notification[];\n}\n\nexport default class NotificationsList extends React.PureComponent<Props> {\n  isEnabled(type: string, channel: string) {\n    return !!this.props.notifications.find(\n      notification => notification.type === type && notification.channel === channel\n    );\n  }\n\n  handleCheck(type: string, channel: string, checked: boolean) {\n    if (checked) {\n      this.props.onAdd({ type, channel });\n    } else {\n      this.props.onRemove({ type, channel });\n    }\n  }\n\n  getDispatcherLabel(dispatcher: string) {\n    const globalMessageKey = ['notification.dispatcher', dispatcher];\n    const projectMessageKey = [...globalMessageKey, 'project'];\n    const shouldUseProjectMessage = this.props.project && hasMessage(...projectMessageKey);\n    return shouldUseProjectMessage\n      ? translate(...projectMessageKey)\n      : translate(...globalMessageKey);\n  }\n\n  render() {\n    const { channels, checkboxId, types } = this.props;\n\n    return (\n      <tbody>\n        {types.map(type => (\n          <tr key={type}>\n            <td>{this.getDispatcherLabel(type)}</td>\n            {channels.map(channel => (\n              <td className=\"text-center\" key={channel}>\n                <Checkbox\n                  checked={this.isEnabled(type, channel)}\n                  id={checkboxId(type, channel)}\n                  onCheck={checked => this.handleCheck(type, channel, checked)}\n                />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getProjectLinks(projectKey: string): Promise<T.ProjectLink[]> {\n  return getJSON('/api/project_links/search', { projectKey }).then(r => r.links, throwGlobalError);\n}\n\nexport function deleteLink(linkId: string) {\n  return post('/api/project_links/delete', { id: linkId }).catch(throwGlobalError);\n}\n\nexport function createLink(data: {\n  name: string;\n  projectKey: string;\n  url: string;\n}): Promise<T.ProjectLink> {\n  return postJSON('/api/project_links/create', data).then(r => r.link, throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport ProjectLinkIcon from 'sonar-ui-common/components/icons/ProjectLinkIcon';\nimport { getLinkName } from '../../../../../../helpers/projectLinks';\nimport isValidUri from '../../../../../utils/isValidUri';\n\ninterface Props {\n  iconOnly?: boolean;\n  link: T.ProjectLink;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport default class MetaLink extends React.PureComponent<Props, State> {\n  state = { expanded: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState(({ expanded }) => ({ expanded: !expanded }));\n  };\n\n  handleCollapse = () => {\n    this.setState({ expanded: false });\n  };\n\n  handleSelect = (event: React.MouseEvent<HTMLInputElement>) => {\n    event.currentTarget.select();\n  };\n\n  render() {\n    const { iconOnly, link } = this.props;\n    const linkTitle = getLinkName(link);\n    const isValid = isValidUri(link.url);\n    return (\n      <li>\n        <a\n          className=\"link-with-icon\"\n          href={isValid ? link.url : undefined}\n          onClick={isValid ? undefined : this.handleClick}\n          rel=\"nofollow noreferrer noopener\"\n          target=\"_blank\"\n          title={linkTitle}>\n          <ProjectLinkIcon className=\"little-spacer-right\" type={link.type} />\n          {!iconOnly && linkTitle}\n        </a>\n        {this.state.expanded && (\n          <div className=\"little-spacer-top display-flex-center\">\n            <input\n              className=\"overview-key width-80\"\n              onClick={this.handleSelect}\n              readOnly={true}\n              type=\"text\"\n              value={link.url}\n            />\n            <ClearButton className=\"little-spacer-left\" onClick={this.handleCollapse} />\n          </div>\n        )}\n      </li>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNotifications(): Promise<{\n  channels: string[];\n  globalTypes: string[];\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}> {\n  return getJSON('/api/notifications/list').catch(throwGlobalError);\n}\n\nexport function addNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/add', data).catch(throwGlobalError);\n}\n\nexport function removeNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/remove', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniqWith } from 'lodash';\nimport * as React from 'react';\nimport { addNotification, getNotifications, removeNotification } from '../../api/notifications';\nimport { getWrappedDisplayName } from './utils';\n\ninterface State {\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}\n\nexport interface WithNotificationsProps {\n  addNotification: (added: T.Notification) => void;\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n  removeNotification: (removed: T.Notification) => void;\n}\n\nexport function withNotifications<P>(\n  WrappedComponent: React.ComponentType<P & WithNotificationsProps>\n) {\n  class Wrapper extends React.Component<P, State> {\n    mounted = false;\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withNotifications');\n\n    state: State = {\n      channels: [],\n      globalTypes: [],\n      loading: true,\n      notifications: [],\n      perProjectTypes: []\n    };\n\n    componentDidMount() {\n      this.mounted = true;\n      this.fetchNotifications();\n    }\n\n    componentWillUnmount() {\n      this.mounted = false;\n    }\n\n    fetchNotifications = () => {\n      getNotifications().then(\n        response => {\n          if (this.mounted) {\n            this.setState({\n              channels: response.channels,\n              globalTypes: response.globalTypes,\n              loading: false,\n              notifications: response.notifications,\n              perProjectTypes: response.perProjectTypes\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ loading: false });\n          }\n        }\n      );\n    };\n\n    addNotificationToState = (added: T.Notification) => {\n      this.setState(state => {\n        const notifications = uniqWith([...state.notifications, added], this.areNotificationsEqual);\n        return { notifications };\n      });\n    };\n\n    removeNotificationFromState = (removed: T.Notification) => {\n      this.setState(state => {\n        const notifications = state.notifications.filter(\n          notification => !this.areNotificationsEqual(notification, removed)\n        );\n        return { notifications };\n      });\n    };\n\n    addNotification = (added: T.Notification) => {\n      // optimistic update\n      this.addNotificationToState(added);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: added.channel, project: added.project, type: added.type };\n      addNotification(data).catch(() => {\n        this.removeNotificationFromState(added);\n      });\n    };\n\n    removeNotification = (removed: T.Notification) => {\n      // optimistic update\n      this.removeNotificationFromState(removed);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: removed.channel, project: removed.project, type: removed.type };\n      removeNotification(data).catch(() => {\n        this.addNotificationToState(removed);\n      });\n    };\n\n    areNotificationsEqual = (a: T.Notification, b: T.Notification) => {\n      return a.channel === b.channel && a.type === b.type && a.project === b.project;\n    };\n\n    render() {\n      const { channels, globalTypes, loading, notifications, perProjectTypes } = this.state;\n      return (\n        <WrappedComponent\n          {...this.props}\n          addNotification={this.addNotification}\n          channels={channels}\n          globalTypes={globalTypes}\n          loading={loading}\n          notifications={notifications}\n          perProjectTypes={perProjectTypes}\n          removeNotification={this.removeNotification}\n        />\n      );\n    }\n  }\n\n  return Wrapper;\n}\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./BranchLikeNavigation.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".branch-like-navigation-toggler-container .popup{min-width:430px;max-width:650px}.branch-like-navigation-menu .search-box-container{padding:8px}.branch-like-navigation-menu .search-box-container .search-box,.branch-like-navigation-menu .search-box-container .search-box-input{max-width:none!important}.branch-like-navigation-menu .item-list{padding-bottom:8px;max-height:300px;overflow-y:auto}.branch-like-navigation-menu .item{padding:4px 8px}.branch-like-navigation-menu .item.header{color:#777}.branch-like-navigation-menu .item:not(.header).active,.branch-like-navigation-menu .item:not(.header):hover{background-color:#f3f3f3;cursor:pointer}.branch-like-navigation-menu .hint-container{padding:8px;background-color:#f3f3f3;border-top:1px solid #e6e6e6}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./HeaderMeta.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".header-meta-warnings .alert{margin-bottom:0}.header-meta-warnings .alert-content{padding:6px 8px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./Menu.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".navbar-tabs>li>a.menu-button{color:#236a97}.navbar-tabs>li>a.menu-button:hover{color:#4b9fd5;border-bottom-color:transparent}.navbar-tabs>li>a.disabled-link,.navbar-tabs>li>a.disabled-link:hover{color:#b4b4b4;cursor:default;border-bottom-color:transparent}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./InfoDrawer.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".navbar-inner-with-notif .info-drawer{border-top:1px solid #e6e6e6}.info-drawer-pane{background-color:#fff;right:-380px;width:380px;transition:right .3s ease-in-out;border-left:1px solid #e6e6e6;box-sizing:border-box}.info-drawer-pane.open{right:0}.info-drawer{position:fixed;bottom:0;z-index:51}.info-drawer .close-button{position:absolute;top:0;right:0;background:#fff;padding:16px;z-index:2}.info-drawer .back-button{cursor:pointer}.info-drawer .back-button:hover{color:#4b9fd5}.info-drawer-page{position:absolute;top:0;bottom:0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".badges-list{display:flex;justify-content:space-around;justify-content:space-evenly;flex-wrap:nowrap}.button.badge-button{display:flex;justify-content:center;padding:8px;min-width:146px;height:116px;background-color:#f3f3f3;border:1px solid #e6e6e6;border-radius:3px;transition:all .3s ease}.button.badge-button:active,.button.badge-button:focus,.button.badge-button:hover{background-color:#f3f3f3;border-color:#4b9fd5;box-shadow:none}.button.badge-button.selected{background-color:#cae3f2;border-color:#236a97}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ProjectInformation.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".project-info-list>li{padding-left:1px;padding-bottom:4px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.project-info-tags{position:relative}.project-info-deleted-profile,.project-info-deprecated-rules{margin:4px -6px;padding:3px 6px!important;border:1px solid #f4b1b0;border-radius:3px;background-color:#f2dede}.project-info-deleted-profile a,.project-info-deprecated-rules a{color:#0e516f;border-color:darken(#cae3f2)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport default function ComponentContainerNotFound() {\n  return (\n    <>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('dashboard.project_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('dashboard.project_not_found.2')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isValidLicense } from '../../../../api/marketplace';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { Task } from '../../../../types/tasks';\n\ninterface Props {\n  appState: Pick<T.AppState, 'canAdmin'>;\n  currentTask?: Task;\n}\n\ninterface State {\n  isValidLicense?: boolean;\n  loading: boolean;\n}\n\nexport class ComponentNavLicenseNotif extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIsValidLicense();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchIsValidLicense = () => {\n    this.setState({ loading: true });\n    isValidLicense().then(\n      ({ isValidLicense }) => {\n        if (this.mounted) {\n          this.setState({ isValidLicense, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { currentTask } = this.props;\n    const { isValidLicense, loading } = this.state;\n\n    if (loading || !currentTask || !currentTask.errorType) {\n      return null;\n    }\n\n    if (isValidLicense && currentTask.errorType !== 'LICENSING_LOC') {\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {translateWithParameters(\n            'component_navigation.status.last_blocked_due_to_bad_license_X',\n            translate('qualifier', currentTask.componentQualifier || ComponentQualifier.Project)\n          )}\n        </Alert>\n      );\n    }\n\n    return (\n      <Alert display=\"banner\" variant=\"error\">\n        <span className=\"little-spacer-right\">{currentTask.errorMessage}</span>\n        {this.props.appState.canAdmin ? (\n          <Link to=\"/admin/extension/license/app\">\n            {translate('license.component_navigation.button', currentTask.errorType)}.\n          </Link>\n        ) : (\n          translate('please_contact_administrator')\n        )}\n      </Alert>\n    );\n  }\n}\n\nexport default withAppState(ComponentNavLicenseNotif);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link, WithRouterProps } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport { withRouter } from '../../../../components/hoc/withRouter';\nimport { getComponentBackgroundTaskUrl } from '../../../../helpers/urls';\nimport { Task, TaskStatuses } from '../../../../types/tasks';\nimport ComponentNavLicenseNotif from './ComponentNavLicenseNotif';\n\ninterface Props extends Pick<WithRouterProps, 'location'> {\n  component: T.Component;\n  currentTask?: Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n}\n\nexport class ComponentNavBgTaskNotif extends React.PureComponent<Props> {\n  renderMessage(messageKey: string, status?: string, branch?: string) {\n    const { component, currentTask, location } = this.props;\n    const backgroundTaskUrl = getComponentBackgroundTaskUrl(component.key, status);\n    const canSeeBackgroundTasks =\n      component.configuration && component.configuration.showBackgroundTasks;\n    const isOnBackgroundTaskPage = location.pathname === backgroundTaskUrl.pathname;\n\n    let type;\n    if (currentTask && hasMessage('background_task.type', currentTask.type)) {\n      messageKey += '_X';\n      type = translate('background_task.type', currentTask.type);\n    }\n\n    let url;\n    let stacktrace;\n    if (canSeeBackgroundTasks) {\n      messageKey += '.admin';\n\n      if (isOnBackgroundTaskPage) {\n        messageKey += '.help';\n        stacktrace = translate('background_tasks.show_stacktrace');\n      } else {\n        messageKey += '.link';\n        url = <Link to={backgroundTaskUrl}>{translate('background_tasks.page')}</Link>;\n      }\n    }\n\n    return (\n      <FormattedMessage\n        defaultMessage={translate(messageKey)}\n        id={messageKey}\n        values={{ branch, url, stacktrace, type }}\n      />\n    );\n  }\n\n  render() {\n    const { currentTask, currentTaskOnSameBranch, isInProgress, isPending } = this.props;\n    if (isInProgress) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.in_progress')}\n        </Alert>\n      );\n    } else if (isPending) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.pending', STATUSES.ALL)}\n        </Alert>\n      );\n    } else if (currentTask && currentTask.status === TaskStatuses.Failed) {\n      if (\n        currentTask.errorType &&\n        hasMessage('license.component_navigation.button', currentTask.errorType)\n      ) {\n        return <ComponentNavLicenseNotif currentTask={currentTask} />;\n      }\n      const branch =\n        currentTask.branch ||\n        `${currentTask.pullRequest}${\n          currentTask.pullRequestTitle ? ' - ' + currentTask.pullRequestTitle : ''\n        }`;\n      let message;\n      if (currentTaskOnSameBranch === false && branch) {\n        message = this.renderMessage(\n          'component_navigation.status.failed_branch',\n          undefined,\n          branch\n        );\n      } else {\n        message = this.renderMessage('component_navigation.status.failed');\n      }\n\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {message}\n        </Alert>\n      );\n    }\n    return null;\n  }\n}\n\nexport default withRouter(ComponentNavBgTaskNotif);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport PlusCircleIcon from 'sonar-ui-common/components/icons/PlusCircleIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DocumentationTooltip from '../../../../../components/common/DocumentationTooltip';\nimport BranchLikeIcon from '../../../../../components/icons/BranchLikeIcon';\nimport { getBranchLikeDisplayName } from '../../../../../helpers/branch-like';\nimport { getApplicationAdminUrl } from '../../../../../helpers/urls';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport { colors } from '../../../../theme';\n\nexport interface CurrentBranchLikeProps {\n  branchesEnabled: boolean;\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  hasManyBranches: boolean;\n}\n\nexport function CurrentBranchLike(props: CurrentBranchLikeProps) {\n  const {\n    branchesEnabled,\n    component,\n    component: { configuration },\n    currentBranchLike,\n    hasManyBranches\n  } = props;\n\n  const displayName = getBranchLikeDisplayName(currentBranchLike);\n  const isApplication = component.qualifier === ComponentQualifier.Application;\n  const canAdminComponent = configuration && configuration.showSettings;\n\n  const additionalIcon = () => {\n    const plusIcon = <PlusCircleIcon fill={colors.blue} size={12} />;\n\n    if (branchesEnabled && hasManyBranches) {\n      return <DropdownIcon />;\n    }\n\n    if (isApplication) {\n      if (!hasManyBranches && canAdminComponent) {\n        return (\n          <HelpTooltip\n            overlay={\n              <>\n                <p>{translate('application.branches.help')}</p>\n                <hr className=\"spacer-top spacer-bottom\" />\n                <Link to={getApplicationAdminUrl(component.key)}>\n                  {translate('application.branches.link')}\n                </Link>\n              </>\n            }>\n            {plusIcon}\n          </HelpTooltip>\n        );\n      }\n    } else {\n      if (!branchesEnabled) {\n        return (\n          <DocumentationTooltip\n            content={translate('branch_like_navigation.no_branch_support.content')}\n            data-test=\"branches-support-disabled\"\n            links={[\n              {\n                href: 'https://redirect.sonarsource.com/editions/developer.html',\n                label: translate('learn_more')\n              }\n            ]}\n            title={translate('branch_like_navigation.no_branch_support.title')}>\n            {plusIcon}\n          </DocumentationTooltip>\n        );\n      }\n\n      if (!hasManyBranches) {\n        return (\n          <DocumentationTooltip\n            content={translate('branch_like_navigation.only_one_branch.content')}\n            data-test=\"only-one-branch-like\"\n            links={[\n              {\n                href: '/documentation/branches/overview/',\n                label: translate('branch_like_navigation.only_one_branch.documentation')\n              },\n              {\n                href: '/documentation/analysis/pull-request/',\n                label: translate('branch_like_navigation.only_one_branch.pr_analysis')\n              },\n              {\n                href: `/tutorials?id=${component.key}`,\n                label: translate('branch_like_navigation.tutorial_for_ci'),\n                inPlace: true\n              }\n            ]}\n            title={translate('branch_like_navigation.only_one_branch.title')}>\n            {plusIcon}\n          </DocumentationTooltip>\n        );\n      }\n    }\n\n    return null;\n  };\n\n  return (\n    <span className=\"display-flex-center flex-shrink text-ellipsis\">\n      <BranchLikeIcon branchLike={currentBranchLike} />\n      <span\n        className=\"spacer-left spacer-right flex-shrink text-ellipsis js-branch-like-name\"\n        title={displayName}>\n        {displayName}\n      </span>\n      {additionalIcon()}\n    </span>\n  );\n}\n\nexport default React.memo(CurrentBranchLike);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BranchStatus from '../../../../../components/common/BranchStatus';\nimport BranchLikeIcon from '../../../../../components/icons/BranchLikeIcon';\nimport { getBranchLikeDisplayName, isMainBranch } from '../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../types/branch-like';\n\nexport interface MenuItemProps {\n  branchLike: BranchLike;\n  component: T.Component;\n  indent?: boolean;\n  onSelect: (branchLike: BranchLike) => void;\n  selected: boolean;\n  setSelectedNode?: (node: HTMLLIElement) => void;\n}\n\nexport function MenuItem(props: MenuItemProps) {\n  const { branchLike, component, indent, setSelectedNode, onSelect, selected } = props;\n  const displayName = getBranchLikeDisplayName(branchLike);\n\n  return (\n    <li\n      className={classNames('item', {\n        active: selected\n      })}\n      onClick={() => onSelect(branchLike)}\n      ref={selected ? setSelectedNode : undefined}>\n      <div\n        className={classNames('display-flex-center display-flex-space-between', {\n          'big-spacer-left': indent\n        })}>\n        <div className=\"item-name text-ellipsis\" title={displayName}>\n          <BranchLikeIcon branchLike={branchLike} />\n          <span className=\"spacer-left\">{displayName}</span>\n          {isMainBranch(branchLike) && (\n            <span className=\"badge spacer-left\">{translate('branches.main_branch')}</span>\n          )}\n        </div>\n        <div className=\"spacer-left\">\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default React.memo(MenuItem);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { getBranchLikeKey, isSameBranchLike } from '../../../../../helpers/branch-like';\nimport { BranchLike, BranchLikeTree } from '../../../../../types/branch-like';\nimport MenuItem from './MenuItem';\n\nexport interface MenuItemListProps {\n  branchLikeTree: BranchLikeTree;\n  component: T.Component;\n  hasResults: boolean;\n  onSelect: (branchLike: BranchLike) => void;\n  selectedBranchLike: BranchLike | undefined;\n}\n\nexport function MenuItemList(props: MenuItemListProps) {\n  let listNode: HTMLUListElement | null = null;\n  let selectedNode: HTMLLIElement | null = null;\n\n  React.useEffect(() => {\n    if (listNode && selectedNode) {\n      scrollToElement(selectedNode, { parent: listNode, smooth: false });\n    }\n  });\n\n  const { branchLikeTree, component, hasResults, onSelect, selectedBranchLike } = props;\n\n  const renderItem = (branchLike: BranchLike, indent?: boolean) => (\n    <MenuItem\n      branchLike={branchLike}\n      component={component}\n      indent={indent}\n      key={getBranchLikeKey(branchLike)}\n      onSelect={onSelect}\n      selected={isSameBranchLike(branchLike, selectedBranchLike)}\n      setSelectedNode={node => (selectedNode = node)}\n    />\n  );\n\n  return (\n    <ul className=\"item-list\" ref={node => (listNode = node)}>\n      {!hasResults && (\n        <li className=\"item\">\n          <span className=\"note\">{translate('no_results')}</span>\n        </li>\n      )}\n\n      {/* BRANCHES & PR */}\n      {[branchLikeTree.mainBranchTree, ...branchLikeTree.branchTree].filter(isDefined).map(tree => (\n        <React.Fragment key={getBranchLikeKey(tree.branch)}>\n          {renderItem(tree.branch)}\n          {tree.pullRequests.length > 0 && (\n            <>\n              <li className=\"item header\">\n                <span className=\"big-spacer-left\">\n                  {translate('branch_like_navigation.pull_requests')}\n                </span>\n              </li>\n              {tree.pullRequests.map(pr => renderItem(pr, true))}\n            </>\n          )}\n          <hr />\n        </React.Fragment>\n      ))}\n\n      {/* PARENTLESS PR (for display during search) */}\n      {branchLikeTree.parentlessPullRequests.length > 0 && (\n        <>\n          <li className=\"item header\">{translate('branch_like_navigation.pull_requests')}</li>\n          {branchLikeTree.parentlessPullRequests.map(pr => renderItem(pr))}\n        </>\n      )}\n\n      {/* ORPHAN PR */}\n      {branchLikeTree.orphanPullRequests.length > 0 && (\n        <>\n          <li className=\"item header\">\n            {translate('branch_like_navigation.orphan_pull_requests')}\n            <HelpTooltip\n              className=\"little-spacer-left\"\n              overlay={translate('branch_like_navigation.orphan_pull_requests.tooltip')}\n            />\n          </li>\n          {branchLikeTree.orphanPullRequests.map(pr => renderItem(pr))}\n        </>\n      )}\n    </ul>\n  );\n}\n\nexport default React.memo(MenuItemList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { DropdownOverlay } from 'sonar-ui-common/components/controls/Dropdown';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { KeyCodes } from 'sonar-ui-common/helpers/keycodes';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Router, withRouter } from '../../../../../components/hoc/withRouter';\nimport {\n  getBrancheLikesAsTree,\n  isBranch,\n  isPullRequest,\n  isSameBranchLike\n} from '../../../../../helpers/branch-like';\nimport { getBranchLikeUrl } from '../../../../../helpers/urls';\nimport { BranchLike, BranchLikeTree } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport MenuItemList from './MenuItemList';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  canAdminComponent?: boolean;\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  onClose: () => void;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  branchLikesToDisplay: BranchLike[];\n  branchLikesToDisplayTree: BranchLikeTree;\n  query: string;\n  selectedBranchLike: BranchLike | undefined;\n}\n\nexport class Menu extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    let selectedBranchLike = undefined;\n\n    if (props.branchLikes.some(b => isSameBranchLike(b, props.currentBranchLike))) {\n      selectedBranchLike = props.currentBranchLike;\n    } else if (props.branchLikes.length > 0) {\n      selectedBranchLike = props.branchLikes[0];\n    }\n\n    this.state = {\n      query: '',\n      selectedBranchLike,\n      ...this.processBranchLikes(props.branchLikes)\n    };\n  }\n\n  processBranchLikes = (branchLikes: BranchLike[]) => {\n    const tree = getBrancheLikesAsTree(branchLikes);\n    return {\n      branchLikesToDisplay: [\n        ...(tree.mainBranchTree\n          ? [tree.mainBranchTree.branch, ...tree.mainBranchTree.pullRequests]\n          : []),\n        ...tree.branchTree.reduce((prev, t) => [...prev, t.branch, ...t.pullRequests], []),\n        ...tree.parentlessPullRequests,\n        ...tree.orphanPullRequests\n      ],\n      branchLikesToDisplayTree: tree\n    };\n  };\n\n  openHighlightedBranchLike = () => {\n    if (this.state.selectedBranchLike) {\n      this.handleOnSelect(this.state.selectedBranchLike);\n    }\n  };\n\n  highlightSiblingBranchlike = (indexDelta: number) => {\n    const selectBranchLikeIndex = this.state.branchLikesToDisplay.findIndex(b =>\n      isSameBranchLike(b, this.state.selectedBranchLike)\n    );\n    const newIndex = selectBranchLikeIndex + indexDelta;\n\n    if (\n      selectBranchLikeIndex !== -1 &&\n      newIndex >= 0 &&\n      newIndex < this.state.branchLikesToDisplay.length\n    ) {\n      this.setState(({ branchLikesToDisplay }) => ({\n        selectedBranchLike: branchLikesToDisplay[newIndex]\n      }));\n    }\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent) => {\n    switch (event.keyCode) {\n      case KeyCodes.Enter:\n        event.preventDefault();\n        this.openHighlightedBranchLike();\n        break;\n      case KeyCodes.UpArrow:\n        event.preventDefault();\n        this.highlightSiblingBranchlike(-1);\n        break;\n      case KeyCodes.DownArrow:\n        event.preventDefault();\n        this.highlightSiblingBranchlike(+1);\n        break;\n    }\n  };\n\n  handleSearchChange = (query: string) => {\n    const q = query.toLowerCase();\n\n    const filterBranch = (branch: BranchLike) =>\n      isBranch(branch) && branch.name.toLowerCase().includes(q);\n    const filterPullRequest = (pr: BranchLike) =>\n      isPullRequest(pr) && (pr.title.toLowerCase().includes(q) || pr.key.toLowerCase().includes(q));\n\n    const filteredBranchLikes = this.props.branchLikes.filter(\n      bl => filterBranch(bl) || filterPullRequest(bl)\n    );\n\n    this.setState({\n      query: q,\n      selectedBranchLike: filteredBranchLikes.length > 0 ? filteredBranchLikes[0] : undefined,\n      ...this.processBranchLikes(filteredBranchLikes)\n    });\n  };\n\n  handleOnSelect = (branchLike: BranchLike) => {\n    this.setState({ selectedBranchLike: branchLike }, () => {\n      this.props.onClose();\n      this.props.router.push(getBranchLikeUrl(this.props.component.key, branchLike));\n    });\n  };\n\n  render() {\n    const { canAdminComponent, component, onClose } = this.props;\n    const {\n      branchLikesToDisplay,\n      branchLikesToDisplayTree,\n      query,\n      selectedBranchLike\n    } = this.state;\n\n    const showManageLink = component.qualifier === ComponentQualifier.Project && canAdminComponent;\n    const hasResults = branchLikesToDisplay.length > 0;\n\n    return (\n      <DropdownOverlay className=\"branch-like-navigation-menu\" noPadding={true}>\n        <div className=\"search-box-container\">\n          <SearchBox\n            autoFocus={true}\n            onChange={this.handleSearchChange}\n            onKeyDown={this.handleKeyDown}\n            placeholder={translate('branch_like_navigation.search_for_branch_like')}\n            value={query}\n          />\n        </div>\n\n        <div className=\"item-list-container\">\n          <MenuItemList\n            branchLikeTree={branchLikesToDisplayTree}\n            component={component}\n            hasResults={hasResults}\n            onSelect={this.handleOnSelect}\n            selectedBranchLike={selectedBranchLike}\n          />\n        </div>\n\n        {showManageLink && (\n          <div className=\"hint-container text-right\">\n            <Link\n              onClick={() => onClose()}\n              to={{ pathname: '/project/branches', query: { id: component.key } }}>\n              {translate('branch_like_navigation.manage')}\n            </Link>\n          </div>\n        )}\n      </DropdownOverlay>\n    );\n  }\n}\n\nexport default withRouter(Menu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Toggler from 'sonar-ui-common/components/controls/Toggler';\nimport { withAppState } from '../../../../../components/hoc/withAppState';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport './BranchLikeNavigation.css';\nimport CurrentBranchLike from './CurrentBranchLike';\nimport Menu from './Menu';\n\nexport interface BranchLikeNavigationProps {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLikes: BranchLike[];\n  component: T.Component;\n  currentBranchLike: BranchLike;\n}\n\nexport function BranchLikeNavigation(props: BranchLikeNavigationProps) {\n  const {\n    appState: { branchesEnabled },\n    branchLikes,\n    component,\n    component: { configuration },\n    currentBranchLike\n  } = props;\n\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n  const canAdminComponent = configuration && configuration.showSettings;\n  const hasManyBranches = branchLikes.length >= 2;\n  const isMenuEnabled = branchesEnabled && hasManyBranches;\n\n  const currentBranchLikeElement = (\n    <CurrentBranchLike\n      branchesEnabled={Boolean(branchesEnabled)}\n      component={component}\n      currentBranchLike={currentBranchLike}\n      hasManyBranches={hasManyBranches}\n    />\n  );\n\n  return (\n    <span\n      className={classNames('big-spacer-left flex-0 branch-like-navigation-toggler-container', {\n        dropdown: isMenuEnabled\n      })}>\n      {isMenuEnabled ? (\n        <Toggler\n          onRequestClose={() => setIsMenuOpen(false)}\n          open={isMenuOpen}\n          overlay={\n            <Menu\n              branchLikes={branchLikes}\n              canAdminComponent={canAdminComponent}\n              component={component}\n              currentBranchLike={currentBranchLike}\n              onClose={() => setIsMenuOpen(false)}\n            />\n          }>\n          <a\n            className=\"link-base-color link-no-underline\"\n            href=\"#\"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}>\n            {currentBranchLikeElement}\n          </a>\n        </Toggler>\n      ) : (\n        currentBranchLikeElement\n      )}\n    </span>\n  );\n}\n\nexport default withAppState(React.memo(BranchLikeNavigation));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isPullRequest } from '../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../types/branch-like';\n\nexport interface CurrentBranchLikeMergeInformationProps {\n  currentBranchLike: BranchLike;\n}\n\nexport function CurrentBranchLikeMergeInformation(props: CurrentBranchLikeMergeInformationProps) {\n  const { currentBranchLike } = props;\n\n  if (!isPullRequest(currentBranchLike)) {\n    return null;\n  }\n\n  return (\n    <span className=\"big-spacer-left flex-shrink note text-ellipsis\">\n      <FormattedMessage\n        defaultMessage={translate('branch_like_navigation.for_merge_into_x_from_y')}\n        id=\"branch_like_navigation.for_merge_into_x_from_y\"\n        values={{\n          target: <strong>{currentBranchLike.target}</strong>,\n          branch: <strong>{currentBranchLike.branch}</strong>\n        }}\n      />\n    </span>\n  );\n}\n\nexport default React.memo(CurrentBranchLikeMergeInformation);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { last } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { isMainBranch } from '../../../../helpers/branch-like';\nimport { getComponentOverviewUrl } from '../../../../helpers/urls';\nimport { BranchLike } from '../../../../types/branch-like';\n\ninterface Props {\n  component: T.Component;\n  currentBranchLike: BranchLike | undefined;\n}\n\nexport function Breadcrumb(props: Props) {\n  const {\n    component: { breadcrumbs },\n    currentBranchLike\n  } = props;\n  const lastBreadcrumbElement = last(breadcrumbs);\n  const isNoMainBranch = currentBranchLike && !isMainBranch(currentBranchLike);\n\n  return (\n    <div className=\"big flex-shrink display-flex-center\">\n      {breadcrumbs.map((breadcrumbElement, i) => {\n        const isFirst = i === 0;\n        const isNotLast = i < breadcrumbs.length - 1;\n\n        return (\n          <span className=\"flex-shrink display-flex-center\" key={breadcrumbElement.key}>\n            {isFirst && lastBreadcrumbElement && (\n              <QualifierIcon className=\"spacer-right\" qualifier={lastBreadcrumbElement.qualifier} />\n            )}\n            {isNoMainBranch || isNotLast ? (\n              <Link\n                className=\"link-no-underline text-ellipsis\"\n                title={breadcrumbElement.name}\n                to={getComponentOverviewUrl(breadcrumbElement.key, breadcrumbElement.qualifier)}>\n                {breadcrumbElement.name}\n              </Link>\n            ) : (\n              <span className=\"text-ellipsis\" title={breadcrumbElement.name}>\n                {breadcrumbElement.name}\n              </span>\n            )}\n            {isNotLast && <span className=\"slash-separator\" />}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default React.memo(Breadcrumb);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport Favorite from '../../../../components/controls/Favorite';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport { BranchLike } from '../../../../types/branch-like';\nimport BranchLikeNavigation from './branch-like/BranchLikeNavigation';\nimport CurrentBranchLikeMergeInformation from './branch-like/CurrentBranchLikeMergeInformation';\nimport { Breadcrumb } from './Breadcrumb';\n\nexport interface HeaderProps {\n  branchLikes: BranchLike[];\n  component: T.Component;\n  currentBranchLike: BranchLike | undefined;\n  currentUser: T.CurrentUser;\n}\n\nexport function Header(props: HeaderProps) {\n  const { branchLikes, component, currentBranchLike, currentUser } = props;\n\n  return (\n    <>\n      <Helmet title={component.name} />\n      <header className=\"display-flex-center flex-shrink\">\n        <Breadcrumb component={component} currentBranchLike={currentBranchLike} />\n        {isLoggedIn(currentUser) && (\n          <Favorite\n            className=\"spacer-left\"\n            component={component.key}\n            favorite={Boolean(component.isFavorite)}\n            qualifier={component.qualifier}\n          />\n        )}\n        {currentBranchLike && (\n          <>\n            <BranchLikeNavigation\n              branchLikes={branchLikes}\n              component={component}\n              currentBranchLike={currentBranchLike}\n            />\n            <CurrentBranchLikeMergeInformation currentBranchLike={currentBranchLike} />\n          </>\n        )}\n      </header>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(React.memo(Header));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { TaskWarning } from '../../../../types/tasks';\n\nconst AnalysisWarningsModal = lazyLoadComponent(\n  () => import('../../../../components/common/AnalysisWarningsModal'),\n  'AnalysisWarningsModal'\n);\n\ninterface Props {\n  componentKey: string;\n  onWarningDismiss: () => void;\n  warnings: TaskWarning[];\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ComponentNavWarnings extends React.PureComponent<Props, State> {\n  state: State = { modal: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modal: false });\n  };\n\n  render() {\n    return (\n      <>\n        <Alert className=\"js-component-analysis-warnings flex-1\" display=\"inline\" variant=\"warning\">\n          <FormattedMessage\n            defaultMessage={translate('component_navigation.last_analysis_had_warnings')}\n            id=\"component_navigation.last_analysis_had_warnings\"\n            values={{\n              warnings: (\n                <a href=\"#\" onClick={this.handleClick}>\n                  <FormattedMessage\n                    defaultMessage={translate('component_navigation.x_warnings')}\n                    id=\"component_navigation.x_warnings\"\n                    values={{\n                      warningsCount: this.props.warnings.length\n                    }}\n                  />\n                </a>\n              )\n            }}\n          />\n        </Alert>\n        {this.state.modal && (\n          <AnalysisWarningsModal\n            componentKey={this.props.componentKey}\n            onClose={this.handleCloseModal}\n            onWarningDismiss={this.props.onWarningDismiss}\n            warnings={this.props.warnings}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport DateTimeFormatter from 'sonar-ui-common/components/intl/DateTimeFormatter';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BranchStatus from '../../../../components/common/BranchStatus';\nimport HomePageSelect from '../../../../components/controls/HomePageSelect';\nimport { isBranch, isPullRequest } from '../../../../helpers/branch-like';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { TaskWarning } from '../../../../types/tasks';\nimport ComponentNavWarnings from './ComponentNavWarnings';\nimport './HeaderMeta.css';\n\nexport interface HeaderMetaProps {\n  branchLike?: BranchLike;\n  currentUser: T.CurrentUser;\n  component: T.Component;\n  onWarningDismiss: () => void;\n  warnings: TaskWarning[];\n}\n\nexport function HeaderMeta(props: HeaderMetaProps) {\n  const { branchLike, component, currentUser, warnings } = props;\n\n  const isABranch = isBranch(branchLike);\n  const currentPage = getCurrentPage(component, branchLike);\n  const displayVersion = component.version !== undefined && isABranch;\n\n  return (\n    <>\n      <div className=\"display-flex-center flex-0 small\">\n        {warnings.length > 0 && (\n          <span className=\"header-meta-warnings\">\n            <ComponentNavWarnings\n              componentKey={component.key}\n              onWarningDismiss={props.onWarningDismiss}\n              warnings={warnings}\n            />\n          </span>\n        )}\n        {component.analysisDate && (\n          <span className=\"spacer-left nowrap note\">\n            <DateTimeFormatter date={component.analysisDate} />\n          </span>\n        )}\n        {displayVersion && (\n          <span className=\"spacer-left nowrap note\">{`${translate('version')} ${\n            component.version\n          }`}</span>\n        )}\n        {isLoggedIn(currentUser) && currentPage !== undefined && !isPullRequest(branchLike) && (\n          <HomePageSelect className=\"spacer-left\" currentPage={currentPage} />\n        )}\n      </div>\n      {isPullRequest(branchLike) && (\n        <div className=\"navbar-context-meta-secondary display-inline-flex-center\">\n          {branchLike.url !== undefined && (\n            <a\n              className=\"display-inline-flex-center big-spacer-right\"\n              href={branchLike.url}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('branches.see_the_pr')}\n              <DetachIcon className=\"little-spacer-left\" size={12} />\n            </a>\n          )}\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport function getCurrentPage(component: T.Component, branchLike: BranchLike | undefined) {\n  let currentPage: T.HomePage | undefined;\n\n  const branch = isBranch(branchLike) && !branchLike.isMain ? branchLike.name : undefined;\n\n  switch (component.qualifier) {\n    case ComponentQualifier.Portfolio:\n    case ComponentQualifier.SubPortfolio:\n      currentPage = { type: 'PORTFOLIO', component: component.key };\n      break;\n    case ComponentQualifier.Application:\n      currentPage = {\n        type: 'APPLICATION',\n        component: component.key,\n        branch\n      };\n      break;\n    case ComponentQualifier.Project:\n      // when home page is set to the default branch of a project, its name is returned as `undefined`\n      currentPage = {\n        type: 'PROJECT',\n        component: component.key,\n        branch\n      };\n      break;\n  }\n\n  return currentPage;\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(HeaderMeta);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Link, LinkProps } from 'react-router';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport BulletListIcon from 'sonar-ui-common/components/icons/BulletListIcon';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport NavBarTabs from 'sonar-ui-common/components/ui/NavBarTabs';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { getBranchLikeQuery, isPullRequest } from '../../../../helpers/branch-like';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { getPortfolioUrl, getProjectQueryUrl } from '../../../../helpers/urls';\nimport { BranchLike, BranchParameters } from '../../../../types/branch-like';\nimport { ComponentQualifier, isPortfolioLike } from '../../../../types/component';\nimport './Menu.css';\n\nconst SETTINGS_URLS = [\n  '/application/console',\n  '/project/admin',\n  '/project/baseline',\n  '/project/branches',\n  '/project/settings',\n  '/project/quality_profiles',\n  '/project/quality_gate',\n  '/custom_measures',\n  '/project/links',\n  '/project_roles',\n  '/project/history',\n  'background_tasks',\n  '/project/key',\n  '/project/deletion',\n  '/project/webhooks'\n];\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLike: BranchLike | undefined;\n  branchLikes: BranchLike[] | undefined;\n  component: T.Component;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  onToggleProjectInfo: () => void;\n}\n\ntype Query = BranchParameters & { id: string };\n\nfunction MenuLink({\n  hasAnalysis,\n  label,\n  ...props\n}: LinkProps & { hasAnalysis: boolean; label: React.ReactNode }) {\n  return hasAnalysis ? (\n    <Link {...props}>{label}</Link>\n  ) : (\n    <Tooltip overlay={translate('layout.must_be_configured')}>\n      <a aria-disabled=\"true\" className=\"disabled-link\">\n        {label}\n      </a>\n    </Tooltip>\n  );\n}\n\nexport class Menu extends React.PureComponent<Props> {\n  hasAnalysis = () => {\n    const { branchLikes = [], component, isInProgress, isPending } = this.props;\n    const hasBranches = branchLikes.length > 1;\n    return hasBranches || isInProgress || isPending || component.analysisDate !== undefined;\n  };\n\n  isProject = () => {\n    return this.props.component.qualifier === ComponentQualifier.Project;\n  };\n\n  isDeveloper = () => {\n    return this.props.component.qualifier === ComponentQualifier.Developper;\n  };\n\n  isPortfolio = () => {\n    const { qualifier } = this.props.component;\n    return isPortfolioLike(qualifier);\n  };\n\n  isApplication = () => {\n    return this.props.component.qualifier === ComponentQualifier.Application;\n  };\n\n  getConfiguration = () => {\n    return this.props.component.configuration || {};\n  };\n\n  getQuery = (): Query => {\n    return { id: this.props.component.key, ...getBranchLikeQuery(this.props.branchLike) };\n  };\n\n  renderDashboardLink = ({ id, ...branchLike }: Query, isPortfolio: boolean) => {\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={isPortfolio ? getPortfolioUrl(id) : getProjectQueryUrl(id, branchLike)}>\n          {translate('overview.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderCodeLink = (\n    hasAnalysis: boolean,\n    query: Query,\n    isApplication: boolean,\n    isPortfolio: boolean\n  ) => {\n    if (this.isDeveloper()) {\n      return null;\n    }\n\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={\n            isPortfolio || isApplication ? translate('view_projects.page') : translate('code.page')\n          }\n          to={{ pathname: '/code', query }}\n        />\n      </li>\n    );\n  };\n\n  renderActivityLink = (hasAnalysis: boolean, query: Query) => {\n    const { branchLike } = this.props;\n\n    if (isPullRequest(branchLike)) {\n      return null;\n    }\n\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('project_activity.page')}\n          to={{ pathname: '/project/activity', query }}\n        />\n      </li>\n    );\n  };\n\n  renderIssuesLink = (hasAnalysis: boolean, query: Query) => {\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('issues.page')}\n          to={{ pathname: '/project/issues', query: { ...query, resolved: 'false' } }}\n        />\n      </li>\n    );\n  };\n\n  renderComponentMeasuresLink = (hasAnalysis: boolean, query: Query) => {\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('layout.measures')}\n          to={{ pathname: '/component_measures', query }}\n        />\n      </li>\n    );\n  };\n\n  renderSecurityHotspotsLink = (hasAnalysis: boolean, query: Query, isPortfolio: boolean) => {\n    return (\n      !isPortfolio && (\n        <li>\n          <MenuLink\n            activeClassName=\"active\"\n            hasAnalysis={hasAnalysis}\n            label={translate('layout.security_hotspots')}\n            to={{ pathname: '/security_hotspots', query }}\n          />\n        </li>\n      )\n    );\n  };\n\n  renderSecurityReports = (hasAnalysis: boolean, query: Query) => {\n    const { branchLike, component } = this.props;\n    const { extensions = [] } = component;\n\n    if (isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const hasSecurityReportsEnabled = extensions.some(extension =>\n      extension.key.startsWith('securityreport/')\n    );\n\n    if (!hasSecurityReportsEnabled) {\n      return null;\n    }\n\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('layout.security_reports')}\n          to={{\n            pathname: '/project/extension/securityreport/securityreport',\n            query\n          }}\n        />\n      </li>\n    );\n  };\n\n  renderAdministration = (\n    query: Query,\n    isProject: boolean,\n    isApplication: boolean,\n    isPortfolio: boolean\n  ) => {\n    const { branchLike, component } = this.props;\n\n    if (!this.getConfiguration().showSettings || isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const isSettingsActive = SETTINGS_URLS.some(url => window.location.href.indexOf(url) !== -1);\n\n    const adminLinks = this.renderAdministrationLinks(query, isProject, isApplication, isPortfolio);\n    if (!adminLinks.some(link => link != null)) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"administration\"\n        overlay={<ul className=\"menu\">{adminLinks}</ul>}\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"menu\"\n            role=\"button\"\n            className={classNames('dropdown-toggle', { active: isSettingsActive || open })}\n            href=\"#\"\n            id=\"component-navigation-admin\"\n            onClick={onToggleClick}>\n            {hasMessage('layout.settings', component.qualifier)\n              ? translate('layout.settings', component.qualifier)\n              : translate('layout.settings')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  };\n\n  renderAdministrationLinks = (\n    query: Query,\n    isProject: boolean,\n    isApplication: boolean,\n    isPortfolio: boolean\n  ) => {\n    return [\n      this.renderSettingsLink(query, isApplication, isPortfolio),\n      this.renderBranchesLink(query, isProject),\n      this.renderBaselineLink(query, isApplication, isPortfolio),\n      this.renderConsoleAppLink(query, isApplication),\n      ...this.renderAdminExtensions(query, isApplication),\n      this.renderProfilesLink(query),\n      this.renderQualityGateLink(query),\n      this.renderCustomMeasuresLink(query),\n      this.renderLinksLink(query),\n      this.renderPermissionsLink(query),\n      this.renderBackgroundTasksLink(query),\n      this.renderUpdateKeyLink(query),\n      this.renderWebhooksLink(query, isProject),\n      this.renderDeletionLink(query)\n    ];\n  };\n\n  renderProjectInformationButton = (isProject: boolean, isApplication: boolean) => {\n    if (isPullRequest(this.props.branchLike)) {\n      return null;\n    }\n\n    return (\n      (isProject || isApplication) && (\n        <li>\n          <a\n            className=\"menu-button\"\n            onClick={(e: React.SyntheticEvent<HTMLAnchorElement>) => {\n              e.preventDefault();\n              e.currentTarget.blur();\n              this.props.onToggleProjectInfo();\n            }}\n            role=\"button\"\n            tabIndex={0}>\n            <BulletListIcon className=\"little-spacer-right\" />\n            {translate(isProject ? 'project' : 'application', 'info.title')}\n          </a>\n        </li>\n      )\n    );\n  };\n\n  renderSettingsLink = (query: Query, isApplication: boolean, isPortfolio: boolean) => {\n    if (!this.getConfiguration().showSettings || isApplication || isPortfolio) {\n      return null;\n    }\n    return (\n      <li key=\"settings\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/settings', query }}>\n          {translate('project_settings.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderBranchesLink = (query: Query, isProject: boolean) => {\n    if (\n      !this.props.appState.branchesEnabled ||\n      !isProject ||\n      !this.getConfiguration().showSettings\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"branches\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/branches', query }}>\n          {translate('project_branch_pull_request.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderBaselineLink = (query: Query, isApplication: boolean, isPortfolio: boolean) => {\n    if (!this.getConfiguration().showSettings || isApplication || isPortfolio) {\n      return null;\n    }\n    return (\n      <li key=\"baseline\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/baseline', query }}>\n          {translate('project_baseline.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderConsoleAppLink = (query: Query, isApplication: boolean) => {\n    if (!isApplication) {\n      return null;\n    }\n    return (\n      <li key=\"app-console\">\n        <Link activeClassName=\"active\" to={{ pathname: '/application/console', query }}>\n          {translate('application_console.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderProfilesLink = (query: Query) => {\n    if (!this.getConfiguration().showQualityProfiles) {\n      return null;\n    }\n    return (\n      <li key=\"profiles\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/quality_profiles', query }}>\n          {translate('project_quality_profiles.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderQualityGateLink = (query: Query) => {\n    if (!this.getConfiguration().showQualityGates) {\n      return null;\n    }\n    return (\n      <li key=\"quality_gate\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/quality_gate', query }}>\n          {translate('project_quality_gate.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderCustomMeasuresLink = (query: Query) => {\n    if (isSonarCloud() || !this.getConfiguration().showManualMeasures) {\n      return null;\n    }\n    return (\n      <li key=\"custom_measures\">\n        <Link activeClassName=\"active\" to={{ pathname: '/custom_measures', query }}>\n          {translate('custom_measures.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderLinksLink = (query: Query) => {\n    if (!this.getConfiguration().showLinks) {\n      return null;\n    }\n    return (\n      <li key=\"links\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/links', query }}>\n          {translate('project_links.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderPermissionsLink = (query: Query) => {\n    if (!this.getConfiguration().showPermissions) {\n      return null;\n    }\n    return (\n      <li key=\"permissions\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project_roles', query }}>\n          {translate('permissions.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderBackgroundTasksLink = (query: Query) => {\n    if (!this.getConfiguration().showBackgroundTasks) {\n      return null;\n    }\n    return (\n      <li key=\"background_tasks\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/background_tasks', query }}>\n          {translate('background_tasks.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderUpdateKeyLink = (query: Query) => {\n    if (!this.getConfiguration().showUpdateKey) {\n      return null;\n    }\n    return (\n      <li key=\"update_key\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/key', query }}>\n          {translate('update_key.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderWebhooksLink = (query: Query, isProject: boolean) => {\n    if (!this.getConfiguration().showSettings || !isProject) {\n      return null;\n    }\n    return (\n      <li key=\"webhooks\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/webhooks', query }}>\n          {translate('webhooks.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderDeletionLink = (query: Query) => {\n    const { qualifier } = this.props.component;\n\n    if (!this.getConfiguration().showSettings) {\n      return null;\n    }\n\n    if (\n      ![\n        ComponentQualifier.Project,\n        ComponentQualifier.Portfolio,\n        ComponentQualifier.Application\n      ].includes(qualifier as ComponentQualifier)\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"project_delete\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/deletion', query }}>\n          {translate('deletion.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderExtension = ({ key, name }: T.Extension, isAdmin: boolean, baseQuery: Query) => {\n    const pathname = isAdmin ? `/project/admin/extension/${key}` : `/project/extension/${key}`;\n    const query = { ...baseQuery, qualifier: this.props.component.qualifier };\n    return (\n      <li key={key}>\n        <Link activeClassName=\"active\" to={{ pathname, query }}>\n          {name}\n        </Link>\n      </li>\n    );\n  };\n\n  renderAdminExtensions = (query: Query, isApplication: boolean) => {\n    const extensions = this.getConfiguration().extensions || [];\n    return extensions\n      .filter(e => !isApplication || e.key !== 'governance/console')\n      .map(e => this.renderExtension(e, true, query));\n  };\n\n  renderExtensions = (query: Query) => {\n    const extensions = this.props.component.extensions || [];\n    const withoutSecurityExtension = extensions.filter(\n      extension => !extension.key.startsWith('securityreport/')\n    );\n\n    if (withoutSecurityExtension.length === 0) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"extensions\"\n        overlay={\n          <ul className=\"menu\">\n            {withoutSecurityExtension.map(e => this.renderExtension(e, false, query))}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"menu\"\n            role=\"button\"\n            className={classNames('dropdown-toggle', { active: open })}\n            href=\"#\"\n            id=\"component-navigation-more\"\n            onClick={onToggleClick}>\n            {translate('more')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  };\n\n  render() {\n    const isProject = this.isProject();\n    const isApplication = this.isApplication();\n    const isPortfolio = this.isPortfolio();\n    const hasAnalysis = this.hasAnalysis();\n    const query = this.getQuery();\n    return (\n      <div className=\"display-flex-center display-flex-space-between\">\n        <NavBarTabs>\n          {this.renderDashboardLink(query, isPortfolio)}\n          {this.renderIssuesLink(hasAnalysis, query)}\n          {this.renderSecurityHotspotsLink(hasAnalysis, query, isPortfolio)}\n          {this.renderSecurityReports(hasAnalysis, query)}\n          {this.renderComponentMeasuresLink(hasAnalysis, query)}\n          {this.renderCodeLink(hasAnalysis, query, isApplication, isPortfolio)}\n          {this.renderActivityLink(hasAnalysis, query)}\n          {this.renderExtensions(query)}\n        </NavBarTabs>\n        <NavBarTabs>\n          {this.renderAdministration(query, isProject, isApplication, isPortfolio)}\n          {this.renderProjectInformationButton(isProject, isApplication)}\n        </NavBarTabs>\n      </div>\n    );\n  }\n}\n\nexport default withAppState(Menu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport EscKeydownHandler from 'sonar-ui-common/components/controls/EscKeydownHandler';\nimport OutsideClickHandler from 'sonar-ui-common/components/controls/OutsideClickHandler';\nimport './InfoDrawer.css';\n\nexport interface InfoDrawerProps {\n  children: React.ReactNode;\n  displayed: boolean;\n  onClose: () => void;\n  top: number;\n}\n\nexport default function InfoDrawer(props: InfoDrawerProps) {\n  const { children, displayed, onClose, top } = props;\n\n  return (\n    <div\n      className={classNames('info-drawer info-drawer-pane', { open: displayed })}\n      style={{ top }}>\n      <div className=\"close-button\">\n        <ClearButton onClick={onClose} />\n      </div>\n      {displayed && (\n        <EscKeydownHandler onKeydown={onClose}>\n          <OutsideClickHandler onClickOutside={onClose}>\n            <div className=\"display-flex-column max-height-100\">{children}</div>\n          </OutsideClickHandler>\n        </EscKeydownHandler>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { stringify } from 'querystring';\nimport { getLocalizedMetricName } from 'sonar-ui-common/helpers/l10n';\nimport { omitNil } from 'sonar-ui-common/helpers/request';\nimport { getHostUrl, getPathUrlAsString } from 'sonar-ui-common/helpers/urls';\nimport { getProjectUrl } from '../../../../../../helpers/urls';\n\nexport type BadgeColors = 'white' | 'black' | 'orange';\nexport type BadgeFormats = 'md' | 'url';\n\nexport interface BadgeOptions {\n  branch?: string;\n  color?: BadgeColors;\n  format?: BadgeFormats;\n  project?: string;\n  metric?: string;\n  pullRequest?: string;\n}\n\nexport enum BadgeType {\n  measure = 'measure',\n  qualityGate = 'quality_gate',\n  marketing = 'marketing'\n}\n\nexport function getBadgeSnippet(type: BadgeType, options: BadgeOptions) {\n  const url = getBadgeUrl(type, options);\n  const { branch, format = 'md', metric = 'alert_status', project } = options;\n\n  if (format === 'url') {\n    return url;\n  } else {\n    let label;\n    let projectUrl;\n\n    switch (type) {\n      case BadgeType.marketing:\n        label = 'SonarCloud';\n        break;\n      case BadgeType.measure:\n        label = getLocalizedMetricName({ key: metric });\n        break;\n      case BadgeType.qualityGate:\n      default:\n        label = 'Quality gate';\n        break;\n    }\n\n    if (project) {\n      projectUrl = getPathUrlAsString(getProjectUrl(project, branch), false);\n    }\n\n    const mdImage = `![${label}](${url})`;\n    return projectUrl ? `[${mdImage}](${projectUrl})` : mdImage;\n  }\n}\n\nexport function getBadgeUrl(\n  type: BadgeType,\n  { branch, project, color = 'white', metric = 'alert_status', pullRequest }: BadgeOptions\n) {\n  switch (type) {\n    case BadgeType.marketing:\n      return `${getHostUrl()}/images/project_badges/sonarcloud-${color}.svg`;\n    case BadgeType.qualityGate:\n      return `${getHostUrl()}/api/project_badges/quality_gate?${stringify(\n        omitNil({ branch, project, pullRequest })\n      )}`;\n    case BadgeType.measure:\n    default:\n      return `${getHostUrl()}/api/project_badges/measure?${stringify(\n        omitNil({ branch, project, metric, pullRequest })\n      )}`;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BadgeType } from './utils';\n\ninterface Props {\n  onClick: (type: BadgeType) => void;\n  selected: boolean;\n  type: BadgeType;\n  url: string;\n}\n\nexport default class BadgeButton extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.onClick(this.props.type);\n  };\n\n  render() {\n    const { selected, type, url } = this.props;\n    const width = type !== BadgeType.measure ? '128px' : undefined;\n    return (\n      <Button className={classNames('badge-button', { selected })} onClick={this.handleClick}>\n        <img alt={translate('overview.badges', type, 'alt')} src={url} width={width} />\n      </Button>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport { fetchWebApi } from '../../../../../../api/web-api';\nimport { BadgeColors, BadgeFormats, BadgeOptions, BadgeType } from './utils';\n\ninterface Props {\n  className?: string;\n  metrics: T.Dict<T.Metric>;\n  options: BadgeOptions;\n  type: BadgeType;\n  updateOptions: (options: Partial<BadgeOptions>) => void;\n}\n\ninterface State {\n  badgeMetrics: string[];\n}\n\nexport default class BadgeParams extends React.PureComponent<Props> {\n  mounted = false;\n\n  state: State = { badgeMetrics: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchBadgeMetrics();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchBadgeMetrics() {\n    fetchWebApi(false).then(\n      webservices => {\n        if (this.mounted) {\n          const domain = webservices.find(d => d.path === 'api/project_badges');\n          const ws = domain && domain.actions.find(w => w.key === 'measure');\n          const param = ws && ws.params && ws.params.find(p => p.key === 'metric');\n          if (param && param.possibleValues) {\n            this.setState({ badgeMetrics: param.possibleValues });\n          }\n        }\n      },\n      () => {}\n    );\n  }\n\n  getColorOptions = () => {\n    return ['white', 'black', 'orange'].map(color => ({\n      label: translate('overview.badges.options.colors', color),\n      value: color\n    }));\n  };\n\n  getFormatOptions = () => {\n    return ['md', 'url'].map(format => ({\n      label: translate('overview.badges.options.formats', format),\n      value: format\n    }));\n  };\n\n  getMetricOptions = () => {\n    return this.state.badgeMetrics.map(key => {\n      const metric = this.props.metrics[key];\n      return {\n        value: key,\n        label: metric ? getLocalizedMetricName(metric) : key\n      };\n    });\n  };\n\n  handleColorChange = ({ value }: { value: BadgeColors }) => {\n    this.props.updateOptions({ color: value });\n  };\n\n  handleFormatChange = ({ value }: { value: BadgeFormats }) => {\n    this.props.updateOptions({ format: value });\n  };\n\n  handleMetricChange = ({ value }: { value: string }) => {\n    this.props.updateOptions({ metric: value });\n  };\n\n  renderBadgeType = (type: BadgeType, options: BadgeOptions) => {\n    if (type === BadgeType.marketing) {\n      return (\n        <>\n          <label className=\"spacer-right\" htmlFor=\"badge-color\">\n            {translate('color')}:\n          </label>\n          <Select\n            className=\"input-medium\"\n            clearable={false}\n            name=\"badge-color\"\n            onChange={this.handleColorChange}\n            options={this.getColorOptions()}\n            searchable={false}\n            value={options.color}\n          />\n        </>\n      );\n    } else if (type === BadgeType.measure) {\n      return (\n        <>\n          <label className=\"spacer-right\" htmlFor=\"badge-metric\">\n            {translate('overview.badges.metric')}:\n          </label>\n          <Select\n            className=\"input-medium\"\n            clearable={false}\n            menuStyle={{ maxHeight: 100 }}\n            name=\"badge-metric\"\n            onChange={this.handleMetricChange}\n            options={this.getMetricOptions()}\n            searchable={false}\n            value={options.metric}\n          />\n        </>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  render() {\n    const { className, options, type } = this.props;\n    return (\n      <div className={className}>\n        {this.renderBadgeType(type, options)}\n\n        <label\n          className={classNames('spacer-right', {\n            'spacer-top': type !== BadgeType.qualityGate\n          })}\n          htmlFor=\"badge-format\">\n          {translate('format')}:\n        </label>\n        <Select\n          className=\"input-medium\"\n          clearable={false}\n          name=\"badge-format\"\n          onChange={this.handleFormatChange}\n          options={this.getFormatOptions()}\n          searchable={false}\n          value={this.props.options.format || 'md'}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport CodeSnippet from '../../../../../../components/common/CodeSnippet';\nimport { getBranchLikeQuery } from '../../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../../types/branch-like';\nimport { MetricKey } from '../../../../../../types/metrics';\nimport BadgeButton from './BadgeButton';\nimport BadgeParams from './BadgeParams';\nimport './styles.css';\nimport { BadgeOptions, BadgeType, getBadgeSnippet, getBadgeUrl } from './utils';\n\ninterface Props {\n  branchLike?: BranchLike;\n  metrics: T.Dict<T.Metric>;\n  project: string;\n  qualifier: string;\n}\n\ninterface State {\n  selectedType: BadgeType;\n  badgeOptions: BadgeOptions;\n}\n\nexport default class ProjectBadges extends React.PureComponent<Props, State> {\n  state: State = {\n    selectedType: BadgeType.measure,\n    badgeOptions: { color: 'white', metric: MetricKey.alert_status }\n  };\n\n  handleSelectBadge = (selectedType: BadgeType) => {\n    this.setState({ selectedType });\n  };\n\n  handleUpdateOptions = (options: Partial<BadgeOptions>) => {\n    this.setState(state => ({ badgeOptions: { ...state.badgeOptions, ...options } }));\n  };\n\n  render() {\n    const { branchLike, project, qualifier } = this.props;\n    const { selectedType, badgeOptions } = this.state;\n    const fullBadgeOptions = { project, ...badgeOptions, ...getBranchLikeQuery(branchLike) };\n\n    return (\n      <div className=\"display-flex-column\">\n        <h3>{translate('overview.badges.get_badge', qualifier)}</h3>\n        <p className=\"big-spacer-bottom\">{translate('overview.badges.description', qualifier)}</p>\n        <BadgeButton\n          onClick={this.handleSelectBadge}\n          selected={BadgeType.measure === selectedType}\n          type={BadgeType.measure}\n          url={getBadgeUrl(BadgeType.measure, fullBadgeOptions)}\n        />\n        <p className=\"huge-spacer-bottom spacer-top\">\n          {translate('overview.badges', BadgeType.measure, 'description', qualifier)}\n        </p>\n        <BadgeButton\n          onClick={this.handleSelectBadge}\n          selected={BadgeType.qualityGate === selectedType}\n          type={BadgeType.qualityGate}\n          url={getBadgeUrl(BadgeType.qualityGate, fullBadgeOptions)}\n        />\n        <p className=\"huge-spacer-bottom spacer-top\">\n          {translate('overview.badges', BadgeType.qualityGate, 'description', qualifier)}\n        </p>\n        <BadgeParams\n          className=\"big-spacer-bottom display-flex-column\"\n          metrics={this.props.metrics}\n          options={badgeOptions}\n          type={selectedType}\n          updateOptions={this.handleUpdateOptions}\n        />\n        <CodeSnippet isOneLine={true} snippet={getBadgeSnippet(selectedType, fullBadgeOptions)} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport BackIcon from 'sonar-ui-common/components/icons/BackIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface InfoDrawerPageProps {\n  children: React.ReactNode;\n  displayed: boolean;\n  onPageChange: () => void;\n}\n\nexport default function InfoDrawerPage(props: InfoDrawerPageProps) {\n  const { children, displayed, onPageChange } = props;\n  return (\n    <div\n      className={classNames(\n        'info-drawer-page info-drawer-pane display-flex-column overflow-hidden',\n        {\n          open: displayed\n        }\n      )}>\n      <h2 className=\"back-button big-padded bordered-bottom\" onClick={() => onPageChange()}>\n        <BackIcon className=\"little-spacer-right\" />\n        {translate('back')}\n      </h2>\n\n      {displayed && <div className=\"overflow-y-auto big-padded\">{children}</div>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport NotificationsList from '../../../../../../apps/account/notifications/NotificationsList';\nimport {\n  withNotifications,\n  WithNotificationsProps\n} from '../../../../../../components/hoc/withNotifications';\n\ninterface Props {\n  component: T.Component;\n}\n\nexport function ProjectNotifications(props: WithNotificationsProps & Props) {\n  const { channels, component, loading, notifications, perProjectTypes } = props;\n\n  const handleAddNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.addNotification({ project: component.key, channel, type });\n  };\n\n  const handleRemoveNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.removeNotification({\n      project: component.key,\n      channel,\n      type\n    });\n  };\n\n  const getCheckboxId = (type: string, channel: string) => {\n    return `project-notification-${component.key}-${type}-${channel}`;\n  };\n\n  const projectNotifications = notifications.filter(n => n.project && n.project === component.key);\n\n  return (\n    <>\n      <h3>{translate('project.info.notifications')}</h3>\n\n      <Alert className=\"spacer-top\" variant=\"info\">\n        {translate('notification.dispatcher.information')}\n      </Alert>\n\n      <DeferredSpinner loading={loading}>\n        <table className=\"data zebra notifications-table\">\n          <thead>\n            <tr>\n              <th aria-label={translate('project')} />\n              {channels.map(channel => (\n                <th className=\"text-center\" key={channel}>\n                  <h4>{translate('notification.channel', channel)}</h4>\n                </th>\n              ))}\n            </tr>\n          </thead>\n\n          <NotificationsList\n            channels={channels}\n            checkboxId={getCheckboxId}\n            notifications={projectNotifications}\n            onAdd={handleAddNotification}\n            onRemove={handleRemoveNotification}\n            project={true}\n            types={perProjectTypes}\n          />\n        </table>\n      </DeferredSpinner>\n    </>\n  );\n}\n\nexport default withNotifications(ProjectNotifications);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum ProjectInformationPages {\n  main,\n  badges,\n  notifications\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\n\nexport interface DrawerLinkProps<P> {\n  label: string;\n  onPageChange: (page: P) => void;\n  to: P;\n}\n\nexport function DrawerLink<P>(props: DrawerLinkProps<P>) {\n  const { label, to } = props;\n\n  return (\n    <a\n      className=\"display-flex-space-between bordered-bottom big-padded\"\n      onClick={() => props.onPageChange(to)}\n      role=\"link\"\n      tabIndex={0}>\n      {label}\n      <ChevronRightIcon />\n    </a>\n  );\n}\n\nexport default React.memo(DrawerLink);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  componentKey: string;\n  qualifier: string;\n}\n\nexport default function MetaKey({ componentKey, qualifier }: Props) {\n  return (\n    <>\n      <h3>{translate('overview.project_key', qualifier)}</h3>\n      <div className=\"display-flex-center\">\n        <input className=\"overview-key\" readOnly={true} type=\"text\" value={componentKey} />\n        <ClipboardButton className=\"little-spacer-left\" copyValue={componentKey} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProjectLinks } from '../../../../../../api/projectLinks';\nimport { orderLinks } from '../../../../../../helpers/projectLinks';\nimport MetaLink from './MetaLink';\n\ninterface Props {\n  component: T.LightComponent;\n}\n\ninterface State {\n  links?: T.ProjectLink[];\n}\n\nexport default class MetaLinks extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadLinks();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component.key !== this.props.component.key) {\n      this.loadLinks();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadLinks = () =>\n    getProjectLinks(this.props.component.key).then(\n      links => {\n        if (this.mounted) {\n          this.setState({ links });\n        }\n      },\n      () => {}\n    );\n\n  render() {\n    const { links } = this.state;\n\n    if (!links || links.length === 0) {\n      return null;\n    }\n\n    const orderedLinks = orderLinks(links);\n\n    return (\n      <>\n        <div className=\"big-padded bordered-bottom\">\n          <h3>{translate('overview.external_links')}</h3>\n          <ul className=\"project-info-list\">\n            {orderedLinks.map(link => (\n              <MetaLink key={link.id} link={link} />\n            ))}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getQualityGateUrl } from '../../../../../../helpers/urls';\n\ninterface Props {\n  qualityGate: { isDefault?: boolean; key: string; name: string };\n}\n\nexport default function MetaQualityGate({ qualityGate }: Props) {\n  return (\n    <>\n      <h3>{translate('project.info.quality_gate')}</h3>\n\n      <ul className=\"project-info-list\">\n        <li>\n          {qualityGate.isDefault && (\n            <span className=\"note spacer-right\">({translate('default')})</span>\n          )}\n          <Link to={getQualityGateUrl(qualityGate.key)}>{qualityGate.name}</Link>\n        </li>\n      </ul>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { searchRules } from '../../../../../../api/rules';\nimport { getQualityProfileUrl } from '../../../../../../helpers/urls';\nimport { getLanguages, Store } from '../../../../../../store/rootReducer';\n\ninterface StateProps {\n  languages: T.Languages;\n}\n\ninterface OwnProps {\n  headerClassName?: string;\n  profiles: T.ComponentQualityProfile[];\n}\n\ninterface State {\n  deprecatedByKey: T.Dict<number>;\n}\n\nexport class MetaQualityProfiles extends React.PureComponent<StateProps & OwnProps, State> {\n  mounted = false;\n  state: State = { deprecatedByKey: {} };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadDeprecatedRules();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadDeprecatedRules() {\n    const existingProfiles = this.props.profiles.filter(p => !p.deleted);\n    const requests = existingProfiles.map(profile =>\n      this.loadDeprecatedRulesForProfile(profile.key)\n    );\n    Promise.all(requests).then(\n      responses => {\n        if (this.mounted) {\n          const deprecatedByKey: T.Dict<number> = {};\n          responses.forEach((count, i) => {\n            const profileKey = existingProfiles[i].key;\n            deprecatedByKey[profileKey] = count;\n          });\n          this.setState({ deprecatedByKey });\n        }\n      },\n      () => {}\n    );\n  }\n\n  loadDeprecatedRulesForProfile(profileKey: string) {\n    const data = {\n      activation: 'true',\n      ps: 1,\n      qprofile: profileKey,\n      statuses: 'DEPRECATED'\n    };\n    return searchRules(data).then(r => r.total);\n  }\n\n  getDeprecatedRulesCount(profile: { key: string }) {\n    const count = this.state.deprecatedByKey[profile.key];\n    return count || 0;\n  }\n\n  renderProfile(profile: T.ComponentQualityProfile) {\n    const languageFromStore = this.props.languages[profile.language];\n    const languageName = languageFromStore ? languageFromStore.name : profile.language;\n\n    const inner = (\n      <div className=\"text-ellipsis\">\n        <span className=\"note spacer-right\">({languageName})</span>\n        {profile.deleted ? (\n          profile.name\n        ) : (\n          <Link to={getQualityProfileUrl(profile.name, profile.language)}>{profile.name}</Link>\n        )}\n      </div>\n    );\n\n    if (profile.deleted) {\n      const tooltip = translateWithParameters('overview.deleted_profile', profile.name);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"project-info-deleted-profile\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    const count = this.getDeprecatedRulesCount(profile);\n\n    if (count > 0) {\n      const tooltip = translateWithParameters('overview.deprecated_profile', count);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"project-info-deprecated-rules\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    return <li key={profile.key}>{inner}</li>;\n  }\n\n  render() {\n    const { headerClassName, profiles } = this.props;\n\n    return (\n      <>\n        <h3 className={headerClassName}>{translate('overview.quality_profiles')}</h3>\n\n        <ul className=\"project-info-list\">\n          {profiles.map(profile => this.renderProfile(profile))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  languages: getLanguages(state)\n});\n\nexport default connect(mapStateToProps)(MetaQualityProfiles);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SizeRating from 'sonar-ui-common/components/ui/SizeRating';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure, localizeMetric } from 'sonar-ui-common/helpers/measures';\nimport DrilldownLink from '../../../../../../components/shared/DrilldownLink';\nimport { ComponentQualifier } from '../../../../../../types/component';\nimport { MetricKey } from '../../../../../../types/metrics';\n\nexport interface MetaSizeProps {\n  component: T.Component;\n  measures: T.Measure[];\n}\n\nexport default function MetaSize({ component, measures }: MetaSizeProps) {\n  const isApp = component.qualifier === ComponentQualifier.Application;\n  const ncloc = measures.find(measure => measure.metric === MetricKey.ncloc);\n  const projects = isApp\n    ? measures.find(measure => measure.metric === MetricKey.projects)\n    : undefined;\n\n  return (\n    <>\n      <h3>{localizeMetric(MetricKey.ncloc)}</h3>\n      <div className=\"display-flex-center\">\n        {ncloc ? (\n          <>\n            <DrilldownLink className=\"huge\" component={component.key} metric={MetricKey.ncloc}>\n              {formatMeasure(ncloc.value, 'SHORT_INT')}\n            </DrilldownLink>\n\n            <span className=\"spacer-left\">\n              <SizeRating value={Number(ncloc.value)} />\n            </span>\n          </>\n        ) : (\n          <span>0</span>\n        )}\n\n        {isApp && (\n          <span className=\"huge-spacer-left display-inline-flex-center\">\n            {projects ? (\n              <DrilldownLink component={component.key} metric={MetricKey.projects}>\n                <span className=\"big\">{formatMeasure(projects.value, 'SHORT_INT')}</span>\n              </DrilldownLink>\n            ) : (\n              <span className=\"big\">0</span>\n            )}\n            <span className=\"little-spacer-left text-muted\">\n              {translate('metric.projects.name')}\n            </span>\n          </span>\n        )}\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { difference, without } from 'lodash';\nimport * as React from 'react';\nimport { searchProjectTags } from '../../../../../../api/components';\nimport TagsSelector from '../../../../../../components/tags/TagsSelector';\n\ninterface Props {\n  project: string;\n  selectedTags: string[];\n  setProjectTags: (tags: string[]) => void;\n}\n\ninterface State {\n  searchResult: string[];\n}\n\nconst LIST_SIZE = 10;\n\nexport default class MetaTagsSelector extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { searchResult: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  onSearch = (query: string) => {\n    return searchProjectTags({\n      q: query,\n      ps: Math.min(this.props.selectedTags.length - 1 + LIST_SIZE, 100)\n    }).then(\n      ({ tags }) => {\n        if (this.mounted) {\n          this.setState({ searchResult: tags });\n        }\n      },\n      () => {}\n    );\n  };\n\n  onSelect = (tag: string) => {\n    this.props.setProjectTags([...this.props.selectedTags, tag]);\n  };\n\n  onUnselect = (tag: string) => {\n    this.props.setProjectTags(without(this.props.selectedTags, tag));\n  };\n\n  render() {\n    const availableTags = difference(this.state.searchResult, this.props.selectedTags);\n    return (\n      <TagsSelector\n        listSize={LIST_SIZE}\n        onSearch={this.onSearch}\n        onSelect={this.onSelect}\n        onUnselect={this.onUnselect}\n        selectedTags={this.props.selectedTags}\n        tags={availableTags}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport { PopupPlacement } from 'sonar-ui-common/components/ui/popups';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { setApplicationTags, setProjectTags } from '../../../../../../api/components';\nimport TagsList from '../../../../../../components/tags/TagsList';\nimport { ComponentQualifier } from '../../../../../../types/component';\nimport MetaTagsSelector from './MetaTagsSelector';\n\ninterface Props {\n  component: T.Component;\n  onComponentChange: (changes: {}) => void;\n}\n\nexport default class MetaTags extends React.PureComponent<Props> {\n  card?: HTMLDivElement | null;\n  tagsList?: HTMLElement | null;\n  tagsSelector?: HTMLDivElement | null;\n\n  canUpdateTags = () => {\n    const { configuration } = this.props.component;\n    return configuration && configuration.showSettings;\n  };\n\n  getPopupPos = (eltPos: ClientRect, containerPos: ClientRect) => ({\n    top: eltPos.height,\n    right: containerPos.width - eltPos.width\n  });\n\n  setTags = (values: string[]) => {\n    const { component } = this.props;\n\n    if (component.qualifier === ComponentQualifier.Application) {\n      return setApplicationTags({\n        application: component.key,\n        tags: values.join(',')\n      });\n    } else {\n      return setProjectTags({\n        project: component.key,\n        tags: values.join(',')\n      });\n    }\n  };\n\n  handleSetProjectTags = (values: string[]) => {\n    this.setTags(values).then(\n      () => this.props.onComponentChange({ tags: values }),\n      () => {}\n    );\n  };\n\n  render() {\n    const { key } = this.props.component;\n    const tags = this.props.component.tags || [];\n\n    if (this.canUpdateTags()) {\n      return (\n        <div className=\"big-spacer-top project-info-tags\" ref={card => (this.card = card)}>\n          <Dropdown\n            closeOnClick={false}\n            closeOnClickOutside={true}\n            overlay={\n              <MetaTagsSelector\n                project={key}\n                selectedTags={tags}\n                setProjectTags={this.handleSetProjectTags}\n              />\n            }\n            overlayPlacement={PopupPlacement.BottomLeft}>\n            <ButtonLink innerRef={tagsList => (this.tagsList = tagsList)} stopPropagation={true}>\n              <TagsList allowUpdate={true} tags={tags.length ? tags : [translate('no_tags')]} />\n            </ButtonLink>\n          </Dropdown>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"big-spacer-top project-info-tags\">\n          <TagsList\n            allowUpdate={false}\n            className=\"note\"\n            tags={tags.length ? tags : [translate('no_tags')]}\n          />\n        </div>\n      );\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport PrivacyBadgeContainer from '../../../../../components/common/PrivacyBadgeContainer';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport DrawerLink from './DrawerLink';\nimport MetaKey from './meta/MetaKey';\nimport MetaLinks from './meta/MetaLinks';\nimport MetaQualityGate from './meta/MetaQualityGate';\nimport MetaQualityProfiles from './meta/MetaQualityProfiles';\nimport MetaSize from './meta/MetaSize';\nimport MetaTags from './meta/MetaTags';\nimport { ProjectInformationPages } from './ProjectInformationPages';\n\nexport interface ProjectInformationRendererProps {\n  canConfigureNotifications: boolean;\n  canUseBadges: boolean;\n  component: T.Component;\n  measures?: T.Measure[];\n  onComponentChange: (changes: {}) => void;\n  onPageChange: (page: ProjectInformationPages) => void;\n}\n\nexport function ProjectInformationRenderer(props: ProjectInformationRendererProps) {\n  const { canConfigureNotifications, canUseBadges, component, measures = [] } = props;\n\n  const isApp = component.qualifier === ComponentQualifier.Application;\n\n  return (\n    <>\n      <div>\n        <h2 className=\"big-padded bordered-bottom\">\n          {translate(isApp ? 'application' : 'project', 'info.title')}\n        </h2>\n      </div>\n\n      <div className=\"overflow-y-auto\">\n        <div className=\"big-padded bordered-bottom\">\n          <div className=\"display-flex-center\">\n            <h3 className=\"spacer-right\">{translate('project.info.description')}</h3>\n            {component.visibility && (\n              <PrivacyBadgeContainer\n                qualifier={component.qualifier}\n                visibility={component.visibility}\n              />\n            )}\n          </div>\n\n          {component.description && (\n            <p className=\"it__project-description\">{component.description}</p>\n          )}\n\n          <MetaTags component={component} onComponentChange={props.onComponentChange} />\n        </div>\n\n        <div className=\"big-padded bordered-bottom it__project-loc-value\">\n          <MetaSize component={component} measures={measures} />\n        </div>\n\n        {!isApp &&\n          (component.qualityGate ||\n            (component.qualityProfiles && component.qualityProfiles.length > 0)) && (\n            <>\n              <div className=\"big-padded bordered-bottom\">\n                {component.qualityGate && <MetaQualityGate qualityGate={component.qualityGate} />}\n\n                {component.qualityProfiles && component.qualityProfiles.length > 0 && (\n                  <MetaQualityProfiles\n                    headerClassName={component.qualityGate ? 'big-spacer-top' : undefined}\n                    profiles={component.qualityProfiles}\n                  />\n                )}\n              </div>\n            </>\n          )}\n\n        {!isApp && <MetaLinks component={component} />}\n\n        <div className=\"big-padded bordered-bottom\">\n          <MetaKey componentKey={component.key} qualifier={component.qualifier} />\n        </div>\n\n        {canUseBadges && (\n          <DrawerLink\n            label={translate('overview.badges.get_badge', component.qualifier)}\n            onPageChange={props.onPageChange}\n            to={ProjectInformationPages.badges}\n          />\n        )}\n        {canConfigureNotifications && (\n          <DrawerLink\n            label={translate('project.info.to_notifications')}\n            onPageChange={props.onPageChange}\n            to={ProjectInformationPages.notifications}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(ProjectInformationRenderer);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getMeasures } from '../../../../../api/measures';\nimport { isLoggedIn } from '../../../../../helpers/users';\nimport { fetchMetrics } from '../../../../../store/rootActions';\nimport { getCurrentUser, getMetrics, Store } from '../../../../../store/rootReducer';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport { MetricKey } from '../../../../../types/metrics';\nimport ProjectBadges from './badges/ProjectBadges';\nimport InfoDrawerPage from './InfoDrawerPage';\nimport ProjectNotifications from './notifications/ProjectNotifications';\nimport './ProjectInformation.css';\nimport { ProjectInformationPages } from './ProjectInformationPages';\nimport ProjectInformationRenderer from './ProjectInformationRenderer';\n\ninterface Props {\n  branchLike?: BranchLike;\n  component: T.Component;\n  currentUser: T.CurrentUser;\n  fetchMetrics: () => void;\n  onComponentChange: (changes: {}) => void;\n  metrics: T.Dict<T.Metric>;\n}\n\ninterface State {\n  measures?: T.Measure[];\n  page: ProjectInformationPages;\n}\n\nexport class ProjectInformation extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    page: ProjectInformationPages.main\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.fetchMetrics();\n    this.loadMeasures();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  setPage = (page: ProjectInformationPages = ProjectInformationPages.main) => {\n    this.setState({ page });\n  };\n\n  loadMeasures = () => {\n    const {\n      component: { key }\n    } = this.props;\n\n    return getMeasures({\n      component: key,\n      metricKeys: [MetricKey.ncloc, MetricKey.projects].join()\n    }).then(measures => {\n      if (this.mounted) {\n        this.setState({ measures });\n      }\n    });\n  };\n\n  render() {\n    const { branchLike, component, currentUser, metrics } = this.props;\n    const { measures, page } = this.state;\n\n    const canConfigureNotifications =\n      isLoggedIn(currentUser) && component.qualifier === ComponentQualifier.Project;\n    const canUseBadges =\n      metrics !== undefined &&\n      component.visibility !== 'private' &&\n      (component.qualifier === ComponentQualifier.Application ||\n        component.qualifier === ComponentQualifier.Project);\n\n    return (\n      <>\n        <ProjectInformationRenderer\n          canConfigureNotifications={canConfigureNotifications}\n          canUseBadges={canUseBadges}\n          component={component}\n          measures={measures}\n          onComponentChange={this.props.onComponentChange}\n          onPageChange={this.setPage}\n        />\n        {canUseBadges && (\n          <InfoDrawerPage\n            displayed={page === ProjectInformationPages.badges}\n            onPageChange={this.setPage}>\n            <ProjectBadges\n              branchLike={branchLike}\n              metrics={metrics}\n              project={component.key}\n              qualifier={component.qualifier}\n            />\n          </InfoDrawerPage>\n        )}\n        {canConfigureNotifications && (\n          <InfoDrawerPage\n            displayed={page === ProjectInformationPages.notifications}\n            onPageChange={this.setPage}>\n            <ProjectNotifications component={component} />\n          </InfoDrawerPage>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchMetrics };\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state),\n  metrics: getMetrics(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectInformation);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ContextNavBar from 'sonar-ui-common/components/ui/ContextNavBar';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { Task, TaskStatuses, TaskWarning } from '../../../../types/tasks';\nimport { rawSizes } from '../../../theme';\nimport RecentHistory from '../../RecentHistory';\nimport ComponentNavBgTaskNotif from './ComponentNavBgTaskNotif';\nimport Header from './Header';\nimport HeaderMeta from './HeaderMeta';\nimport Menu from './Menu';\nimport InfoDrawer from './projectInformation/InfoDrawer';\nimport ProjectInformation from './projectInformation/ProjectInformation';\n\nexport interface ComponentNavProps {\n  branchLikes: BranchLike[];\n  currentBranchLike: BranchLike | undefined;\n  component: T.Component;\n  currentTask?: Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  onComponentChange: (changes: Partial<T.Component>) => void;\n  onWarningDismiss: () => void;\n  warnings: TaskWarning[];\n}\n\nexport default function ComponentNav(props: ComponentNavProps) {\n  const {\n    branchLikes,\n    component,\n    currentBranchLike,\n    currentTask,\n    currentTaskOnSameBranch,\n    isInProgress,\n    isPending,\n    warnings\n  } = props;\n  const { contextNavHeightRaw, globalNavHeightRaw } = rawSizes;\n\n  const [displayProjectInfo, setDisplayProjectInfo] = React.useState(false);\n\n  React.useEffect(() => {\n    const { breadcrumbs, key, name } = component;\n    const { qualifier } = breadcrumbs[breadcrumbs.length - 1];\n    if (\n      [\n        ComponentQualifier.Project,\n        ComponentQualifier.Portfolio,\n        ComponentQualifier.Application,\n        ComponentQualifier.Developper\n      ].includes(qualifier as ComponentQualifier)\n    ) {\n      RecentHistory.add(key, name, qualifier.toLowerCase());\n    }\n  }, [component, component.key]);\n\n  let notifComponent;\n  if (isInProgress || isPending || (currentTask && currentTask.status === TaskStatuses.Failed)) {\n    notifComponent = (\n      <ComponentNavBgTaskNotif\n        component={component}\n        currentTask={currentTask}\n        currentTaskOnSameBranch={currentTaskOnSameBranch}\n        isInProgress={isInProgress}\n        isPending={isPending}\n      />\n    );\n  }\n\n  const contextNavHeight = notifComponent ? contextNavHeightRaw + 30 : contextNavHeightRaw;\n\n  return (\n    <ContextNavBar height={contextNavHeight} id=\"context-navigation\" notif={notifComponent}>\n      <div\n        className={classNames('display-flex-center display-flex-space-between little-padded-top', {\n          'padded-bottom': warnings.length === 0\n        })}>\n        <Header\n          branchLikes={branchLikes}\n          component={component}\n          currentBranchLike={currentBranchLike}\n        />\n        <HeaderMeta\n          branchLike={currentBranchLike}\n          component={component}\n          onWarningDismiss={props.onWarningDismiss}\n          warnings={warnings}\n        />\n      </div>\n      <Menu\n        branchLike={currentBranchLike}\n        branchLikes={branchLikes}\n        component={component}\n        isInProgress={isInProgress}\n        isPending={isPending}\n        onToggleProjectInfo={() => setDisplayProjectInfo(!displayProjectInfo)}\n      />\n      <InfoDrawer\n        displayed={displayProjectInfo}\n        onClose={() => setDisplayProjectInfo(false)}\n        top={globalNavHeightRaw + contextNavHeightRaw}>\n        <ProjectInformation\n          branchLike={currentBranchLike}\n          component={component}\n          onComponentChange={props.onComponentChange}\n        />\n      </InfoDrawer>\n    </ContextNavBar>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { differenceBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getBranches, getPullRequests } from '../../api/branches';\nimport { getAnalysisStatus, getTasksForComponent } from '../../api/ce';\nimport { getComponentData } from '../../api/components';\nimport { getComponentNavigation } from '../../api/nav';\nimport { Location, Router, withRouter } from '../../components/hoc/withRouter';\nimport {\n  getBranchLikeQuery,\n  isBranch,\n  isMainBranch,\n  isPullRequest\n} from '../../helpers/branch-like';\nimport { getPortfolioUrl } from '../../helpers/urls';\nimport { registerBranchStatus, requireAuthorization } from '../../store/rootActions';\nimport { BranchLike } from '../../types/branch-like';\nimport { isPortfolioLike } from '../../types/component';\nimport { Task, TaskStatuses, TaskWarning } from '../../types/tasks';\nimport ComponentContainerNotFound from './ComponentContainerNotFound';\nimport { ComponentContext } from './ComponentContext';\nimport PageUnavailableDueToIndexation from './indexation/PageUnavailableDueToIndexation';\nimport ComponentNav from './nav/component/ComponentNav';\n\ninterface Props {\n  children: React.ReactElement;\n  location: Pick<Location, 'query' | 'pathname'>;\n  registerBranchStatus: (branchLike: BranchLike, component: string, status: T.Status) => void;\n  requireAuthorization: (router: Pick<Router, 'replace'>) => void;\n  router: Pick<Router, 'replace'>;\n}\n\ninterface State {\n  branchLike?: BranchLike;\n  branchLikes: BranchLike[];\n  component?: T.Component;\n  currentTask?: Task;\n  isPending: boolean;\n  loading: boolean;\n  tasksInProgress?: Task[];\n  warnings: TaskWarning[];\n}\n\nconst FETCH_STATUS_WAIT_TIME = 3000;\n\nexport class ComponentContainer extends React.PureComponent<Props, State> {\n  watchStatusTimer?: number;\n  mounted = false;\n  state: State = { branchLikes: [], isPending: false, loading: true, warnings: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchComponent();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.location.query.id !== this.props.location.query.id ||\n      prevProps.location.query.branch !== this.props.location.query.branch ||\n      prevProps.location.query.pullRequest !== this.props.location.query.pullRequest\n    ) {\n      this.fetchComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.clearTimeout(this.watchStatusTimer);\n  }\n\n  addQualifier = (component: T.Component) => ({\n    ...component,\n    qualifier: component.breadcrumbs[component.breadcrumbs.length - 1].qualifier\n  });\n\n  fetchComponent() {\n    const { branch, id: key, pullRequest } = this.props.location.query;\n    this.setState({ loading: true });\n\n    const onError = (response?: Response) => {\n      if (this.mounted) {\n        if (response && response.status === 403) {\n          this.props.requireAuthorization(this.props.router);\n        } else {\n          this.setState({ component: undefined, loading: false });\n        }\n      }\n    };\n\n    Promise.all([\n      getComponentNavigation({ component: key, branch, pullRequest }),\n      getComponentData({ component: key, branch, pullRequest })\n    ])\n      .then(([nav, { component }]) => {\n        const componentWithQualifier = this.addQualifier({ ...nav, ...component });\n\n        /*\n         * There used to be a redirect from /dashboard to /portfolio which caused issues.\n         * Links should be fixed to not rely on this redirect, but:\n         * This is a fail-safe in case there are still some faulty links remaining.\n         */\n        if (\n          this.props.location.pathname.match('dashboard') &&\n          isPortfolioLike(componentWithQualifier.qualifier)\n        ) {\n          this.props.router.replace(getPortfolioUrl(component.key));\n        }\n\n        return componentWithQualifier;\n      }, onError)\n      .then(this.fetchBranches)\n      .then(\n        ({ branchLike, branchLikes, component }) => {\n          if (this.mounted) {\n            this.setState({\n              branchLike,\n              branchLikes,\n              component,\n              loading: false\n            });\n            this.fetchStatus(component);\n            this.fetchWarnings(component, branchLike);\n          }\n        },\n        () => {}\n      );\n  }\n\n  fetchBranches = (\n    component: T.Component\n  ): Promise<{\n    branchLike?: BranchLike;\n    branchLikes: BranchLike[];\n    component: T.Component;\n  }> => {\n    const breadcrumb = component.breadcrumbs.find(({ qualifier }) => {\n      return ['APP', 'TRK'].includes(qualifier);\n    });\n\n    if (breadcrumb) {\n      const { key } = breadcrumb;\n      return Promise.all([\n        getBranches(key),\n        breadcrumb.qualifier === 'APP' ? Promise.resolve([]) : getPullRequests(key)\n      ]).then(([branches, pullRequests]) => {\n        const branchLikes = [...branches, ...pullRequests];\n        const branchLike = this.getCurrentBranchLike(branchLikes);\n\n        this.registerBranchStatuses(branchLikes, component);\n\n        return { branchLike, branchLikes, component };\n      });\n    } else {\n      return Promise.resolve({ branchLikes: [], component });\n    }\n  };\n\n  fetchStatus = (component: T.Component) => {\n    getTasksForComponent(component.key).then(\n      ({ current, queue }) => {\n        if (this.mounted) {\n          let shouldFetchComponent = false;\n          this.setState(\n            ({ branchLike, component, currentTask, tasksInProgress }) => {\n              const newCurrentTask = this.getCurrentTask(current, branchLike);\n              const pendingTasks = this.getPendingTasks(queue, branchLike);\n              const newTasksInProgress = pendingTasks.filter(\n                task => task.status === TaskStatuses.InProgress\n              );\n\n              const currentTaskChanged =\n                (!currentTask && newCurrentTask) ||\n                (currentTask && newCurrentTask && currentTask.id !== newCurrentTask.id);\n              const progressChanged =\n                tasksInProgress &&\n                (newTasksInProgress.length !== tasksInProgress.length ||\n                  differenceBy(newTasksInProgress, tasksInProgress, 'id').length > 0);\n\n              shouldFetchComponent = Boolean(currentTaskChanged || progressChanged);\n              if (\n                !shouldFetchComponent &&\n                component &&\n                (newTasksInProgress.length > 0 || !component.analysisDate)\n              ) {\n                // Refresh the status as long as there is tasks in progress or no analysis\n                window.clearTimeout(this.watchStatusTimer);\n                this.watchStatusTimer = window.setTimeout(\n                  () => this.fetchStatus(component),\n                  FETCH_STATUS_WAIT_TIME\n                );\n              }\n\n              const isPending = pendingTasks.some(task => task.status === TaskStatuses.Pending);\n              return {\n                currentTask: newCurrentTask,\n                isPending,\n                tasksInProgress: newTasksInProgress\n              };\n            },\n            () => {\n              if (shouldFetchComponent) {\n                this.fetchComponent();\n              }\n            }\n          );\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchWarnings = (component: T.Component, branchLike?: BranchLike) => {\n    if (component.qualifier === 'TRK') {\n      getAnalysisStatus({\n        component: component.key,\n        ...getBranchLikeQuery(branchLike)\n      }).then(\n        ({ component }) => {\n          this.setState({ warnings: component.warnings });\n        },\n        () => {}\n      );\n    }\n  };\n\n  getCurrentBranchLike = (branchLikes: BranchLike[]) => {\n    const { query } = this.props.location;\n    return query.pullRequest\n      ? branchLikes.find(b => isPullRequest(b) && b.key === query.pullRequest)\n      : branchLikes.find(b => isBranch(b) && (query.branch ? b.name === query.branch : b.isMain));\n  };\n\n  getCurrentTask = (current: Task, branchLike?: BranchLike) => {\n    if (!current) {\n      return undefined;\n    }\n\n    return current.status === TaskStatuses.Failed || this.isSameBranch(current, branchLike)\n      ? current\n      : undefined;\n  };\n\n  getPendingTasks = (pendingTasks: Task[], branchLike?: BranchLike) => {\n    return pendingTasks.filter(task => this.isSameBranch(task, branchLike));\n  };\n\n  isSameBranch = (task: Pick<Task, 'branch' | 'pullRequest'>, branchLike?: BranchLike) => {\n    if (branchLike) {\n      if (isMainBranch(branchLike)) {\n        return (!task.pullRequest && !task.branch) || branchLike.name === task.branch;\n      }\n      if (isPullRequest(branchLike)) {\n        return branchLike.key === task.pullRequest;\n      }\n      if (isBranch(branchLike)) {\n        return branchLike.name === task.branch;\n      }\n    }\n    return !task.branch && !task.pullRequest;\n  };\n\n  registerBranchStatuses = (branchLikes: BranchLike[], component: T.Component) => {\n    branchLikes.forEach(branchLike => {\n      if (branchLike.status) {\n        this.props.registerBranchStatus(\n          branchLike,\n          component.key,\n          branchLike.status.qualityGateStatus\n        );\n      }\n    });\n  };\n\n  handleComponentChange = (changes: Partial<T.Component>) => {\n    if (this.mounted) {\n      this.setState(state => {\n        if (state.component) {\n          const newComponent: T.Component = { ...state.component, ...changes };\n          return { component: newComponent };\n        }\n        return null;\n      });\n    }\n  };\n\n  handleBranchesChange = () => {\n    if (this.mounted && this.state.component) {\n      this.fetchBranches(this.state.component).then(\n        ({ branchLike, branchLikes }) => {\n          if (this.mounted) {\n            this.setState({ branchLike, branchLikes });\n          }\n        },\n        () => {}\n      );\n    }\n  };\n\n  handleWarningDismiss = () => {\n    const { component } = this.state;\n    if (component !== undefined) {\n      this.fetchWarnings(component);\n    }\n  };\n\n  render() {\n    const { component, loading } = this.state;\n\n    if (!loading && !component) {\n      return <ComponentContainerNotFound />;\n    }\n\n    if (component?.needIssueSync) {\n      return <PageUnavailableDueToIndexation component={component} />;\n    }\n\n    const { branchLike, branchLikes, currentTask, isPending, tasksInProgress } = this.state;\n    const isInProgress = tasksInProgress && tasksInProgress.length > 0;\n\n    return (\n      <div>\n        {component && !['FIL', 'UTS'].includes(component.qualifier) && (\n          <ComponentNav\n            branchLikes={branchLikes}\n            component={component}\n            currentBranchLike={branchLike}\n            currentTask={currentTask}\n            currentTaskOnSameBranch={currentTask && this.isSameBranch(currentTask, branchLike)}\n            isInProgress={isInProgress}\n            isPending={isPending}\n            onComponentChange={this.handleComponentChange}\n            onWarningDismiss={this.handleWarningDismiss}\n            warnings={this.state.warnings}\n          />\n        )}\n        {loading ? (\n          <div className=\"page page-limited\">\n            <i className=\"spinner\" />\n          </div>\n        ) : (\n          <ComponentContext.Provider value={{ branchLike, component }}>\n            {React.cloneElement(this.props.children, {\n              branchLike,\n              branchLikes,\n              component,\n              isInProgress,\n              isPending,\n              onBranchesChange: this.handleBranchesChange,\n              onComponentChange: this.handleComponentChange\n            })}\n          </ComponentContext.Provider>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { registerBranchStatus, requireAuthorization };\n\nexport default withRouter(connect(null, mapDispatchToProps)(ComponentContainer));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport './CodeSnippet.css';\n\nexport interface CodeSnippetProps {\n  isOneLine?: boolean;\n  noCopy?: boolean;\n  snippet: string | (string | undefined)[];\n}\n\nexport default function CodeSnippet(props: CodeSnippetProps) {\n  const { isOneLine, noCopy, snippet } = props;\n  const snippetRef = React.useRef<HTMLPreElement>(null);\n\n  let finalSnippet: string;\n  if (Array.isArray(snippet)) {\n    finalSnippet = snippet.filter(line => isDefined(line)).join(isOneLine ? ' ' : ' \\\\\\n  ');\n  } else {\n    finalSnippet = snippet;\n  }\n\n  return (\n    <div className={classNames('code-snippet spacer-top spacer-bottom display-flex-row', {})}>\n      <pre className=\"flex-1\" ref={snippetRef}>\n        {finalSnippet}\n      </pre>\n      {!noCopy && <ClipboardButton copyValue={finalSnippet} />}\n    </div>\n  );\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./TagsList.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport { isWebUri } from 'valid-url';\n\nexport interface DocumentationTooltipProps {\n  children?: React.ReactNode;\n  className?: string;\n  content?: React.ReactNode;\n  links?: Array<{ href: string; label: string; inPlace?: boolean }>;\n  title?: string;\n}\n\nexport default function DocumentationTooltip(props: DocumentationTooltipProps) {\n  const { className, content, links, title } = props;\n\n  return (\n    <HelpTooltip\n      className={className}\n      overlay={\n        <div className=\"big-padded-top big-padded-bottom\">\n          {title && (\n            <div className=\"spacer-bottom\">\n              <strong>{title}</strong>\n            </div>\n          )}\n\n          {content && <p>{content}</p>}\n\n          {links && (\n            <>\n              <hr className=\"big-spacer-top big-spacer-bottom\" />\n\n              {links.map(({ href, label, inPlace }) => (\n                <div className=\"little-spacer-bottom\" key={label}>\n                  {inPlace ? (\n                    <Link to={href}>\n                      <span>{label}</span>\n                    </Link>\n                  ) : (\n                    <a\n                      className=\"display-inline-flex-center link-with-icon\"\n                      href={href}\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\">\n                      {isWebUri(href) && <DetachIcon size={14} className=\"spacer-right\" />}\n                      <span>{label}</span>\n                    </a>\n                  )}\n                </div>\n              ))}\n            </>\n          )}\n        </div>\n      }>\n      {props.children}\n    </HelpTooltip>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface MultiSelectOptionProps {\n  active?: boolean;\n  custom?: boolean;\n  disabled?: boolean;\n  element: string;\n  onHover: (element: string) => void;\n  onSelectChange: (selected: boolean, element: string) => void;\n  renderLabel: (element: string) => React.ReactNode;\n  selected?: boolean;\n}\n\nexport default function MultiSelectOption(props: MultiSelectOptionProps) {\n  const { active, custom, disabled, element, selected } = props;\n  const onHover = () => props.onHover(element);\n  const className = classNames({ active, disabled });\n  const label = props.renderLabel(element);\n\n  return (\n    <li onFocus={onHover} onMouseOver={onHover}>\n      <Checkbox\n        checked={Boolean(selected)}\n        className={className}\n        disabled={disabled}\n        id={element}\n        onCheck={props.onSelectChange}>\n        {custom ? (\n          <span\n            aria-label={`${translate('create_new_element')}: ${label}`}\n            className=\"little-spacer-left\">\n            <span aria-hidden={true} className=\"little-spacer-right\">\n              +\n            </span>\n            {label}\n          </span>\n        ) : (\n          <span className=\"little-spacer-left\">{label}</span>\n        )}\n      </Checkbox>\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { difference } from 'lodash';\nimport * as React from 'react';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelectOption from './MultiSelectOption';\n\ninterface Props {\n  allowNewElements?: boolean;\n  allowSelection?: boolean;\n  elements: string[];\n  filterSelected?: (query: string, selectedElements: string[]) => string[];\n  footerNode?: React.ReactNode;\n  listSize?: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  placeholder: string;\n  renderLabel?: (element: string) => React.ReactNode;\n  selectedElements: string[];\n  validateSearchInput?: (value: string) => string;\n}\n\ninterface State {\n  activeIdx: number;\n  loading: boolean;\n  query: string;\n  selectedElements: string[];\n  unselectedElements: string[];\n}\n\ninterface DefaultProps {\n  filterSelected: (query: string, selectedElements: string[]) => string[];\n  listSize: number;\n  renderLabel: (element: string) => React.ReactNode;\n  validateSearchInput: (value: string) => string;\n}\n\ntype PropsWithDefault = Props & DefaultProps;\n\nexport default class MultiSelect extends React.PureComponent<Props, State> {\n  container?: HTMLDivElement | null;\n  searchInput?: HTMLInputElement | null;\n  mounted = false;\n\n  static defaultProps: DefaultProps = {\n    filterSelected: (query: string, selectedElements: string[]) =>\n      selectedElements.filter(elem => elem.includes(query)),\n    listSize: 0,\n    renderLabel: (element: string) => element,\n    validateSearchInput: (value: string) => value\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeIdx: 0,\n      loading: true,\n      query: '',\n      selectedElements: [],\n      unselectedElements: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.onSearchQuery('');\n    this.updateSelectedElements(this.props as PropsWithDefault);\n    this.updateUnselectedElements(this.props as PropsWithDefault);\n    if (this.container) {\n      this.container.addEventListener('keydown', this.handleKeyboard, true);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: PropsWithDefault) {\n    if (\n      this.props.elements !== nextProps.elements ||\n      this.props.selectedElements !== nextProps.selectedElements\n    ) {\n      this.updateSelectedElements(nextProps);\n      this.updateUnselectedElements(nextProps);\n\n      const totalElements = this.getAllElements(nextProps, this.state).length;\n      if (this.state.activeIdx >= totalElements) {\n        this.setState({ activeIdx: totalElements - 1 });\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.searchInput) {\n      this.searchInput.focus();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.container) {\n      this.container.removeEventListener('keydown', this.handleKeyboard);\n    }\n  }\n\n  handleSelectChange = (selected: boolean, item: string) => {\n    if (selected) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  handleSearchChange = (value: string) => {\n    this.onSearchQuery((this.props as PropsWithDefault).validateSearchInput(value));\n  };\n\n  handleElementHover = (element: string) => {\n    this.setState((prevState, props) => {\n      return { activeIdx: this.getAllElements(props, prevState).indexOf(element) };\n    });\n  };\n\n  handleKeyboard = (evt: KeyboardEvent) => {\n    switch (evt.keyCode) {\n      case 40: // down\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectNextElement);\n        break;\n      case 38: // up\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectPreviousElement);\n        break;\n      case 37: // left\n      case 39: // right\n        evt.stopPropagation();\n        break;\n      case 13: // enter\n        if (this.state.activeIdx >= 0) {\n          this.toggleSelect(this.getAllElements(this.props, this.state)[this.state.activeIdx]);\n        }\n        break;\n    }\n  };\n\n  onSearchQuery = (query: string) => {\n    this.setState({ activeIdx: 0, loading: true, query });\n    this.props.onSearch(query).then(this.stopLoading, this.stopLoading);\n  };\n\n  onSelectItem = (item: string) => {\n    if (this.isNewElement(item, this.props)) {\n      this.onSearchQuery('');\n    }\n    this.props.onSelect(item);\n  };\n\n  onUnselectItem = (item: string) => this.props.onUnselect(item);\n\n  isNewElement = (elem: string, { selectedElements, elements }: Props) =>\n    elem.length > 0 && selectedElements.indexOf(elem) === -1 && elements.indexOf(elem) === -1;\n\n  updateSelectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (state.query) {\n        return {\n          selectedElements: props.filterSelected(state.query, props.selectedElements)\n        };\n      } else {\n        return { selectedElements: [...props.selectedElements] };\n      }\n    });\n  };\n\n  updateUnselectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (props.listSize === 0) {\n        return { unselectedElements: difference(props.elements, props.selectedElements) };\n      } else if (props.listSize < state.selectedElements.length) {\n        return { unselectedElements: [] };\n      } else {\n        return {\n          unselectedElements: difference(props.elements, props.selectedElements).slice(\n            0,\n            props.listSize - state.selectedElements.length\n          )\n        };\n      }\n    });\n  };\n\n  getAllElements = (props: Props, state: State) => {\n    if (this.isNewElement(state.query, props)) {\n      return [...state.selectedElements, ...state.unselectedElements, state.query];\n    } else {\n      return [...state.selectedElements, ...state.unselectedElements];\n    }\n  };\n\n  setElementActive = (idx: number) => this.setState({ activeIdx: idx });\n\n  selectNextElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx < 0 || activeIdx >= allElements.length - 1) {\n      return { activeIdx: 0 };\n    } else {\n      return { activeIdx: activeIdx + 1 };\n    }\n  };\n\n  selectPreviousElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx <= 0) {\n      const lastIdx = allElements.length - 1;\n      return { activeIdx: lastIdx };\n    } else {\n      return { activeIdx: activeIdx - 1 };\n    }\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  toggleSelect = (item: string) => {\n    if (this.props.selectedElements.indexOf(item) === -1) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  render() {\n    const { allowSelection = true, allowNewElements = true, footerNode = '' } = this.props;\n    const { renderLabel } = this.props as PropsWithDefault;\n    const { query, activeIdx, selectedElements, unselectedElements } = this.state;\n    const activeElement = this.getAllElements(this.props, this.state)[activeIdx];\n    const showNewElement = allowNewElements && this.isNewElement(query, this.props);\n    const infiniteList = this.props.listSize === 0;\n    const listClasses = classNames('menu', {\n      'menu-vertically-limited': infiniteList,\n      'spacer-top': infiniteList,\n      'with-top-separator': infiniteList,\n      'with-bottom-separator': Boolean(footerNode)\n    });\n\n    return (\n      <div className=\"multi-select\" ref={div => (this.container = div)}>\n        <div className=\"menu-search\">\n          <SearchBox\n            autoFocus={true}\n            className=\"little-spacer-top\"\n            loading={this.state.loading}\n            onChange={this.handleSearchChange}\n            placeholder={this.props.placeholder}\n            value={query}\n          />\n        </div>\n        <ul className={listClasses}>\n          {selectedElements.length > 0 &&\n            selectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n                selected={true}\n              />\n            ))}\n          {unselectedElements.length > 0 &&\n            unselectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                disabled={!allowSelection}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n              />\n            ))}\n          {showNewElement && (\n            <MultiSelectOption\n              active={activeElement === query}\n              custom={true}\n              element={query}\n              key={query}\n              onHover={this.handleElementHover}\n              onSelectChange={this.handleSelectChange}\n              renderLabel={renderLabel}\n            />\n          )}\n          {!showNewElement && selectedElements.length < 1 && unselectedElements.length < 1 && (\n            <li className=\"spacer-left\">{translateWithParameters('no_results_for_x', query)}</li>\n          )}\n        </ul>\n        {footerNode}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport TagsIcon from 'sonar-ui-common/components/icons/TagsIcon';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport './TagsList.css';\n\ninterface Props {\n  allowUpdate?: boolean;\n  className?: string;\n  tags: string[];\n}\n\nexport default function TagsList({ allowUpdate = false, className, tags }: Props) {\n  return (\n    <span\n      aria-label={translateWithParameters('tags_list_x', tags.join(', '))}\n      className={classNames('tags-list', className)}>\n      <TagsIcon className=\"text-middle\" />\n      <span aria-hidden={true} className=\"text-ellipsis text-middle\" title={tags.join(', ')}>\n        {tags.join(', ')}\n      </span>\n      {allowUpdate && <DropdownIcon className=\"text-middle\" />}\n    </span>\n  );\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".tags-list{white-space:nowrap;line-height:16px}.tags-list i:before{font-size:12px}.tags-list span{display:inline-block;vertical-align:middle;text-align:left;max-width:220px;padding-left:4px;padding-right:4px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BranchParameters } from '../types/branch-like';\n\ntype NavComponent = T.Omit<T.Component, 'alm' | 'qualifier' | 'leakPeriodDate' | 'path' | 'tags'>;\n\nexport function getComponentNavigation(\n  data: { component: string } & BranchParameters\n): Promise<NavComponent> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelect from '../common/MultiSelect';\nimport './TagsList.css';\n\ninterface Props {\n  listSize: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  selectedTags: string[];\n  tags: string[];\n}\n\nexport default function TagsSelector(props: Props) {\n  return (\n    <MultiSelect\n      elements={props.tags}\n      listSize={props.listSize}\n      onSearch={props.onSearch}\n      onSelect={props.onSelect}\n      onUnselect={props.onUnselect}\n      placeholder={translate('search.search_for_tags')}\n      selectedElements={props.selectedTags}\n      validateSearchInput={validateTag}\n    />\n  );\n}\n\nexport function validateTag(value: string) {\n  // Allow only a-z, 0-9, '+', '-', '#', '.'\n  return value.toLowerCase().replace(/[^-a-z0-9+#.]/gi, '');\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Query } from './utils';\n\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS: Query = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport { isPullRequest } from '../../helpers/branch-like';\nimport { BranchLike } from '../../types/branch-like';\n\nexport interface BranchLikeIconProps extends IconProps {\n  branchLike: BranchLike;\n}\n\nexport default function BranchLikeIcon({ branchLike, ...props }: BranchLikeIconProps) {\n  if (isPullRequest(branchLike)) {\n    return <PullRequestIcon {...props} />;\n  } else {\n    return <BranchIcon {...props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { partition, sortBy } from 'lodash';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nconst PROVIDED_TYPES = ['homepage', 'ci', 'issue', 'scm', 'scm_dev'];\ntype NameAndType = Pick<T.ProjectLink, 'name' | 'type'>;\n\nexport function isProvided(link: Pick<T.ProjectLink, 'type'>) {\n  return PROVIDED_TYPES.includes(link.type);\n}\n\nexport function orderLinks<T extends NameAndType>(links: T[]) {\n  const [provided, unknown] = partition<T>(links, isProvided);\n  return [\n    ...sortBy(provided, link => PROVIDED_TYPES.indexOf(link.type)),\n    ...sortBy(unknown, link => link.name && link.name.toLowerCase())\n  ];\n}\n\nexport function getLinkName(link: NameAndType) {\n  return isProvided(link) ? translate('project_links', link.type) : link.name;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Branch, PullRequest } from '../types/branch-like';\n\nexport function getBranches(project: string): Promise<Branch[]> {\n  return getJSON('/api/project_branches/list', { project }).then(r => r.branches, throwGlobalError);\n}\n\nexport function getPullRequests(project: string): Promise<PullRequest[]> {\n  return getJSON('/api/project_pull_requests/list', { project }).then(\n    r => r.pullRequests,\n    throwGlobalError\n  );\n}\n\nexport function deleteBranch(data: { branch: string; project: string }) {\n  return post('/api/project_branches/delete', data).catch(throwGlobalError);\n}\n\nexport function deletePullRequest(data: { project: string; pullRequest: string }) {\n  return post('/api/project_pull_requests/delete', data).catch(throwGlobalError);\n}\n\nexport function renameBranch(project: string, name: string) {\n  return post('/api/project_branches/rename', { project, name }).catch(throwGlobalError);\n}\n\nexport function excludeBranchFromPurge(projectKey: string, branchName: string, excluded: boolean) {\n  return post('/api/project_branches/set_automatic_deletion_protection', {\n    project: projectKey,\n    branch: branchName,\n    value: excluded\n  }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport HomeIcon from 'sonar-ui-common/components/icons/HomeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getCurrentUser, Store } from '../../store/rootReducer';\nimport { setHomePage } from '../../store/users';\n\ninterface StateProps {\n  currentUser: T.CurrentUser;\n}\n\ninterface DispatchProps {\n  setHomePage: (homepage: T.HomePage) => void;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  className?: string;\n  currentPage: T.HomePage;\n}\n\nexport const DEFAULT_HOMEPAGE: T.HomePage = { type: 'PROJECTS' };\n\nexport class HomePageSelect extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.setHomePage(this.props.currentPage);\n  };\n\n  handleReset = () => {\n    this.props.setHomePage(DEFAULT_HOMEPAGE);\n  };\n\n  render() {\n    const { currentPage, currentUser } = this.props;\n\n    if (!isLoggedIn(currentUser)) {\n      return null;\n    }\n\n    const { homepage } = currentUser;\n    const isChecked = homepage !== undefined && isSameHomePage(homepage, currentPage);\n    const isDefault = isChecked && isSameHomePage(currentPage, DEFAULT_HOMEPAGE);\n    const tooltip = isChecked\n      ? translate(isDefault ? 'homepage.current.is_default' : 'homepage.current')\n      : translate('homepage.check');\n\n    return (\n      <Tooltip overlay={tooltip}>\n        {isDefault ? (\n          <span\n            aria-label={tooltip}\n            className={classNames('display-inline-block', this.props.className)}>\n            <HomeIcon filled={isChecked} />\n          </span>\n        ) : (\n          <ButtonLink\n            aria-label={tooltip}\n            className={classNames('link-no-underline', 'set-homepage-link', this.props.className)}\n            onClick={isChecked ? this.handleReset : this.handleClick}>\n            <HomeIcon filled={isChecked} />\n          </ButtonLink>\n        )}\n      </Tooltip>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  currentUser: getCurrentUser(state)\n});\n\nconst mapDispatchToProps: DispatchProps = { setHomePage };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePageSelect);\n\nfunction isSameHomePage(a: T.HomePage, b: T.HomePage) {\n  return (\n    a.type === b.type &&\n    (a as any).branch === (b as any).branch &&\n    (a as any).component === (b as any).component\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { getBranchLikeQuery } from '../../helpers/branch-like';\nimport { getComponentDrilldownUrl, getComponentIssuesUrl } from '../../helpers/urls';\nimport { BranchLike } from '../../types/branch-like';\n\nconst ISSUE_MEASURES = [\n  'violations',\n  'new_violations',\n  'blocker_violations',\n  'critical_violations',\n  'major_violations',\n  'minor_violations',\n  'info_violations',\n  'new_blocker_violations',\n  'new_critical_violations',\n  'new_major_violations',\n  'new_minor_violations',\n  'new_info_violations',\n  'open_issues',\n  'reopened_issues',\n  'confirmed_issues',\n  'false_positive_issues',\n  'code_smells',\n  'new_code_smells',\n  'bugs',\n  'new_bugs',\n  'vulnerabilities',\n  'new_vulnerabilities'\n];\n\nconst issueParamsPerMetric: T.Dict<T.Dict<string>> = {\n  blocker_violations: { resolved: 'false', severities: 'BLOCKER' },\n  new_blocker_violations: { resolved: 'false', severities: 'BLOCKER' },\n  critical_violations: { resolved: 'false', severities: 'CRITICAL' },\n  new_critical_violations: { resolved: 'false', severities: 'CRITICAL' },\n  major_violations: { resolved: 'false', severities: 'MAJOR' },\n  new_major_violations: { resolved: 'false', severities: 'MAJOR' },\n  minor_violations: { resolved: 'false', severities: 'MINOR' },\n  new_minor_violations: { resolved: 'false', severities: 'MINOR' },\n  info_violations: { resolved: 'false', severities: 'INFO' },\n  new_info_violations: { resolved: 'false', severities: 'INFO' },\n  open_issues: { resolved: 'false', statuses: 'OPEN' },\n  reopened_issues: { resolved: 'false', statuses: 'REOPENED' },\n  confirmed_issues: { resolved: 'false', statuses: 'CONFIRMED' },\n  false_positive_issues: { resolutions: 'FALSE-POSITIVE' },\n  code_smells: { resolved: 'false', types: 'CODE_SMELL' },\n  new_code_smells: { resolved: 'false', types: 'CODE_SMELL' },\n  bugs: { resolved: 'false', types: 'BUG' },\n  new_bugs: { resolved: 'false', types: 'BUG' },\n  vulnerabilities: { resolved: 'false', types: 'VULNERABILITY' },\n  new_vulnerabilities: { resolved: 'false', types: 'VULNERABILITY' }\n};\n\ninterface Props {\n  branchLike?: BranchLike;\n  children?: React.ReactNode;\n  className?: string;\n  component: string;\n  metric: string;\n  sinceLeakPeriod?: boolean;\n}\n\nexport default class DrilldownLink extends React.PureComponent<Props> {\n  isIssueMeasure = () => {\n    return ISSUE_MEASURES.indexOf(this.props.metric) !== -1;\n  };\n\n  propsToIssueParams = () => {\n    const params: T.Dict<string | boolean> = {\n      ...(issueParamsPerMetric[this.props.metric] || { resolved: 'false' })\n    };\n\n    if (this.props.sinceLeakPeriod) {\n      params.sinceLeakPeriod = true;\n    }\n\n    return params;\n  };\n\n  renderIssuesLink = () => {\n    const url = getComponentIssuesUrl(this.props.component, {\n      ...this.propsToIssueParams(),\n      ...getBranchLikeQuery(this.props.branchLike)\n    });\n\n    return (\n      <Link className={this.props.className} to={url}>\n        {this.props.children}\n      </Link>\n    );\n  };\n\n  render() {\n    if (this.isIssueMeasure()) {\n      return this.renderIssuesLink();\n    }\n\n    const url = getComponentDrilldownUrl({\n      componentKey: this.props.component,\n      metric: this.props.metric,\n      branchLike: this.props.branchLike,\n      listView: true\n    });\n    return (\n      <Link className={this.props.className} to={url}>\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n"],"sourceRoot":""}