{"version":3,"sources":["webpack:///./src/main/js/components/ui/PlaceholderBar.css?413b","webpack:///./src/main/js/components/ui/PlaceholderBar.css","webpack:///./src/main/js/api/news.ts","webpack:///./src/main/js/components/ui/PlaceholderBar.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/ProductNewsMenuItem.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/EmbedDocsPopup.tsx","webpack:///./node_modules/sonar-ui-common/components/intl/DateFormatter.js"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","PRISMIC_API_URL","color","width","height","className","style","mounted","state","loading","fetchProductNews","accessToken","tag","this","props","setState","then","response","master","refs","find","ref","id","Promise","reject","data","q","access_token","orderings","pageSize","ps","results","fetchPrismicNews","news","renderPlaceholder","href","uid","rel","target","date","last_publication_date","formattedDate","title","value","renderSuggestions","suggestions","length","renderTitle","map","suggestion","index","key","onClick","onClose","to","link","text","icon","alt","src","renderIconLink","Dropdown","SuggestionsContext","Consumer","renderSonarCloudLinks","renderSonarQubeLinks","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","defineProperty","React","react_intl_1","dates_1","formatterOption","year","month","day","longFormatterOption","_a","children","long","createElement","FormattedDate","parseDate"],"mappings":"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","file":"js/347.m.8917e1dc.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./PlaceholderBar.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".placeholder-bar{display:inline-block;vertical-align:middle;height:8px;background-color:currentColor}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getCorsJSON } from 'sonar-ui-common/helpers/request';\n\ninterface PrismicRef {\n  id: string;\n  ref: string;\n}\n\nexport interface PrismicNews {\n  data: { title: string };\n  last_publication_date: string;\n  uid: string;\n}\n\ninterface PrismicResponse {\n  page: number;\n  results: PrismicResult[];\n  results_per_page: number;\n  total_results_size: number;\n}\n\ninterface PrismicResult {\n  data: {\n    notification: string;\n    publication_date: string;\n    body: PrismicResultFeature[];\n  };\n}\n\ninterface PrismicResultFeature {\n  items: Array<{\n    category: {\n      data: {\n        color: string;\n        name: string;\n      };\n    };\n  }>;\n  primary: {\n    description: string;\n    read_more_link: {\n      url?: string;\n    };\n  };\n}\n\nexport interface PrismicFeatureNews {\n  notification: string;\n  publicationDate: string;\n  features: Array<{\n    categories: Array<{\n      color: string;\n      name: string;\n    }>;\n    description: string;\n    readMore?: string;\n  }>;\n}\n\nconst PRISMIC_API_URL = 'https://sonarsource.cdn.prismic.io/api/v2';\n\nexport function fetchPrismicRefs() {\n  return getCorsJSON(PRISMIC_API_URL).then((response: { refs: PrismicRef[] }) => {\n    const master = response && response.refs.find(ref => ref.id === 'master');\n    if (!master) {\n      return Promise.reject('No master ref found');\n    }\n    return master;\n  });\n}\n\nexport function fetchPrismicNews(data: {\n  accessToken: string;\n  ps?: number;\n  ref: string;\n  tag?: string;\n}) {\n  const q = ['[[at(document.type, \"blog_sonarsource_post\")]]'];\n  if (data.tag) {\n    q.push(`[[at(document.tags,[\"${data.tag}\"])]]`);\n  }\n  return getCorsJSON(PRISMIC_API_URL + '/documents/search', {\n    access_token: data.accessToken,\n    orderings: '[document.first_publication_date desc]',\n    pageSize: data.ps || 1,\n    q,\n    ref: data.ref\n  }).then(({ results }: { results: PrismicNews[] }) => results);\n}\n\nexport function fetchPrismicFeatureNews(data: {\n  accessToken: string;\n  p?: number;\n  ps?: number;\n  ref: string;\n}): Promise<{ news: PrismicFeatureNews[]; paging: T.Paging }> {\n  return getCorsJSON(PRISMIC_API_URL + '/documents/search', {\n    access_token: data.accessToken,\n    fetchLinks: 'sc_category.color,sc_category.name',\n    orderings: '[my.sc_product_news.publication_date desc]',\n    page: data.p || 1,\n    pageSize: data.ps || 1,\n    q: ['[[at(document.type, \"sc_product_news\")]]'],\n    ref: data.ref\n  }).then(({ page, results, results_per_page, total_results_size }: PrismicResponse) => ({\n    news: results.map(result => ({\n      notification: result.data.notification,\n      publicationDate: result.data.publication_date,\n      features: result.data.body.map(feature => ({\n        categories: feature.items.map(item => item.category.data).filter(Boolean),\n        description: feature.primary.description,\n        readMore: feature.primary.read_more_link.url\n      }))\n    })),\n    paging: {\n      pageIndex: page,\n      pageSize: results_per_page,\n      total: total_results_size\n    }\n  }));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport './PlaceholderBar.css';\n\ninterface Props {\n  color?: string;\n  width: number;\n  height?: number;\n}\n\nexport default function PlaceholderBar({ color, width, height }: Props) {\n  return <span className=\"placeholder-bar\" style={{ color, width, height }} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\nimport DateFormatter from 'sonar-ui-common/components/intl/DateFormatter';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { fetchPrismicNews, fetchPrismicRefs, PrismicNews } from '../../../api/news';\nimport PlaceholderBar from '../../../components/ui/PlaceholderBar';\nimport { getGlobalSettingValue, Store } from '../../../store/rootReducer';\n\ninterface OwnProps {\n  tag?: string;\n}\n\ninterface StateProps {\n  accessToken?: string;\n}\n\ntype Props = OwnProps & StateProps;\n\ninterface State {\n  loading: boolean;\n  news?: PrismicNews;\n}\n\nexport class ProductNewsMenuItem extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchProductNews();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchProductNews = () => {\n    const { accessToken, tag } = this.props;\n    if (accessToken) {\n      this.setState({ loading: true });\n      fetchPrismicRefs()\n        .then(({ ref }) => fetchPrismicNews({ accessToken, ref, tag }))\n        .then(\n          news => {\n            if (this.mounted) {\n              this.setState({ news: news[0], loading: false });\n            }\n          },\n          () => {\n            if (this.mounted) {\n              this.setState({ loading: false });\n            }\n          }\n        );\n    }\n  };\n\n  renderPlaceholder() {\n    return (\n      <a className=\"rich-item new-loading\">\n        <div className=\"flex-1\">\n          <div className=\"display-inline-flex-center\">\n            <h4>{translate('embed_docs.latest_blog')}</h4>\n            <span className=\"note spacer-left\">\n              <PlaceholderBar color=\"#aaa\" width={60} />\n            </span>\n          </div>\n          <p className=\"little-spacer-bottom\">\n            <PlaceholderBar color=\"#aaa\" width={84} /> <PlaceholderBar color=\"#aaa\" width={48} />{' '}\n            <PlaceholderBar color=\"#aaa\" width={24} /> <PlaceholderBar color=\"#aaa\" width={72} />{' '}\n            <PlaceholderBar color=\"#aaa\" width={24} /> <PlaceholderBar color=\"#aaa\" width={48} />\n          </p>\n        </div>\n        <ChevronRightIcon className=\"flex-0\" />\n      </a>\n    );\n  }\n\n  render() {\n    const link = 'https://blog.sonarsource.com/';\n    const { loading, news } = this.state;\n\n    if (loading) {\n      return this.renderPlaceholder();\n    }\n\n    if (!news) {\n      return null;\n    }\n\n    return (\n      <a className=\"rich-item\" href={link + news.uid} rel=\"noopener noreferrer\" target=\"_blank\">\n        <div className=\"flex-1\">\n          <div className=\"display-inline-flex-center\">\n            <h4>{translate('embed_docs.latest_blog')}</h4>\n            <DateFormatter date={news.last_publication_date}>\n              {formattedDate => <span className=\"note spacer-left\">{formattedDate}</span>}\n            </DateFormatter>\n          </div>\n          <p className=\"little-spacer-bottom\">{news.data.title}</p>\n        </div>\n        <ChevronRightIcon className=\"flex-0\" />\n      </a>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => {\n  const accessToken = getGlobalSettingValue(state, 'sonar.prismic.accessToken');\n  return {\n    accessToken: accessToken && accessToken.value\n  };\n};\n\nexport default connect(mapStateToProps)(ProductNewsMenuItem);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { DropdownOverlay } from 'sonar-ui-common/components/controls/Dropdown';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { isSonarCloud } from '../../../helpers/system';\nimport ProductNewsMenuItem from './ProductNewsMenuItem';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  onClose: () => void;\n}\n\nexport default class EmbedDocsPopup extends React.PureComponent<Props> {\n  renderTitle(text: string) {\n    return <li className=\"menu-header\">{text}</li>;\n  }\n\n  renderSuggestions = ({ suggestions }: { suggestions: T.SuggestionLink[] }) => {\n    if (suggestions.length === 0) {\n      return null;\n    }\n    return (\n      <>\n        {this.renderTitle(translate('embed_docs.suggestion'))}\n        {suggestions.map((suggestion, index) => (\n          <li key={index}>\n            <Link onClick={this.props.onClose} target=\"_blank\" to={suggestion.link}>\n              {suggestion.text}\n            </Link>\n          </li>\n        ))}\n        <li className=\"divider\" />\n      </>\n    );\n  };\n\n  renderIconLink(link: string, icon: string, text: string) {\n    return (\n      <a href={link} rel=\"noopener noreferrer\" target=\"_blank\">\n        <img\n          alt={text}\n          className=\"spacer-right\"\n          height=\"18\"\n          src={`${getBaseUrl()}/images/${icon}`}\n          width=\"18\"\n        />\n        {text}\n      </a>\n    );\n  }\n\n  renderSonarCloudLinks() {\n    return (\n      <>\n        <li className=\"divider\" />\n        <li>\n          <a\n            href=\"https://community.sonarsource.com/c/help/sc\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('embed_docs.get_help')}\n          </a>\n        </li>\n        <li className=\"divider\" />\n        {this.renderTitle(translate('embed_docs.stay_connected'))}\n        <li>\n          {this.renderIconLink(\n            'https://twitter.com/sonarcloud',\n            'embed-doc/twitter-icon.svg',\n            'Twitter'\n          )}\n        </li>\n        <li>\n          {this.renderIconLink(\n            'https://blog.sonarsource.com/product/SonarCloud',\n            'sonarcloud-square-logo.svg',\n            translate('embed_docs.blog')\n          )}\n        </li>\n        <li>\n          <ProductNewsMenuItem tag=\"SonarCloud\" />\n        </li>\n      </>\n    );\n  }\n\n  renderSonarQubeLinks() {\n    return (\n      <>\n        <li className=\"divider\" />\n        <li>\n          <a href=\"https://community.sonarsource.com/\" rel=\"noopener noreferrer\" target=\"_blank\">\n            {translate('embed_docs.get_help')}\n          </a>\n        </li>\n        <li className=\"divider\" />\n        {this.renderTitle(translate('embed_docs.stay_connected'))}\n        <li>\n          {this.renderIconLink(\n            'https://www.sonarqube.org/whats-new/?referrer=sonarqube',\n            'embed-doc/sq-icon.svg',\n            translate('embed_docs.news')\n          )}\n        </li>\n        <li>\n          {this.renderIconLink(\n            'https://twitter.com/SonarQube',\n            'embed-doc/twitter-icon.svg',\n            'Twitter'\n          )}\n        </li>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <DropdownOverlay>\n        <ul className=\"menu abs-width-240\">\n          <SuggestionsContext.Consumer>{this.renderSuggestions}</SuggestionsContext.Consumer>\n          <li>\n            <Link onClick={this.props.onClose} target=\"_blank\" to=\"/documentation\">\n              {translate('embed_docs.documentation')}\n            </Link>\n          </li>\n          <li>\n            <Link onClick={this.props.onClose} to=\"/web_api\">\n              {translate('api_documentation.page')}\n            </Link>\n          </li>\n          {isSonarCloud() ? this.renderSonarCloudLinks() : this.renderSonarQubeLinks()}\n        </ul>\n      </DropdownOverlay>\n    );\n  }\n}\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar react_intl_1 = require(\"react-intl\");\nvar dates_1 = require(\"../../helpers/dates\");\nexports.formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\nexports.longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\nfunction DateFormatter(_a) {\n    var children = _a.children, date = _a.date, long = _a.long;\n    return (React.createElement(react_intl_1.FormattedDate, __assign({ value: dates_1.parseDate(date) }, (long ? exports.longFormatterOption : exports.formatterOption)), children));\n}\nexports.default = DateFormatter;\n//# sourceMappingURL=DateFormatter.js.map"],"sourceRoot":""}