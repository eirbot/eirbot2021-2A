{"version":3,"sources":["webpack:///./src/main/js/apps/background-tasks/background-tasks.css?a006","webpack:///./src/main/js/apps/background-tasks/background-tasks.css","webpack:///./src/main/js/apps/background-tasks/utils.ts","webpack:///./src/main/js/apps/background-tasks/components/Footer.tsx","webpack:///./src/main/js/apps/background-tasks/components/NoWorkersSupportPopup.tsx","webpack:///./src/main/js/apps/background-tasks/components/WorkersForm.tsx","webpack:///./src/main/js/apps/background-tasks/components/Workers.tsx","webpack:///./src/main/js/apps/background-tasks/components/Header.tsx","webpack:///./src/main/js/apps/background-tasks/components/CurrentsFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/DateFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatusFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/TypesFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/Search.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatPendingCount.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatPendingTime.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatStillFailing.tsx","webpack:///./src/main/js/apps/background-tasks/components/Stats.tsx","webpack:///./src/main/js/apps/background-tasks/components/ScannerContext.tsx","webpack:///./src/main/js/apps/background-tasks/components/Stacktrace.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskActions.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskType.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskComponent.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskDate.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskDay.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskExecutionTime.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskId.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskStatus.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskSubmitter.tsx","webpack:///./src/main/js/apps/background-tasks/components/Task.tsx","webpack:///./src/main/js/apps/background-tasks/components/Tasks.tsx","webpack:///./src/main/js/apps/background-tasks/components/BackgroundTasksApp.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/controls/DateInput.tsx","webpack:///./src/main/js/components/controls/DayPicker.css?d7e1","webpack:///./src/main/js/components/controls/DayPicker.css","webpack:///./src/main/js/components/controls/styles.css?5633","webpack:///./src/main/js/components/controls/styles.css","webpack:///./src/main/js/apps/background-tasks/constants.ts","webpack:///./src/main/js/components/controls/DateRangeInput.tsx"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","format","int","suffix","Footer","length","className","NoWorkersSupportPopup","href","rel","target","props","mounted","handleClose","onClose","handleWorkerCountChange","option","setState","newWorkerCount","value","handleSubmit","event","preventDefault","submitting","state","then","workerCount","componentDidMount","this","componentWillUnmount","render","label","String","contentLabel","onRequestClose","onSubmit","clearable","onChange","searchable","Alert","variant","disabled","onClick","canSetWorkerCount","formOpen","loading","noSupportPopup","loadWorkers","closeForm","handleChangeClick","handleHelpClick","stopPropagation","toggleNoSupportPopup","show","undefined","overlay","fill","Header","component","to","pathname","handleChange","newValue","ONLY_CURRENTS","ALL","checked","onCheck","handleDateRangeChange","from","minSubmittedAt","maxExecutedAt","dateRange","ALL_EXCEPT_PENDING","Pending","InProgress","Success","Failed","Canceled","map","t","allOptions","handleStatusChange","status","onFilterUpdate","handleTypeChange","taskType","handleCurrentsChange","currents","handleDateChange","date","handleQueryChange","query","handleReset","renderSearchBox","placeholder","types","onReload","isSystemAdmin","canAdmin","onCancelAllPending","pendingCount","cancelButtonText","confirmButtonText","isDestructive","modalBody","modalHeader","onConfirm","color","red","StatPendingTime","pendingTime","StatStillFailing","failingCount","onShowFailing","Stats","handleCloseClick","loadScannerContext","task","id","scannerContext","size","componentName","type","loadStacktrace","stacktrace","errorStacktrace","errorMessage","AnalysisWarningsModal","lazyLoadComponent","cancelTaskOpen","scannerContextOpen","stacktraceOpen","warningsOpen","handleFilterClick","onFilterTask","handleCancelTask","onCancelTask","handleCancelClick","handleShowScannerContextClick","closeCancelTask","closeScannerContext","handleShowStacktraceClick","closeStacktrace","handleShowWarningsClick","closeWarnings","canFilter","canCancel","canShowStacktrace","canShowWarnings","warningCount","hasScannerContext","ActionsDropdown","destructive","header","componentKey","taskId","TaskType","TaskComponent","branch","pullRequest","componentQualifier","qualifier","getTaskComponentUrl","title","style","marginLeft","marginRight","pullRequestTitle","TaskDate","baseDate","parsedDate","parsedBaseDate","diff","long","TaskDay","submittedAt","prevSubmittedAt","shouldDisplay","TaskExecutionTime","ms","ONE_SECOND","seconds","Math","floor","ONE_MINUTE","hours","minutes","formatDuration","TaskId","TaskStatus","inner","TaskSubmitter","submitter","Task","previousTask","submitterLogin","startedAt","executedAt","executionTimeMs","Tasks","tasks","index","key","stopLoading","loadTasks","parameters","filters","join","onlyCurrents","q","mapFiltersToParameters","location","componentId","Promise","all","failing","pending","handleFilterUpdate","nextState","nextQuery","Object","keys","forEach","router","nextTask","newTask","handleFilterTask","handleShowFailing","handleCancelAllPending","loadTasksDebounced","componentDidUpdate","prevProps","Suggestions","suggestions","defer","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","DayPicker","focus","input","openCalendar","handleResetClick","closeCalendar","currentMonth","Date","lastHovered","open","handleDayClick","day","modifiers","handleDayMouseEnter","handleCurrentMonthChange","handleCurrentYearChange","handlePreviousMonthClick","handleNextMonthClick","highlightFrom","highlightTo","minDate","after","maxDate","months","years","getFullYear","selectedDays","lastHoveredOrValue","highlighted","weekdaysLong","weekdaysShort","onClickOutside","InputWrapper","inputClassName","innerRef","node","name","onFocus","readOnly","iconProps","month","getMonth","year","captionElement","NullComponent","disabledDays","before","firstDayOfWeek","navbarElement","onDayClick","onDayMouseEnter","intl","other","formattedValue","formatDate","ref","STATUSES","ALL_TYPES","CURRENTS","DEFAULT_FILTERS","DEBOUNCE_DELAY","handleFromChange","setTimeout","toDateInput","handleToChange","element"],"mappings":"gFAAA,IAAIA,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,gSAAiS,KAE1TD,EAAOK,QAAUA,G,yJC+EjB,SAASG,EAAOC,EAAaC,GAC3B,MAAO,GAAGD,EAAMC,ECzDJ,SAAUC,EAAO,GAC7B,OADoC,QAC1BC,OAPE,IAQH,KAIP,0BAAQC,UAAU,+BACf,kCAAwB,sBAbjB,M,6ECDA,SAAUC,IACtB,OACE,gCACE,qBAAGD,UAAU,iBACX,8BAAS,oBAAU,uCAErB,qBAAGA,UAAU,8BACV,oBAAU,2CAEb,yBACE,qBACEE,KAAK,4DACLC,IAAI,sBACJC,OAAO,UACN,oBAAU,iB,+XCGrB,YAGE,WAAYC,GAAZ,MACE,YAAMA,IAAM,K,OAHd,EAAAC,SAAU,EAkBV,EAAAC,YAAc,WACZ,EAAKF,MAAMG,WAGb,EAAAC,wBAA0B,SAACC,GACzB,SAAKC,SAAS,CAAEC,eAAgBF,EAAOG,SAEzC,EAAAC,aAAe,SAACC,GACdA,EAAMC,iBACN,EAAKL,SAAS,CAAEM,YAAY,IACpB,IAAAL,EAAmB,EAAKM,MAAV,eACtB,YAAeN,GAAgBO,MAC7B,WACM,EAAKb,SACP,EAAKD,MAAMG,QAAQI,MAGvB,WACM,EAAKN,SACP,EAAKK,SAAS,CAAEM,YAAY,QAjClC,EAAKC,MAAQ,CACXN,eAAgBP,EAAMe,YACtBH,YAAY,G,EA2ElB,OAlFyC,OAWvC,YAAAI,kBAAA,WACEC,KAAKhB,SAAU,GAGjB,YAAAiB,qBAAA,WACED,KAAKhB,SAAU,GA4BjB,YAAAkB,OAAA,WAEE,IADA,IAAMnC,EAAU,GACPD,EAAI,EAAGA,GA1DA,GA0DkBA,IAChCC,EAAQK,KAAK,CAAE+B,MAAOC,OAAOtC,GAAIyB,MAAOzB,IAG1C,OACE,gBAAC,IAAK,CACJuC,aAAc,oBAAU,6CACxBC,eAAgBN,KAAKf,aACrB,0BAAQP,UAAU,cAChB,0BAAK,oBAAU,+CAEjB,wBAAM6B,SAAUP,KAAKR,cACnB,uBAAKd,UAAU,cACb,gBAAC,IAAM,CACLA,UAAU,wBACV8B,WAAW,EACXC,SAAUT,KAAKb,wBACfpB,QAASA,EACT2C,YAAY,EACZnB,MAAOS,KAAKJ,MAAMN,iBAEpB,gBAACqB,EAAA,MAAK,CAACjC,UAAU,iBAAiBkC,QAAQ,QACvC,oBAAU,oDAGf,0BAAQlC,UAAU,cAChB,2BACGsB,KAAKJ,MAAMD,YAAc,qBAAGjB,UAAU,yBACvC,gBAAC,eAAY,CAACmC,SAAUb,KAAKJ,MAAMD,YAAa,oBAAU,SAC1D,gBAAC,kBAAe,CAACmB,QAASd,KAAKf,aAAc,oBAAU,gBAOrE,EAlFA,CAAyC,iB,mWCFzC,uE,OACE,EAAAD,SAAU,EACV,EAAAY,MAAe,CACbmB,mBAAmB,EACnBC,UAAU,EACVC,SAAS,EACTC,gBAAgB,EAChBpB,YAAa,GAYf,EAAAqB,YAAc,WACZ,EAAK9B,SAAS,CAAE4B,SAAS,IACzB,cAAapB,MACX,SAAC,G,IAAEkB,EAAiB,oBAAExB,EAAK,QACrB,EAAKP,SACP,EAAKK,SAAS,CACZ0B,kBAAiB,EACjBE,SAAS,EACTnB,YAAaP,OAInB,WACM,EAAKP,SACP,EAAKK,SAAS,CAAE4B,SAAS,QAMjC,EAAAG,UAAY,SAAC9B,GACX,OAAAA,EACI,EAAKD,SAAS,CAAE2B,UAAU,EAAOlB,YAAaR,IAC9C,EAAKD,SAAS,CAAE2B,UAAU,KAEhC,EAAAK,kBAAoB,WAClB,EAAKhC,SAAS,CAAE2B,UAAU,KAG5B,EAAAM,gBAAkB,SAAC7B,GACjBA,EAAMC,iBACND,EAAM8B,kBACN,EAAKC,wBAGP,EAAAA,qBAAuB,SAACC,QACTC,IAATD,EACF,EAAKpC,SAAS,CAAE6B,eAAgBO,IAEhC,EAAKpC,UAAS,SAAAO,GAAS,MAAC,CAAEsB,gBAAiBtB,EAApB,oB,EA4C7B,OAtGqC,OAUnC,YAAAG,kBAAA,WACEC,KAAKhB,SAAU,EACfgB,KAAKmB,eAGP,YAAAlB,qBAAA,WACED,KAAKhB,SAAU,GA8CjB,YAAAkB,OAAA,WACQ,MAAwDF,KAAKJ,MAA3DmB,EAAiB,oBAAEC,EAAQ,WAAEC,EAAO,UAAEnB,EAAW,cAEzD,OACE,uBAAKpB,UAAU,wBACXuC,GAAWnB,EAAc,GACzB,gBAAC,IAAO,CAAC6B,QAAS,oBAAU,+CAC1B,wBAAMjD,UAAU,kDACd,gBAAC,IAAa,CAACkD,KAAK,cAK1B,wBAAMlD,UAAU,eACb,oBAAU,sCAEVuC,EACC,qBAAGvC,UAAU,+BAEb,0BAAQA,UAAU,sBAAsBoB,KAI1CmB,GAAWF,GACX,gBAAC,IAAO,CAACY,QAAS,oBAAU,8CAC1B,gBAAC,aAAU,CACTjD,UAAU,mCACVoC,QAASd,KAAKqB,sBAKlBJ,IAAYF,GACZ,gBAAC,IAAW,CAACrC,UAAU,cAAciD,QAAS,gBAAChD,EAAqB,QAGrEqC,GAAY,gBAAC,EAAW,CAAC9B,QAASc,KAAKoB,UAAWtB,YAAaE,KAAKJ,MAAME,gBAInF,EAtGA,CAAqC,iBCTvB,SAAU+B,EAAO9C,GAC7B,OACE,0BAAQL,UAAU,eAChB,sBAAIA,UAAU,cAAc,oBAAU,2BACpCK,EAAM+C,WACN,uBAAKpD,UAAU,gBACb,gBAAC,EAAO,OAGZ,qBAAGA,UAAU,oBACV,oBAAU,qCACX,gBAAC,IAAI,CACHA,UAAU,cACVI,OAAO,SACPiD,GAAI,CAAEC,SAAU,8CACf,oBAAU,iB,2YCdrB,uE,OACE,EAAAC,aAAe,SAAC1C,GACd,IAAM2C,EAAW3C,EAAQ,IAAS4C,cAAgB,IAASC,IAC3D,EAAKrD,MAAM0B,SAASyB,I,EAaxB,OAhB4C,OAM1C,YAAAhC,OAAA,WACE,IAAMmC,EAAUrC,KAAKjB,MAAMQ,QAAU,IAAS4C,cAC9C,OACE,uBAAKzD,UAAU,wBACb,gBAAC,IAAQ,CAAC2D,QAASA,EAASC,QAAStC,KAAKiC,cACxC,wBAAMvD,UAAU,sBAAsB,oBAAU,WAK1D,EAhBA,CAA4C,iB,4WCD5C,uE,OACE,EAAA6D,sBAAwB,SAAC,G,IAAEC,EAAI,OAAET,EAAE,KACjC,EAAKhD,MAAM0B,SAAS,CAAEgC,eAAgBD,EAAME,cAAeX,K,EAW/D,OAbwC,OAKtC,YAAA7B,OAAA,WACE,IAAMyC,EAAY,CAAEH,KAAMxC,KAAKjB,MAAM0D,eAAgBV,GAAI/B,KAAKjB,MAAM2D,eACpE,OACE,uBAAKhE,UAAU,UACb,gBAAC,IAAc,CAAC+B,SAAUT,KAAKuC,sBAAuBhD,MAAOoD,MAIrE,EAbA,CAAwC,iB,mWCExC,uE,OACE,EAAAV,aAAe,SAAC,G,IAAE1C,EAAK,QACrB,EAAKR,MAAM0B,SAASlB,I,EA4BxB,OA9B0C,OAKxC,YAAAW,OAAA,WACE,IAAMnC,EAAU,CACd,CAAEwB,MAAO,IAAS6C,IAAKjC,MAAO,oBAAU,+BACxC,CACEZ,MAAO,IAASqD,mBAChBzC,MAAO,oBAAU,8CAEnB,CAAEZ,MAAO,IAAasD,QAAS1C,MAAO,oBAAU,mCAChD,CAAEZ,MAAO,IAAauD,WAAY3C,MAAO,oBAAU,uCACnD,CAAEZ,MAAO,IAAawD,QAAS5C,MAAO,oBAAU,mCAChD,CAAEZ,MAAO,IAAayD,OAAQ7C,MAAO,oBAAU,kCAC/C,CAAEZ,MAAO,IAAa0D,SAAU9C,MAAO,oBAAU,qCAGnD,OACE,gBAAC,IAAM,CACLzB,UAAU,eACV8B,WAAW,EACXC,SAAUT,KAAKiC,aACflE,QAASA,EACT2C,YAAY,EACZnB,MAAOS,KAAKjB,MAAMQ,SAI1B,EA9BA,CAA0C,iB,2hBCA1C,uE,OACE,EAAA0C,aAAe,SAAC,G,IAAE1C,EAAK,QACrB,EAAKR,MAAM0B,SAASlB,I,EA4BxB,OA9ByC,OAKvC,YAAAW,OAAA,WACQ,MAAmBF,KAAKjB,MAAtBQ,EAAK,QACPxB,EADc,QACEmF,KAAI,SAAAC,GACxB,MAAO,CACL5D,MAAO4D,EACPhD,MAAO,oBAAU,uBAAwBgD,OAIvCC,EAAa,EAAH,CACd,CAAE7D,MAAO,IAAWY,MAAO,oBAAU,8BAClCpC,GAGL,OACE,gBAAC,IAAM,CACLW,UAAU,eACV8B,WAAW,EACXC,SAAUT,KAAKiC,aACflE,QAASqF,EACT1C,YAAY,EACZnB,MAAOA,KAIf,EA9BA,CAAyC,iB,mWCczC,uE,OACE,EAAA8D,mBAAqB,SAACC,GACpB,EAAKvE,MAAMwE,eAAe,CAAED,OAAM,KAGpC,EAAAE,iBAAmB,SAACC,GAClB,EAAK1E,MAAMwE,eAAe,CAAEE,SAAQ,KAGtC,EAAAC,qBAAuB,SAACC,GACtB,EAAK5E,MAAMwE,eAAe,CAAEI,SAAQ,KAGtC,EAAAC,iBAAmB,SAACC,GAClB,EAAK9E,MAAMwE,eAAeM,IAG5B,EAAAC,kBAAoB,SAACC,GACnB,EAAKhF,MAAMwE,eAAe,CAAEQ,MAAK,KAGnC,EAAAC,YAAc,WACZ,EAAKjF,MAAMwE,eAAe,M,EA8E9B,OApGoC,OAyBlC,YAAAU,gBAAA,WACQ,MAAuBjE,KAAKjB,MAA1B+C,EAAS,YAAEiC,EAAK,QAExB,OAAIjC,EAEK,KAIP,sBAAIpD,UAAU,wBACZ,gBAAC,IAAS,CACR+B,SAAUT,KAAK8D,kBACfI,YAAa,oBAAU,gDACvB3E,MAAOwE,MAMf,YAAA7D,OAAA,WACQ,MASFF,KAAKjB,MARPkC,EAAO,UACPa,EAAS,YACTqC,EAAK,QACLb,EAAM,SACNG,EAAQ,WACRE,EAAQ,WACRlB,EAAc,iBACdC,EAAa,gBAGf,OACE,2BAAShE,UAAU,oCACjB,sBAAIA,UAAU,kBACZ,0BACE,sBAAIA,UAAU,wBAAwB,oBAAU,WAChD,gBAAC,EAAY,CAAC+B,SAAUT,KAAKqD,mBAAoB9D,MAAO+D,KAEzDa,EAAM1F,OAAS,GACd,0BACE,sBAAIC,UAAU,wBAAwB,oBAAU,SAChD,gBAAC,EAAW,CAAC+B,SAAUT,KAAKwD,iBAAkBW,MAAOA,EAAO5E,MAAOkE,MAGrE3B,GACA,0BACE,sBAAIpD,UAAU,wBACX,oBAAU,mDAEb,gBAAC,EAAc,CAAC+B,SAAUT,KAAK0D,qBAAsBnE,MAAOoE,KAGhE,0BACE,sBAAIjF,UAAU,wBAAwB,oBAAU,SAChD,gBAAC,EAAU,CACTgE,cAAeA,EACfD,eAAgBA,EAChBhC,SAAUT,KAAK4D,oBAIlB5D,KAAKiE,kBAEN,sBAAIvF,UAAU,UACZ,gBAAC,SAAM,CAACA,UAAU,YAAYmC,SAAUI,EAASH,QAASd,KAAKjB,MAAMqF,UAClE,oBAAU,WACH,IACV,gBAAC,SAAM,CAACvD,SAAUI,EAASH,QAASd,KAAKgE,aACtC,oBAAU,mBAOzB,EApGA,CAAoC,iB,gDCoBpC,IAIe,gBAJS,SAACpE,GAAiB,MAAC,CACzCyE,cAAe,uBAAYzE,GAAO0E,YAGrB,EAlCT,SAA2B,G,IAAED,EAAa,gBAAEE,EAAkB,qBAAEC,EAAY,eAChF,YAAqB9C,IAAjB8C,EACK,KAIP,4BACE,wBAAM9F,UAAU,sBAAsB8F,GACtC,wBAAM9F,UAAU,iDACb,oBAAU,4BACV2F,GAAiBG,EAAe,GAC/B,gBAAC,KAAa,CACZC,iBAAkB,oBAAU,SAC5BC,kBAAmB,oBAAU,4CAC7BC,eAAe,EACfC,UAAW,oBAAU,0CACrBC,YAAa,oBAAU,qCACvBC,UAAWP,IACV,SAAC,G,IAAEzD,EAAO,UAAO,OAChB,gBAAC,IAAO,CAACa,QAAS,oBAAU,sCAC1B,gBAAC,cAAW,CAACjD,UAAU,qBAAqBqG,MAAO,UAAOC,IAAKlE,QAASA,a,UCpB1E,SAAUmE,GAAgB,G,IAAEvG,EAAS,YAAE8F,EAAY,eAAEU,EAAW,cAC5E,OAAKA,IAAgBV,GAAgBU,EAVJ,IAWxB,KAGP,wBAAMxG,UAAWA,GACf,wBAAMA,UAAU,sBAAsB,yBAAcwG,EAAa,aACjE,wBAAMxG,UAAU,sBAAsB,oBAAU,kCAChD,gBAAC,IAAW,CACVA,UAAU,qBACViD,QAAS,oBAAU,gDCdb,SAAUwD,GAAiB,G,IAAEzG,EAAS,YAAE0G,EAAY,eAAEC,EAAa,gBAC/E,YAAqB3D,IAAjB0D,EACK,KAIP,wBAAM1G,UAAWA,GACd0G,EAAe,EACd,gBAAC,aAAU,CAAC1G,UAAU,mCAAmCoC,QAASuE,GAC/DD,GAGH,wBAAM1G,UAAU,sBAAsB0G,GAExC,wBAAM1G,UAAU,sBAAsB,oBAAU,8BAChD,gBAAC,IAAW,CACVA,UAAU,qBACViD,QAAS,oBAAU,qC,iVCdb,SAAU2D,GAAM,GAAE,IAAAxD,EAAS,YAAE0C,EAAY,eAAEU,EAAW,cAAKnG,EAAK,KAAhD,4CAC5B,OACE,2BAASL,UAAU,oCACjB,gBAAC,GAAgB,CAAC6F,mBAAoBxF,EAAMwF,mBAAoBC,aAAcA,KAC5E1C,GACA,gBAACmD,GAAe,CACdvG,UAAU,mBACV8F,aAAcA,EACdU,YAAaA,KAGfpD,GACA,gBAACqD,GAAgB,CACfzG,UAAU,mBACV0G,aAAcrG,EAAMqG,aACpBC,cAAetG,EAAMsG,iB,uaCd/B,uE,OACE,EAAArG,SAAU,EACV,EAAAY,MAAe,GAmBf,EAAA2F,iBAAmB,SAAC9F,GAClBA,EAAMC,iBACN,EAAKX,MAAMG,W,EAoCf,OA3D4C,QAI1C,YAAAa,kBAAA,WACEC,KAAKhB,SAAU,EACfgB,KAAKwF,sBAGP,YAAAvF,qBAAA,WACED,KAAKhB,SAAU,GAGjB,YAAAwG,mBAAA,sBACE,YAAQxF,KAAKjB,MAAM0G,KAAKC,GAAI,CAAC,mBAAmB7F,MAAK,SAAA4F,GAC/C,EAAKzG,SACP,EAAKK,SAAS,CAAEsG,eAAgBF,EAAKE,qBAU3C,YAAAzF,OAAA,WACU,IAAAuF,EAASzF,KAAKjB,MAAV,KACJ4G,EAAmB3F,KAAKJ,MAAV,eAEtB,OACE,gBAAC,IAAK,CAACS,aAAa,kBAAkBC,eAAgBN,KAAKjB,MAAMG,QAAS0G,KAAK,SAC7E,uBAAKlH,UAAU,cACb,0BACG,oBAAU,oCACV,KACA+G,EAAKI,cACL,KACA,oBAAU,uBAAwBJ,EAAKK,MACvC,MAIL,uBAAKpH,UAAU,8BACM,MAAlBiH,EACC,uBAAKjH,UAAU,2BAA2BiH,GAE1C,qBAAGjH,UAAU,aAIjB,uBAAKA,UAAU,cACb,qBAAGA,UAAU,iBAAiBE,KAAK,IAAIkC,QAASd,KAAKuF,kBAClD,oBAAU,aAMvB,EA3DA,CAA4C,iB,qWCC5C,uE,OACE,EAAAvG,SAAU,EACV,EAAAY,MAAe,CAAEqB,SAAS,GA0B1B,EAAAsE,iBAAmB,SAAC9F,GAClBA,EAAMC,iBACN,EAAKX,MAAMG,W,EA4Cf,OA1EwC,QAItC,YAAAa,kBAAA,WACEC,KAAKhB,SAAU,EACfgB,KAAK+F,kBAGP,YAAA9F,qBAAA,WACED,KAAKhB,SAAU,GAGjB,YAAA+G,eAAA,sBACE,YAAQ/F,KAAKjB,MAAM0G,KAAKC,GAAI,CAAC,eAAe7F,MAC1C,SAAA4F,GACM,EAAKzG,SACP,EAAKK,SAAS,CAAE4B,SAAS,EAAO+E,WAAYP,EAAKQ,qBAGrD,WACM,EAAKjH,SACP,EAAKK,SAAS,CAAE4B,SAAS,QAWjC,YAAAf,OAAA,WACU,IAAAuF,EAASzF,KAAKjB,MAAV,KACN,EAA0BiB,KAAKJ,MAA7BqB,EAAO,UAAE+E,EAAU,aAE3B,OACE,gBAAC,IAAK,CAAC3F,aAAa,aAAaC,eAAgBN,KAAKjB,MAAMG,QAAS0G,KAAK,SACxE,uBAAKlH,UAAU,cACb,0BACG,oBAAU,qCACV,KACA+G,EAAKI,cACL,KACA,oBAAU,uBAAwBJ,EAAKK,MACvC,MAIL,uBAAKpH,UAAU,8BACZuC,EACC,qBAAGvC,UAAU,YACXsH,EACF,2BACE,sBAAItH,UAAU,iBAAiB,oBAAU,sCACzC,uBAAKA,UAAU,sBAAsBsH,IAGvC,2BACE,sBAAItH,UAAU,iBAAiB,oBAAU,mCACzC,uBAAKA,UAAU,yBAAyB+G,EAAKS,gBAKnD,uBAAKxH,UAAU,cACb,qBAAGA,UAAU,iBAAiBE,KAAK,IAAIkC,QAASd,KAAKuF,kBAClD,oBAAU,aAMvB,EA1EA,CAAwC,iB,kWCLlCY,GAAwB,OAAAC,GAAA,oBAC5B,WAAM,yCACN,yB,GAiBF,uE,OACE,EAAAxG,MAAe,CACbyG,gBAAgB,EAChBC,oBAAoB,EACpBC,gBAAgB,EAChBC,cAAc,GAGhB,EAAAC,kBAAoB,WAClB,EAAK1H,MAAM2H,aAAa,EAAK3H,MAAM0G,OAGrC,EAAAkB,iBAAmB,WACjB,OAAO,EAAK5H,MAAM6H,aAAa,EAAK7H,MAAM0G,OAG5C,EAAAoB,kBAAoB,WAClB,EAAKxH,SAAS,CAAEgH,gBAAgB,KAGlC,EAAAS,8BAAgC,WAC9B,EAAKzH,SAAS,CAAEiH,oBAAoB,KAGtC,EAAAS,gBAAkB,WAChB,EAAK1H,SAAS,CAAEgH,gBAAgB,KAGlC,EAAAW,oBAAsB,WACpB,EAAK3H,SAAS,CAAEiH,oBAAoB,KAGtC,EAAAW,0BAA4B,WAC1B,EAAK5H,SAAS,CAAEkH,gBAAgB,KAGlC,EAAAW,gBAAkB,WAChB,EAAK7H,SAAS,CAAEkH,gBAAgB,KAGlC,EAAAY,wBAA0B,WACxB,EAAK9H,SAAS,CAAEmH,cAAc,KAGhC,EAAAY,cAAgB,WACd,EAAK/H,SAAS,CAAEmH,cAAc,K,EAuFlC,OApIyC,QAgDvC,YAAAtG,OAAA,WACQ,MAAsBF,KAAKjB,MAAzB+C,EAAS,YAAE2D,EAAI,OAEjB4B,OAA0B3F,IAAdI,EACZwF,EAAY7B,EAAKnC,SAAW,IAAaT,QACzC0E,OAA0C7F,IAAtB+D,EAAKS,aACzBsB,OAAwC9F,IAAtB+D,EAAKgC,cAA8BhC,EAAKgC,aAAe,EAI/E,OAFEJ,GAAaC,GAAa7B,EAAKiC,mBAAqBH,GAAqBC,EAOzE,sBAAI9I,UAAU,eACZ,gBAAC,KAAe,CAACA,UAAU,kBACxB2I,GAAa5B,EAAKI,eACjB,gBAAC8B,GAAA,oBAAmB,CAACjJ,UAAU,iBAAiBoC,QAASd,KAAKyG,mBAC3D,kCACC,yCACAhB,EAAKI,gBAIVyB,GACC,gBAACK,GAAA,oBAAmB,CAClBjJ,UAAU,iBACVkJ,aAAa,EACb9G,QAASd,KAAK6G,mBACb,oBAAU,iCAGdpB,EAAKiC,mBACJ,gBAACC,GAAA,oBAAmB,CAClBjJ,UAAU,+BACVoC,QAASd,KAAK8G,+BACb,oBAAU,0CAGdS,GACC,gBAACI,GAAA,oBAAmB,CAClBjJ,UAAU,0BACVoC,QAASd,KAAKiH,2BACb,oBAAU,qCAGdO,GACC,gBAACG,GAAA,oBAAmB,CAClBjJ,UAAU,wBACVoC,QAASd,KAAKmH,yBACb,oBAAU,oCAKhBnH,KAAKJ,MAAMyG,gBACV,gBAAC,KAAY,CACX5B,iBAAkB,oBAAU,SAC5BC,kBAAmB,oBAAU,gCAC7BmD,OAAQ,oBAAU,gCAClBlD,eAAe,EACfzF,QAASc,KAAK+G,gBACdjC,UAAW9E,KAAK2G,kBACf,oBAAU,sCAId3G,KAAKJ,MAAM0G,oBACV,gBAAC,GAAc,CAACpH,QAASc,KAAKgH,oBAAqBvB,KAAMA,IAG1DzF,KAAKJ,MAAM2G,gBAAkB,gBAAC,GAAU,CAACrH,QAASc,KAAKkH,gBAAiBzB,KAAMA,IAE9EzF,KAAKJ,MAAM4G,cACV,gBAACL,GAAqB,CACpB2B,aAAcrC,EAAKqC,aACnB5I,QAASc,KAAKoH,cACdW,OAAQtC,EAAKC,MAnEZ,gCAyEb,EApIA,CAAyC,iB,mFCvB3B,SAAUsC,GAAS,G,IAAElC,EAAI,OACrC,OACE,wBAAMpH,UAAU,6BACb,IACA,oBAAU,uBAAwBoH,GAClC,KCOO,SAAUmC,GAAc,G,IAAExC,EAAI,OAC1C,OAAKA,EAAKqC,aAUR,+BACmBpG,IAAhB+D,EAAKyC,QAAwB,gBAAC,KAAU,CAACxJ,UAAU,6BAC9BgD,IAArB+D,EAAK0C,aAA6B,gBAAC,KAAe,CAACzJ,UAAU,yBAE5D+G,EAAKyC,SAAWzC,EAAK0C,aAAe1C,EAAK2C,oBACzC,wBAAM1J,UAAU,uBACd,gBAAC,KAAa,CAAC2J,UAAW5C,EAAK2C,sBAIlC3C,EAAKI,eACJ,gBAAC,IAAI,CAACnH,UAAU,eAAeqD,GAAIuG,GAAoB7C,EAAKqC,aAAcrC,IACvEA,EAAKI,cAELJ,EAAKyC,QACJ,wBAAMxJ,UAAU,6BAA6B6J,MAAO9C,EAAKyC,QACvD,wBAAMM,MAAO,CAAEC,WAAY,EAAGC,YAAa,IAAG,KAC7CjD,EAAKyC,QAITzC,EAAK0C,aACJ,wBAAMzJ,UAAU,6BAA6B6J,MAAO9C,EAAKkD,kBACvD,wBAAMH,MAAO,CAAEC,WAAY,EAAGC,YAAa,IAAG,KAC7CjD,EAAK0C,cAMd,gBAACH,GAAQ,CAAClC,KAAML,EAAKK,QAtCrB,0BACE,wBAAMpH,UAAU,QAAQ+G,EAAKC,IAC7B,gBAACsC,GAAQ,CAAClC,KAAML,EAAKK,QAyC7B,SAASwC,GAAoBR,EAAsBrC,GACjD,OAAI,aAAgBA,EAAK2C,oBAChB,aAAgBN,GACdrC,EAAKyC,OACP,aAAaJ,EAAcrC,EAAKyC,QAC9BzC,EAAK0C,YACP,aAAkBL,EAAcrC,EAAK0C,aAEvC,aAAcL,G,oCC/DT,SAAUc,GAAS,G,IAAE/E,EAAI,OAAEgF,EAAQ,WACzCC,EAAajF,GAAQ,oBAAUA,GAC/BkF,EAAiBF,GAAY,oBAAUA,GACvCG,EACJF,GAAcC,GAAkB,sBAAYD,IAAe,sBAAYC,GACnE,GAAiBD,EAAYC,GAC7B,EAEN,OACE,sBAAIrK,UAAU,0BACXsK,EAAO,GAAK,wBAAMtK,UAAU,oCAAoC,KAAKsK,EAAI,MAEzEF,GAAc,sBAAYA,GAAc,gBAAC,KAAa,CAACjF,KAAMiF,EAAYG,MAAM,IAAW,I,oCCZnF,SAAUC,GAAQ,G,IAAEC,EAAW,cAAEC,EAAe,kBACtDC,GACHD,IAAoB,GAAU,oBAAUD,GAAc,oBAAUC,IAEnE,OACE,sBAAI1K,UAAU,gCACX2K,EAAgB,gBAAC,KAAa,CAACxF,KAAMsF,EAAaF,MAAM,IAAW,ICT5D,SAAUK,GAAkB,G,IAAEC,EAAE,KAC5C,OAAO,sBAAI7K,UAAU,0BAA0B6K,GtB8D3C,SAAyBhK,GAC7B,IAAKA,EACH,MAAO,GAET,GAAIA,EAZa,IAaf,OAAOlB,EAAOkB,EAAO,MAChB,GAAIA,EAAQiK,IAGjB,OAFMC,EAAUC,KAAKC,MAAMpK,EAfZ,MAiBE,IAAMlB,EADZkB,EAhBI,IAgBIkK,EACe,KAC7B,GAAIlK,EAjBM,IAmBf,OAAOlB,EADDoL,EAAUC,KAAKC,MAAMpK,EAnBZ,KAoBQ,KAClB,GAAIA,EAAQqK,IAAiB,CAClC,IAAM,EAAUF,KAAKC,MAAMpK,EArBZ,KAsBTkK,EAAUC,KAAKC,OAAOpK,EAtBb,IAsBqB,GAvBrB,KAwBf,OAAOlB,EAAO,EAAS,OAAS,IAAMA,EAAOoL,EAAS,KAExD,IAAMI,EAAQH,KAAKC,MAAMpK,EAxBV,MAyBTuK,EAAUJ,KAAKC,OAAOpK,EAzBb,KAyBqBsK,GA1BnB,KA2BjB,OAAOxL,EAAOwL,EAAO,KAAO,IAAMxL,EAAOyL,EAAS,OsBlFGC,CAAeR,ICFxD,SAAUS,GAAO,G,IAAEtE,EAAE,KACjC,OACE,sBAAIhH,UAAU,eACZ,uBAAKA,UAAU,QAAQgH,I,0BCAf,SAAUuE,GAAW,G,IAC7BC,EAEJ,OAHyC,UAIvC,KAAK,IAAarH,QAChBqH,EAAQ,gBAAC,KAAW,MACpB,MACF,KAAK,IAAapH,WAChBoH,EAAQ,qBAAGxL,UAAU,YACrB,MACF,KAAK,IAAaqE,QAChBmH,EACE,wBAAMxL,UAAU,uBAAuB,oBAAU,mCAEnD,MACF,KAAK,IAAasE,OAChBkH,EACE,wBAAMxL,UAAU,qBAAqB,oBAAU,kCAEjD,MACF,KAAK,IAAauE,SAChBiH,EAAQ,wBAAMxL,UAAU,SAAS,oBAAU,oCAC3C,MACF,QACEwL,EAAQ,GAGZ,OAAO,sBAAIxL,UAAU,qBAAqBwL,GC7B9B,SAAUC,GAAc,G,IAAEC,EAAS,YAC/C,OACE,sBAAI1L,UAAU,aACZ,wBAAMA,UAAU,kCAAkC0L,GAAa,oBAAU,eCSjE,SAAUC,GAAKtL,GACnB,IAAA0G,EAA8D1G,EAA1D,KAAE+C,EAAwD/C,EAA/C,UAAE6H,EAA6C7H,EAAjC,aAAE2H,EAA+B3H,EAAnB,aAAEuL,EAAiBvL,EAAL,aAEjE,OACE,0BACE,gBAACkL,GAAU,CAAC3G,OAAQmC,EAAKnC,SACzB,gBAAC2E,GAAa,CAACxC,KAAMA,IACrB,gBAACuE,GAAM,CAACtE,GAAID,EAAKC,KACjB,gBAACyE,GAAa,CAACC,UAAW3E,EAAK8E,iBAC/B,gBAACrB,GAAO,CACNE,gBAAiBkB,GAAgBA,EAAanB,YAC9CA,YAAa1D,EAAK0D,cAEpB,gBAACP,GAAQ,CAAC/E,KAAM4B,EAAK0D,cACrB,gBAACP,GAAQ,CAACC,SAAUpD,EAAK0D,YAAatF,KAAM4B,EAAK+E,YACjD,gBAAC5B,GAAQ,CAACC,SAAUpD,EAAK0D,YAAatF,KAAM4B,EAAKgF,aACjD,gBAACnB,GAAiB,CAACC,GAAI9D,EAAKiF,kBAC5B,gBAAC,GAAW,CACV5I,UAAWA,EACX8E,aAAcA,EACdF,aAAcA,EACdjB,KAAMA,KC1BA,SAAUkF,GAAM,G,IAAEC,EAAK,QAAE9I,EAAS,YAAEb,EAAO,UAAE2F,EAAY,eAAEF,EAAY,eAC7EhI,EAAY,GAAW,0CAA2C,CACtE,cAAeuC,IAGjB,OACE,uBAAKvC,UAAU,iCACb,yBAAOA,UAAWA,GAChB,6BACE,0BACE,0BAAK,oBAAU,kCACf,0BAAK,oBAAU,gCACf,0BAAK,oBAAU,8BACf,0BAAK,oBAAU,qCACf,+BACA,sBAAIA,UAAU,cAAc,oBAAU,qCACtC,sBAAIA,UAAU,cAAc,oBAAU,mCACtC,sBAAIA,UAAU,cAAc,oBAAU,oCACtC,sBAAIA,UAAU,cAAc,oBAAU,oCACtC,iCAGJ,6BACGkM,EAAM1H,KAAI,SAACuC,EAAMoF,EAAOD,GAAU,OACjC,gBAACP,GAAI,CACHvI,UAAWA,EACXgJ,IAAKrF,EAAKC,GACVkB,aAAcA,EACdF,aAAcA,EACd4D,aAAcO,EAAQ,EAAID,EAAMC,EAAQ,QAAKnJ,EAC7C+D,KAP+B,U,ujBCG7C,eAIE,WAAY1G,GAAZ,MACE,YAAMA,IAAM,K,OAHd,EAAAC,SAAU,EAiCV,EAAA+L,YAAc,WACR,EAAK/L,SACP,EAAKK,SAAS,CAAE4B,SAAS,KAI7B,EAAA+J,UAAY,WACV,EAAK3L,SAAS,CAAE4B,SAAS,IAEzB,IASMgK,E5B5EJ,SAAiCC,QAAA,IAAAA,MAAA,IACrC,IAAMD,EAAkB,GAyCxB,OAvCIC,EAAQ5H,SAAW,IAASlB,IAC9B6I,EAAW3H,OAAS,CAClB,IAAaT,QACb,IAAaC,WACb,IAAaC,QACb,IAAaC,OACb,IAAaC,UACbkI,OACOD,EAAQ5H,SAAW,IAASV,mBACrCqI,EAAW3H,OAAS,CAClB,IAAaR,WACb,IAAaC,QACb,IAAaC,OACb,IAAaC,UACbkI,OAEFF,EAAW3H,OAAS4H,EAAQ5H,OAG1B4H,EAAQzH,WAAa,MACvBwH,EAAWnF,KAAOoF,EAAQzH,UAGxByH,EAAQvH,WAAa,IAASvB,MAChC6I,EAAWG,cAAe,GAGxBF,EAAQzI,iBACVwI,EAAWxI,eAAiB,gCAAsByI,EAAQzI,iBAGxDyI,EAAQxI,gBACVuI,EAAWvI,cAAgB,gCAAsBwI,EAAQxI,gBAGvDwI,EAAQnH,QACVkH,EAAWI,EAAIH,EAAQnH,OAGlBkH,E4BkCcK,CADH,CAAEhI,OARH,EAAKvE,MAAMwM,SAASxH,MAAMT,QAAU,IAAgBA,OAQzCG,SAPT,EAAK1E,MAAMwM,SAASxH,MAAMN,UAAY,IAAgBA,SAOnCE,SANnB,EAAK5E,MAAMwM,SAASxH,MAAMJ,UAAY,IAAgBA,SAMzBlB,eAJ5C,EAAK1D,MAAMwM,SAASxH,MAAMtB,gBAAkB,IAAgBA,eAIAC,cAHxC,EAAK3D,MAAMwM,SAASxH,MAAMrB,eAAiB,IAAgBA,cAGJqB,MAF/D,EAAKhF,MAAMwM,SAASxH,MAAMA,OAAS,IAAgBA,QAK7D,EAAKhF,MAAM+C,YACbmJ,EAAWO,YAAc,EAAKzM,MAAM+C,UAAU4D,IAGhD+F,QAAQC,IAAI,CAAC,YAAYT,GAAa,YAAUA,EAAWO,eAAe3L,MACxE,SAAC,G,IAAG+K,EAAK,WAAItH,EAAM,KACb,EAAKtE,SACP,EAAKK,SAAS,CACZ+F,aAAc9B,EAAOqI,QACrB1K,SAAS,EACTuD,aAAclB,EAAOsI,QACrB1G,YAAa5B,EAAO4B,YACpB0F,MAAK,MAIX,EAAKG,cAIT,EAAAc,mBAAqB,SAACC,GACpB,IAAMC,EAAY,GAAH,MAAQ,EAAKhN,MAAMwM,SAASxH,OAAU+H,GAGrDE,OAAOC,KAAK,KAAiBC,SAAQ,SAACpB,GAChCiB,EAAUjB,KAAS,IAAgBA,WAC9BiB,EAAUjB,MAIjBiB,EAAUtJ,iBACZsJ,EAAUtJ,eAAiB,gCAAsBsJ,EAAUtJ,iBAGzDsJ,EAAUrJ,gBACZqJ,EAAUrJ,cAAgB,gCAAsBqJ,EAAUrJ,gBAG5D,EAAK3D,MAAMoN,OAAO/N,KAAK,CACrB4D,SAAU,EAAKjD,MAAMwM,SAASvJ,SAC9B+B,MAAOgI,KAIX,EAAApF,iBAAmB,SAAClB,GAGlB,OAFA,EAAKpG,SAAS,CAAE4B,SAAS,IAElB,YAAcwE,EAAKC,IAAI7F,MAAK,SAAAuM,GAC7B,EAAKpN,SACP,EAAKK,UAAS,SAAAO,GAAS,MAAC,CACtBgL,O5BpIiBA,E4BoIChL,EAAMgL,M5BpIQyB,E4BoIDD,E5BnIhCxB,EAAM1H,KAAI,SAAAuC,GAAQ,OAACA,EAAKC,KAAO2G,EAAQ3G,GAAK2G,EAA1B,M4BoIjBpL,SAAS,G5BrIb,IAAqB2J,EAAeyB,O4BwInC,EAAKtB,cAGV,EAAAuB,iBAAmB,SAAC7G,GAClB,EAAKoG,mBAAmB,CAAE9H,MAAO0B,EAAKqC,gBAGxC,EAAAyE,kBAAoB,WAClB,EAAKV,mBAAkB,SAClB,KAAe,CAClBvI,OAAQ,IAAaN,OACrBW,SAAU,IAASxB,kBAIvB,EAAAqK,uBAAyB,WACvB,EAAKnN,SAAS,CAAE4B,SAAS,IAEzB,cAAiBpB,MAAK,WAChB,EAAKb,SACP,EAAKgM,cAEN,EAAKD,cA7HR,EAAKnL,MAAQ,CAAEwF,aAAc,EAAGnE,SAAS,EAAMuD,aAAc,EAAGoG,MAAO,IACvE,EAAK6B,mBAAqB,IAAS,EAAKzB,UAAW,K,EA2LvD,OAlMgD,QAU9C,YAAAjL,kBAAA,sBACEC,KAAKhB,SAAU,EAEf,cAAWa,MACT,SAAAsE,GACE,EAAK9E,SAAS,CAAE8E,MAAK,IACrB,EAAK6G,eAEP,gBAIJ,YAAA0B,mBAAA,SAAmBC,GAEfA,EAAU7K,YAAc9B,KAAKjB,MAAM+C,WACnC6K,EAAUpB,WAAavL,KAAKjB,MAAMwM,UAElCvL,KAAKyM,sBAIT,YAAAxM,qBAAA,WACED,KAAKhB,SAAU,GAsGjB,YAAAkB,OAAA,WACU,IAAA4B,EAAc9B,KAAKjB,MAAV,UACX,EAA4BiB,KAAKJ,MAA/BqB,EAAO,UAAEkD,EAAK,QAAEyG,EAAK,QAE7B,IAAKzG,EACH,OACE,uBAAKzF,UAAU,qBACb,qBAAGA,UAAU,aAKnB,IAAM4E,EAAStD,KAAKjB,MAAMwM,SAASxH,MAAMT,QAAU,IAAgBA,OAC7DG,EAAWzD,KAAKjB,MAAMwM,SAASxH,MAAMN,UAAY,IAAgBA,SACjEE,EAAW3D,KAAKjB,MAAMwM,SAASxH,MAAMJ,UAAY,IAAgBA,SACjElB,EAAiB,sBAAYzC,KAAKjB,MAAMwM,SAASxH,MAAMtB,gBACvDC,EAAgB,sBAAY1C,KAAKjB,MAAMwM,SAASxH,MAAMrB,eACtDqB,EAAQ/D,KAAKjB,MAAMwM,SAASxH,MAAMA,OAAS,GAEjD,OACE,uBAAKrF,UAAU,qBACb,gBAACkO,EAAA,EAAW,CAACC,YAAY,qBACzB,gBAAC,IAAM,CAACC,OAAO,EAAOvE,MAAO,oBAAU,2BACvC,gBAAC1G,EAAM,CAACC,UAAWA,IAEnB,gBAACwD,GAAK,CACJxD,UAAWA,EACXsD,aAAcpF,KAAKJ,MAAMwF,aACzBb,mBAAoBvE,KAAKwM,uBACzBnH,cAAerF,KAAKuM,kBACpB/H,aAAcxE,KAAKJ,MAAM4E,aACzBU,YAAalF,KAAKJ,MAAMsF,cAG1B,gBAAC,EAAM,CACLpD,UAAWA,EACX6B,SAAUA,EACV1C,QAASA,EACTyB,cAAeA,EACfD,eAAgBA,EAChBc,eAAgBvD,KAAK6L,mBACrBzH,SAAUpE,KAAKyM,mBACf1I,MAAOA,EACPT,OAAQA,EACRG,SAAUA,EACVU,MAAOA,IAGT,gBAACwG,GAAK,CACJ7I,UAAWA,EACXb,QAASA,EACT2F,aAAc5G,KAAK2G,iBACnBD,aAAc1G,KAAKsM,iBACnB1B,MAAOA,IAGT,gBAACpM,EAAM,CAACoM,MAAOA,MAIvB,EAlMA,CAAgD,iB,kbCjClC,SAAUgC,EAAY,G,IAAEC,EAAW,cAC/C,OACE,gBAAC,IAAmBE,SAAQ,MACzB,SAAC,G,IAAEC,EAAc,iBAAEC,EAAiB,oBAAO,OAC1C,gBAACC,EAAgB,CACfF,eAAgBA,EAChBC,kBAAmBA,EACnBJ,YAAaA,OAavB,+B,+CAmBA,OAnB+B,OAC7B,YAAA9M,kBAAA,WACEC,KAAKjB,MAAMiO,eAAehN,KAAKjB,MAAM8N,cAGvC,YAAAH,mBAAA,SAAmBC,GACbA,EAAUE,cAAgB7M,KAAKjB,MAAM8N,cACvC7M,KAAKjB,MAAMkO,kBAAkBjN,KAAKjB,MAAM8N,aACxC7M,KAAKjB,MAAMiO,eAAeL,EAAUE,eAIxC,YAAA5M,qBAAA,WACED,KAAKjB,MAAMkO,kBAAkBjN,KAAKjB,MAAM8N,cAG1C,YAAA3M,OAAA,WACE,OAAO,MAEX,EAnBA,CAA+B,kB,+lCCHzBiN,EAAY,6BAAkB,WAAM,8CAA4B,aAwBtE,cAGE,WAAYpO,GAAZ,MACE,YAAMA,IAAM,K,OAId,EAAAqO,MAAQ,WACF,EAAKC,OACP,EAAKA,MAAMD,QAEb,EAAKE,gBAGP,EAAAC,iBAAmB,WACjB,EAAKC,gBACL,EAAKzO,MAAM0B,cAASiB,IAGtB,EAAA4L,aAAe,WACb,EAAKjO,SAAS,CACZoO,aAAc,EAAK1O,MAAMQ,OAAS,EAAKR,MAAM0O,cAAgB,IAAIC,KACjEC,iBAAajM,EACbkM,MAAM,KAIV,EAAAJ,cAAgB,WACd,EAAKnO,SAAS,CAAEuO,MAAM,KAGxB,EAAAC,eAAiB,SAACC,EAAWC,GACtBA,EAAUlN,WACb,EAAK2M,gBACL,EAAKzO,MAAM0B,SAASqN,KAIxB,EAAAE,oBAAsB,SAACF,EAAWC,GAChC,EAAK1O,SAAS,CAAEsO,YAAaI,EAAUlN,cAAWa,EAAYoM,KAGhE,EAAAG,yBAA2B,SAAC,G,IAAE1O,EAAK,QACjC,EAAKF,UAAS,SAACO,GAAiB,MAAC,CAAE6N,aAAc,EAAS7N,EAAM6N,aAAhC,QAGlC,EAAAS,wBAA0B,SAAC,G,IAAE3O,EAAK,QAChC,EAAKF,UAAS,SAAAO,GAAS,MAAC,CAAE6N,aAAc,EAAQ7N,EAAM6N,aAA/B,QAGzB,EAAAU,yBAA2B,WACzB,EAAK9O,UAAS,SAAAO,GAAS,MAAC,CAAE6N,aAAc,EAAU7N,EAAM6N,aAAjC,QAGzB,EAAAW,qBAAuB,WACrB,EAAK/O,UAAS,SAAAO,GAAS,MAAC,CAAE6N,aAAc,EAAU7N,EAAM6N,aAAjC,QAnDvB,EAAK7N,MAAQ,CAAE6N,aAAc1O,EAAMQ,OAASR,EAAM0O,cAAgB,IAAIC,KAAQE,MAAM,G,EAoJxF,OAzJuC,OA2DrC,YAAA1N,OAAA,eAUM6N,EAVN,OACQ,EAAiD/N,KAAKjB,MAApDsP,EAAa,gBAAEC,EAAW,cAAEC,EAAO,UAAEhP,EAAK,QAC1CoO,EAAgB3N,KAAKJ,MAAV,YAEb4O,EAAQxO,KAAKjB,MAAM0P,SAAW,IAAIf,KAElCgB,EAAS,IAAM,IACfC,EAAQ,KAAM,IAAIjB,MAAOkB,cAAgB,IAAI,IAAIlB,MAAOkB,cAAgB,GAExEC,EAA2BtP,EAAQ,CAACA,GAAS,GAE7CuP,EAAqBnB,GAAepO,EAEtC8O,GAAiBS,IACnBf,EAAY,CAAEgB,YAAa,CAAEvM,KAAM6L,EAAetM,GAAI+M,IACtDD,EAAazQ,KAAKiQ,IAEhBC,GAAeQ,IACjBf,EAAY,CAAEgB,YAAa,CAAEvM,KAAMsM,EAAoB/M,GAAIuM,IAC3DO,EAAazQ,KAAKkQ,IAGpB,IAAMU,EAAe,IAAM,GAAG9L,IAAI,kBAC5B+L,EAAgB,IAAM,GAAG/L,IAAI,uBAEnC,OACE,gBAAC,IAAmB,CAACgM,eAAgBlP,KAAKwN,eACxC,wBAAM9O,UAAW,EAAW,qBAAsBsB,KAAKjB,MAAML,YAC3D,gBAACyQ,EAAY,CACXzQ,UAAW,EAAW,2BAA4BsB,KAAKjB,MAAMqQ,eAAgB,CAC3E,iBAAkC1N,IAArB1B,KAAKjB,MAAMQ,QAE1B8P,SAAU,SAAAC,GAAQ,OAAC,EAAKjC,MAAN,GAClBkC,KAAMvP,KAAKjB,MAAMwQ,KACjBC,QAASxP,KAAKsN,aACdpJ,YAAalE,KAAKjB,MAAMmF,YACxBuL,UAAU,EACV3J,KAAK,OACLvG,MAAOA,IAET,gBAAC,IAAY,CAACb,UAAU,0BAA0BkD,KAAK,UACjCF,IAArB1B,KAAKjB,MAAMQ,OACV,gBAAC,cAAW,CACVb,UAAU,uCACVgR,UAAW,CAAE9J,KAAM,IACnB9E,QAASd,KAAKuN,mBAGjBvN,KAAKJ,MAAMgO,MACV,uBAAKlP,UAAU,uBACb,uBAAKA,UAAU,2BACb,gBAAC,aAAU,CAACA,UAAU,eAAeoC,QAASd,KAAKmO,0BACjD,gBAAC,IAAe,OAElB,uBAAKzP,UAAU,6BACb,gBAAC,IAAM,CACLA,UAAU,mCACV+B,SAAUT,KAAKiO,yBACflQ,QAAS2Q,EAAOxL,KAAI,SAAAyM,GAAS,MAAC,CAC5BxP,MAAO,4BAAkBwP,GACzBpQ,MAAOoQ,MAETpQ,MAAOS,KAAKJ,MAAM6N,aAAamC,aAEjC,gBAAC,IAAM,CACLlR,UAAU,+CACV+B,SAAUT,KAAKkO,wBACfnQ,QAAS4Q,EAAMzL,KAAI,SAAA2M,GAAQ,MAAC,CAAE1P,MAAOC,OAAOyP,GAAOtQ,MAAxB,MAC3BA,MAAOS,KAAKJ,MAAM6N,aAAamB,iBAGnC,gBAAC,aAAU,CAAClQ,UAAU,eAAeoC,QAASd,KAAKoO,sBACjD,gBAAC,IAAgB,QAGrB,gBAACjB,EAAS,CACR2C,eAAgB,gBAACC,EAAa,MAC9BC,aAAc,CAAExB,MAAK,EAAEyB,OAAQ1B,GAC/B2B,eAAgB,EAChBnC,UAAWA,EACX4B,MAAO3P,KAAKJ,MAAM6N,aAClB0C,cAAe,gBAACJ,EAAa,MAC7BK,WAAYpQ,KAAK6N,eACjBwC,gBAAiBrQ,KAAKgO,oBACtBa,aAAcA,EACdG,aAAcA,EACdC,cAAeA,QAQ/B,EAzJA,CAAuC,iBA2JvC,SAASc,IACP,OAAO,K,MAST,IAAMZ,EAAe,sBAAW,SAAC,GAAE,IAAAE,EAAQ,WAAEiB,EAAI,OAAE/Q,EAAK,QAAKgR,EAAK,IAAjC,6BACzBC,EACJjR,GAAS+Q,EAAKG,WAAWlR,EAAO,CAAEsQ,KAAM,UAAWF,MAAO,QAAS7B,IAAK,YAC1E,OAAO,6BAAWyC,EAAK,CAAEG,IAAKrB,EAAU9P,MAAOiR,GAAkB,U,oBC3OnE,IAAI/S,EAAM,EAAQ,KACFC,EAAU,EAAQ,KAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,qBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,qpDAAspD,KAE/qDD,EAAOK,QAAUA,G,oBCNjB,IAAIT,EAAM,EAAQ,KACFC,EAAU,EAAQ,KAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,qBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,q0BAAs0B,KAE/1BD,EAAOK,QAAUA,G,iCCejB,0KAAO,IAAMyS,EAAW,CACtBvO,IAAK,UACLQ,mBAAoB,0BAGTgO,EAAY,YAEZC,EAAW,CACtBzO,IAAK,UACLD,cAAe,YASJ2O,EAAyB,CACpCxN,OAAQqN,EAAS/N,mBACjBa,SAAUmN,EACVjN,SAAUkN,EAASzO,IACnBK,oBAAgBf,EAChBgB,mBAAehB,EACfqC,MAAO,IAKIgN,EAAiB,K,oZChB9B,yE,OAWE,EAAAC,iBAAmB,SAACxO,GAClB,EAAKzD,MAAM0B,SAAS,CAAE+B,KAAI,EAAET,GAAI,EAAKA,KAGrCkP,YAAW,WACLzO,IAAS,EAAKT,IAAM,EAAKmP,aAC3B,EAAKA,YAAY9D,UAElB,IAGL,EAAA+D,eAAiB,SAACpP,GAChB,EAAKhD,MAAM0B,SAAS,CAAE+B,KAAM,EAAKA,KAAMT,GAAE,K,EA6B7C,OApD4C,OAG1C,sBAAI,mBAAI,C,IAAR,WACE,OAAO/B,KAAKjB,MAAMQ,OAASS,KAAKjB,MAAMQ,MAAMiD,M,gCAG9C,sBAAI,iBAAE,C,IAAN,WACE,OAAOxC,KAAKjB,MAAMQ,OAASS,KAAKjB,MAAMQ,MAAMwC,I,gCAkB9C,YAAA7B,OAAA,sBACE,OACE,uBAAKxB,UAAW,EAAW,6BAA8BsB,KAAKjB,MAAML,YAClE,gBAAC,IAAS,CACR+O,aAAczN,KAAK+B,GAAE,YACX,OACVuM,YAAatO,KAAK+B,GAClB0M,QAASzO,KAAK+B,GACdtB,SAAUT,KAAKgR,iBACf9M,YAAa,oBAAU,cACvB3E,MAAOS,KAAKwC,OAEd,wBAAM9D,UAAU,+CAA+C,oBAAU,QACzE,gBAAC,IAAS,CACR+O,aAAczN,KAAKwC,KAAI,YACb,KACV6L,cAAerO,KAAKwC,KACpB+L,QAASvO,KAAKwC,KACd/B,SAAUT,KAAKmR,eACfjN,YAAa,oBAAU,YACvBwM,IAAK,SAAAU,GAAW,OAAC,EAAKF,YAAN,GAChB3R,MAAOS,KAAK+B,OAKtB,EApDA,CAA4C,iB","file":"js/315.1613385090031.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./background-tasks.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".bt-search-form{display:flex;align-items:flex-end}.bt-search-form>li+li{margin-left:16px}.bt-search-form-label{margin-bottom:4px}.bt-search-form-field{padding:4px 0}.bt-search-form-large{flex:1}.bt-workers-warning-icon{margin-top:5px}.emphasised-measure{font-size:24px;font-weight:300}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { Task, TaskStatuses } from '../../types/tasks';\nimport { ALL_TYPES, CURRENTS, STATUSES } from './constants';\n\nexport interface Query {\n  currents: string;\n  maxExecutedAt?: Date;\n  minSubmittedAt?: Date;\n  query: string;\n  status: string;\n  taskType: string;\n}\n\nexport function updateTask(tasks: Task[], newTask: Task) {\n  return tasks.map(task => (task.id === newTask.id ? newTask : task));\n}\n\nexport function mapFiltersToParameters(filters: Partial<Query> = {}) {\n  const parameters: any = {};\n\n  if (filters.status === STATUSES.ALL) {\n    parameters.status = [\n      TaskStatuses.Pending,\n      TaskStatuses.InProgress,\n      TaskStatuses.Success,\n      TaskStatuses.Failed,\n      TaskStatuses.Canceled\n    ].join();\n  } else if (filters.status === STATUSES.ALL_EXCEPT_PENDING) {\n    parameters.status = [\n      TaskStatuses.InProgress,\n      TaskStatuses.Success,\n      TaskStatuses.Failed,\n      TaskStatuses.Canceled\n    ].join();\n  } else {\n    parameters.status = filters.status;\n  }\n\n  if (filters.taskType !== ALL_TYPES) {\n    parameters.type = filters.taskType;\n  }\n\n  if (filters.currents !== CURRENTS.ALL) {\n    parameters.onlyCurrents = true;\n  }\n\n  if (filters.minSubmittedAt) {\n    parameters.minSubmittedAt = toShortNotSoISOString(filters.minSubmittedAt);\n  }\n\n  if (filters.maxExecutedAt) {\n    parameters.maxExecutedAt = toShortNotSoISOString(filters.maxExecutedAt);\n  }\n\n  if (filters.query) {\n    parameters.q = filters.query;\n  }\n\n  return parameters;\n}\n\nconst ONE_SECOND = 1000;\nconst ONE_MINUTE = 60 * ONE_SECOND;\nconst ONE_HOUR = 60 * ONE_MINUTE;\n\nfunction format(int: number, suffix: string) {\n  return `${int}${suffix}`;\n}\n\nexport function formatDuration(value: number | undefined) {\n  if (!value) {\n    return '';\n  }\n  if (value < ONE_SECOND) {\n    return format(value, 'ms');\n  } else if (value < ONE_SECOND * 10) {\n    const seconds = Math.floor(value / ONE_SECOND);\n    const ms = value - seconds * ONE_SECOND;\n    return seconds + '.' + format(ms, 's');\n  } else if (value < ONE_MINUTE) {\n    const seconds = Math.floor(value / ONE_SECOND);\n    return format(seconds, 's');\n  } else if (value < ONE_MINUTE * 10) {\n    const minutes = Math.floor(value / ONE_MINUTE);\n    const seconds = Math.floor((value - minutes * ONE_MINUTE) / ONE_SECOND);\n    return format(minutes, 'min') + ' ' + format(seconds, 's');\n  }\n  const hours = Math.floor(value / ONE_HOUR);\n  const minutes = Math.floor((value - hours * ONE_HOUR) / ONE_MINUTE);\n  return format(hours, 'h') + ' ' + format(minutes, 'min');\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { Task } from '../../../types/tasks';\n\nconst LIMIT = 1000;\n\ninterface Props {\n  tasks: Task[];\n}\n\nexport default function Footer({ tasks }: Props) {\n  if (tasks.length < LIMIT) {\n    return null;\n  }\n\n  return (\n    <footer className=\"spacer-top note text-center\">\n      {translateWithParameters('max_results_reached', LIMIT)}\n    </footer>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport default function NoWorkersSupportPopup() {\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        <strong>{translate('background_tasks.add_more_workers')}</strong>\n      </p>\n      <p className=\"big-spacer-bottom markdown\">\n        {translate('background_tasks.add_more_workers.text')}\n      </p>\n      <p>\n        <a\n          href=\"https://redirect.sonarsource.com/editions/enterprise.html\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          {translate('learn_more')}\n        </a>\n      </p>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { setWorkerCount } from '../../../api/ce';\n\nconst MAX_WORKERS = 10;\n\ninterface Props {\n  onClose: (newWorkerCount?: number) => void;\n  workerCount: number;\n}\n\ninterface State {\n  newWorkerCount: number;\n  submitting: boolean;\n}\n\nexport default class WorkersForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      newWorkerCount: props.workerCount,\n      submitting: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleClose = () => {\n    this.props.onClose();\n  };\n\n  handleWorkerCountChange = (option: { value: number }) =>\n    this.setState({ newWorkerCount: option.value });\n\n  handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    const { newWorkerCount } = this.state;\n    setWorkerCount(newWorkerCount).then(\n      () => {\n        if (this.mounted) {\n          this.props.onClose(newWorkerCount);\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ submitting: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const options = [];\n    for (let i = 1; i <= MAX_WORKERS; i++) {\n      options.push({ label: String(i), value: i });\n    }\n\n    return (\n      <Modal\n        contentLabel={translate('background_tasks.change_number_of_workers')}\n        onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{translate('background_tasks.change_number_of_workers')}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <Select\n              className=\"input-tiny spacer-top\"\n              clearable={false}\n              onChange={this.handleWorkerCountChange}\n              options={options}\n              searchable={false}\n              value={this.state.newWorkerCount}\n            />\n            <Alert className=\"big-spacer-top\" variant=\"info\">\n              {translate('background_tasks.change_number_of_workers.hint')}\n            </Alert>\n          </div>\n          <footer className=\"modal-foot\">\n            <div>\n              {this.state.submitting && <i className=\"spinner spacer-right\" />}\n              <SubmitButton disabled={this.state.submitting}>{translate('save')}</SubmitButton>\n              <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n            </div>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { EditButton } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport AlertWarnIcon from 'sonar-ui-common/components/icons/AlertWarnIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getWorkers } from '../../../api/ce';\nimport NoWorkersSupportPopup from './NoWorkersSupportPopup';\nimport WorkersForm from './WorkersForm';\n\ninterface State {\n  canSetWorkerCount: boolean;\n  formOpen: boolean;\n  loading: boolean;\n  noSupportPopup: boolean;\n  workerCount: number;\n}\n\nexport default class Workers extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    canSetWorkerCount: false,\n    formOpen: false,\n    loading: true,\n    noSupportPopup: false,\n    workerCount: 1\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadWorkers();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadWorkers = () => {\n    this.setState({ loading: true });\n    getWorkers().then(\n      ({ canSetWorkerCount, value }) => {\n        if (this.mounted) {\n          this.setState({\n            canSetWorkerCount,\n            loading: false,\n            workerCount: value\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  closeForm = (newWorkerCount?: number) =>\n    newWorkerCount\n      ? this.setState({ formOpen: false, workerCount: newWorkerCount })\n      : this.setState({ formOpen: false });\n\n  handleChangeClick = () => {\n    this.setState({ formOpen: true });\n  };\n\n  handleHelpClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.toggleNoSupportPopup();\n  };\n\n  toggleNoSupportPopup = (show?: boolean) => {\n    if (show !== undefined) {\n      this.setState({ noSupportPopup: show });\n    } else {\n      this.setState(state => ({ noSupportPopup: !state.noSupportPopup }));\n    }\n  };\n\n  render() {\n    const { canSetWorkerCount, formOpen, loading, workerCount } = this.state;\n\n    return (\n      <div className=\"display-flex-center\">\n        {!loading && workerCount > 1 && (\n          <Tooltip overlay={translate('background_tasks.number_of_workers.warning')}>\n            <span className=\"display-inline-flex-center little-spacer-right\">\n              <AlertWarnIcon fill=\"#d3d3d3\" />\n            </span>\n          </Tooltip>\n        )}\n\n        <span className=\"text-middle\">\n          {translate('background_tasks.number_of_workers')}\n\n          {loading ? (\n            <i className=\"spinner little-spacer-left\" />\n          ) : (\n            <strong className=\"little-spacer-left\">{workerCount}</strong>\n          )}\n        </span>\n\n        {!loading && canSetWorkerCount && (\n          <Tooltip overlay={translate('background_tasks.change_number_of_workers')}>\n            <EditButton\n              className=\"js-edit button-small spacer-left\"\n              onClick={this.handleChangeClick}\n            />\n          </Tooltip>\n        )}\n\n        {!loading && !canSetWorkerCount && (\n          <HelpTooltip className=\"spacer-left\" overlay={<NoWorkersSupportPopup />} />\n        )}\n\n        {formOpen && <WorkersForm onClose={this.closeForm} workerCount={this.state.workerCount} />}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Workers from './Workers';\n\ninterface Props {\n  component?: any;\n}\n\nexport default function Header(props: Props) {\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('background_tasks.page')}</h1>\n      {!props.component && (\n        <div className=\"page-actions\">\n          <Workers />\n        </div>\n      )}\n      <p className=\"page-description\">\n        {translate('background_tasks.page.description')}\n        <Link\n          className=\"spacer-left\"\n          target=\"_blank\"\n          to={{ pathname: '/documentation/analysis/background-tasks/' }}>\n          {translate('learn_more')}\n        </Link>\n      </p>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { CURRENTS } from '../constants';\n\ninterface Props {\n  value?: string;\n  onChange: (value: string) => void;\n}\n\nexport default class CurrentsFilter extends React.PureComponent<Props> {\n  handleChange = (value: boolean) => {\n    const newValue = value ? CURRENTS.ONLY_CURRENTS : CURRENTS.ALL;\n    this.props.onChange(newValue);\n  };\n\n  render() {\n    const checked = this.props.value === CURRENTS.ONLY_CURRENTS;\n    return (\n      <div className=\"bt-search-form-field\">\n        <Checkbox checked={checked} onCheck={this.handleChange}>\n          <span className=\"little-spacer-left\">{translate('yes')}</span>\n        </Checkbox>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DageRangeInput from '../../../components/controls/DateRangeInput';\n\ninterface Props {\n  maxExecutedAt: Date | undefined;\n  minSubmittedAt: Date | undefined;\n  onChange: (x: { maxExecutedAt?: Date; minSubmittedAt?: Date }) => void;\n}\n\nexport default class DateFilter extends React.PureComponent<Props> {\n  handleDateRangeChange = ({ from, to }: { from?: Date; to?: Date }) => {\n    this.props.onChange({ minSubmittedAt: from, maxExecutedAt: to });\n  };\n\n  render() {\n    const dateRange = { from: this.props.minSubmittedAt, to: this.props.maxExecutedAt };\n    return (\n      <div className=\"nowrap\">\n        <DageRangeInput onChange={this.handleDateRangeChange} value={dateRange} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { TaskStatuses } from '../../../types/tasks';\nimport { STATUSES } from '../constants';\n\ninterface Props {\n  value?: string;\n  onChange: (value?: string) => void;\n}\n\nexport default class StatusFilter extends React.PureComponent<Props> {\n  handleChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = [\n      { value: STATUSES.ALL, label: translate('background_task.status.ALL') },\n      {\n        value: STATUSES.ALL_EXCEPT_PENDING,\n        label: translate('background_task.status.ALL_EXCEPT_PENDING')\n      },\n      { value: TaskStatuses.Pending, label: translate('background_task.status.PENDING') },\n      { value: TaskStatuses.InProgress, label: translate('background_task.status.IN_PROGRESS') },\n      { value: TaskStatuses.Success, label: translate('background_task.status.SUCCESS') },\n      { value: TaskStatuses.Failed, label: translate('background_task.status.FAILED') },\n      { value: TaskStatuses.Canceled, label: translate('background_task.status.CANCELED') }\n    ];\n\n    return (\n      <Select\n        className=\"input-medium\"\n        clearable={false}\n        onChange={this.handleChange}\n        options={options}\n        searchable={false}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALL_TYPES } from '../constants';\n\ninterface Props {\n  value: string;\n  onChange: Function;\n  types: string[];\n}\n\nexport default class TypesFilter extends React.PureComponent<Props> {\n  handleChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const { value, types } = this.props;\n    const options = types.map(t => {\n      return {\n        value: t,\n        label: translate('background_task.type', t)\n      };\n    });\n\n    const allOptions = [\n      { value: ALL_TYPES, label: translate('background_task.type.ALL') },\n      ...options\n    ];\n\n    return (\n      <Select\n        className=\"input-medium\"\n        clearable={false}\n        onChange={this.handleChange}\n        options={allOptions}\n        searchable={false}\n        value={value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DEFAULT_FILTERS } from '../constants';\nimport { Query } from '../utils';\nimport CurrentsFilter from './CurrentsFilter';\nimport DateFilter from './DateFilter';\nimport StatusFilter from './StatusFilter';\nimport TypesFilter from './TypesFilter';\n\ninterface Props {\n  component?: unknown;\n  currents: string;\n  loading: boolean;\n  onFilterUpdate: (changes: Partial<Query>) => void;\n  onReload: () => void;\n  query: string;\n  status: string;\n  taskType: string;\n  maxExecutedAt: Date | undefined;\n  minSubmittedAt: Date | undefined;\n  types: string[];\n}\n\nexport default class Search extends React.PureComponent<Props> {\n  handleStatusChange = (status: string) => {\n    this.props.onFilterUpdate({ status });\n  };\n\n  handleTypeChange = (taskType: string) => {\n    this.props.onFilterUpdate({ taskType });\n  };\n\n  handleCurrentsChange = (currents: string) => {\n    this.props.onFilterUpdate({ currents });\n  };\n\n  handleDateChange = (date: { maxExecutedAt?: Date; minSubmittedAt?: Date }) => {\n    this.props.onFilterUpdate(date);\n  };\n\n  handleQueryChange = (query: string) => {\n    this.props.onFilterUpdate({ query });\n  };\n\n  handleReset = () => {\n    this.props.onFilterUpdate(DEFAULT_FILTERS);\n  };\n\n  renderSearchBox() {\n    const { component, query } = this.props;\n\n    if (component) {\n      // do not render search form on the project-level page\n      return null;\n    }\n\n    return (\n      <li className=\"bt-search-form-large\">\n        <SearchBox\n          onChange={this.handleQueryChange}\n          placeholder={translate('background_tasks.search_by_task_or_component')}\n          value={query}\n        />\n      </li>\n    );\n  }\n\n  render() {\n    const {\n      loading,\n      component,\n      types,\n      status,\n      taskType,\n      currents,\n      minSubmittedAt,\n      maxExecutedAt\n    } = this.props;\n\n    return (\n      <section className=\"big-spacer-top big-spacer-bottom\">\n        <ul className=\"bt-search-form\">\n          <li>\n            <h6 className=\"bt-search-form-label\">{translate('status')}</h6>\n            <StatusFilter onChange={this.handleStatusChange} value={status} />\n          </li>\n          {types.length > 1 && (\n            <li>\n              <h6 className=\"bt-search-form-label\">{translate('type')}</h6>\n              <TypesFilter onChange={this.handleTypeChange} types={types} value={taskType} />\n            </li>\n          )}\n          {!component && (\n            <li>\n              <h6 className=\"bt-search-form-label\">\n                {translate('background_tasks.currents_filter.ONLY_CURRENTS')}\n              </h6>\n              <CurrentsFilter onChange={this.handleCurrentsChange} value={currents} />\n            </li>\n          )}\n          <li>\n            <h6 className=\"bt-search-form-label\">{translate('date')}</h6>\n            <DateFilter\n              maxExecutedAt={maxExecutedAt}\n              minSubmittedAt={minSubmittedAt}\n              onChange={this.handleDateChange}\n            />\n          </li>\n\n          {this.renderSearchBox()}\n\n          <li className=\"nowrap\">\n            <Button className=\"js-reload\" disabled={loading} onClick={this.props.onReload}>\n              {translate('reload')}\n            </Button>{' '}\n            <Button disabled={loading} onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          </li>\n        </ul>\n      </section>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport ConfirmButton from 'sonar-ui-common/components/controls/ConfirmButton';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\nimport { getAppState, Store } from '../../../store/rootReducer';\n\nexport interface Props {\n  isSystemAdmin?: boolean;\n  onCancelAllPending: () => void;\n  pendingCount?: number;\n}\n\nexport function StatPendingCount({ isSystemAdmin, onCancelAllPending, pendingCount }: Props) {\n  if (pendingCount === undefined) {\n    return null;\n  }\n\n  return (\n    <span>\n      <span className=\"emphasised-measure\">{pendingCount}</span>\n      <span className=\"little-spacer-left display-inline-flex-center\">\n        {translate('background_tasks.pending')}\n        {isSystemAdmin && pendingCount > 0 && (\n          <ConfirmButton\n            cancelButtonText={translate('close')}\n            confirmButtonText={translate('background_tasks.cancel_all_tasks.submit')}\n            isDestructive={true}\n            modalBody={translate('background_tasks.cancel_all_tasks.text')}\n            modalHeader={translate('background_tasks.cancel_all_tasks')}\n            onConfirm={onCancelAllPending}>\n            {({ onClick }) => (\n              <Tooltip overlay={translate('background_tasks.cancel_all_tasks')}>\n                <ClearButton className=\"little-spacer-left\" color={colors.red} onClick={onClick} />\n              </Tooltip>\n            )}\n          </ConfirmButton>\n        )}\n      </span>\n    </span>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  isSystemAdmin: getAppState(state).canAdmin\n});\n\nexport default connect(mapStateToProps)(StatPendingCount);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\n\n// Do not display the pending time for values smaller than this threshold (in ms)\nconst MIN_PENDING_TIME_THRESHOLD = 1000;\n\nexport interface Props {\n  className?: string;\n  component?: Pick<T.Component, 'key'>;\n  pendingCount?: number;\n  pendingTime?: number;\n}\n\nexport default function StatPendingTime({ className, pendingCount, pendingTime }: Props) {\n  if (!pendingTime || !pendingCount || pendingTime < MIN_PENDING_TIME_THRESHOLD) {\n    return null;\n  }\n  return (\n    <span className={className}>\n      <span className=\"emphasised-measure\">{formatMeasure(pendingTime, 'MILLISEC')}</span>\n      <span className=\"little-spacer-left\">{translate('background_tasks.pending_time')}</span>\n      <HelpTooltip\n        className=\"little-spacer-left\"\n        overlay={translate('background_tasks.pending_time.description')}\n      />\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  failingCount?: number;\n  onShowFailing: () => void;\n}\n\nexport default function StatStillFailing({ className, failingCount, onShowFailing }: Props) {\n  if (failingCount === undefined) {\n    return null;\n  }\n\n  return (\n    <span className={className}>\n      {failingCount > 0 ? (\n        <ButtonLink className=\"emphasised-measure text-baseline\" onClick={onShowFailing}>\n          {failingCount}\n        </ButtonLink>\n      ) : (\n        <span className=\"emphasised-measure\">{failingCount}</span>\n      )}\n      <span className=\"little-spacer-left\">{translate('background_tasks.failures')}</span>\n      <HelpTooltip\n        className=\"little-spacer-left\"\n        overlay={translate('background_tasks.failing_count')}\n      />\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport StatPendingCount from './StatPendingCount';\nimport StatPendingTime from './StatPendingTime';\nimport StatStillFailing from './StatStillFailing';\n\nexport interface Props {\n  component?: Pick<T.Component, 'key'>;\n  failingCount?: number;\n  onCancelAllPending: () => void;\n  onShowFailing: () => void;\n  pendingCount?: number;\n  pendingTime?: number;\n}\n\nexport default function Stats({ component, pendingCount, pendingTime, ...props }: Props) {\n  return (\n    <section className=\"big-spacer-top big-spacer-bottom\">\n      <StatPendingCount onCancelAllPending={props.onCancelAllPending} pendingCount={pendingCount} />\n      {!component && (\n        <StatPendingTime\n          className=\"huge-spacer-left\"\n          pendingCount={pendingCount}\n          pendingTime={pendingTime}\n        />\n      )}\n      {!component && (\n        <StatStillFailing\n          className=\"huge-spacer-left\"\n          failingCount={props.failingCount}\n          onShowFailing={props.onShowFailing}\n        />\n      )}\n    </section>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getTask } from '../../../api/ce';\nimport { Task } from '../../../types/tasks';\n\ninterface Props {\n  onClose: () => void;\n  task: Pick<Task, 'componentName' | 'id' | 'type'>;\n}\n\ninterface State {\n  scannerContext?: string;\n}\n\nexport default class ScannerContext extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadScannerContext();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadScannerContext() {\n    getTask(this.props.task.id, ['scannerContext']).then(task => {\n      if (this.mounted) {\n        this.setState({ scannerContext: task.scannerContext });\n      }\n    });\n  }\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  render() {\n    const { task } = this.props;\n    const { scannerContext } = this.state;\n\n    return (\n      <Modal contentLabel=\"scanner context\" onRequestClose={this.props.onClose} size=\"large\">\n        <div className=\"modal-head\">\n          <h2>\n            {translate('background_tasks.scanner_context')}\n            {': '}\n            {task.componentName}\n            {' ['}\n            {translate('background_task.type', task.type)}\n            {']'}\n          </h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          {scannerContext != null ? (\n            <pre className=\"js-task-scanner-context\">{scannerContext}</pre>\n          ) : (\n            <i className=\"spinner\" />\n          )}\n        </div>\n\n        <div className=\"modal-foot\">\n          <a className=\"js-modal-close\" href=\"#\" onClick={this.handleCloseClick}>\n            {translate('close')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getTask } from '../../../api/ce';\nimport { Task } from '../../../types/tasks';\n\ninterface Props {\n  onClose: () => void;\n  task: Pick<Task, 'componentName' | 'errorMessage' | 'id' | 'type'>;\n}\n\ninterface State {\n  loading: boolean;\n  stacktrace?: string;\n}\n\nexport default class Stacktrace extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadStacktrace();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadStacktrace() {\n    getTask(this.props.task.id, ['stacktrace']).then(\n      task => {\n        if (this.mounted) {\n          this.setState({ loading: false, stacktrace: task.errorStacktrace });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  render() {\n    const { task } = this.props;\n    const { loading, stacktrace } = this.state;\n\n    return (\n      <Modal contentLabel=\"stacktrace\" onRequestClose={this.props.onClose} size=\"large\">\n        <div className=\"modal-head\">\n          <h2>\n            {translate('background_tasks.error_stacktrace')}\n            {': '}\n            {task.componentName}\n            {' ['}\n            {translate('background_task.type', task.type)}\n            {']'}\n          </h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          {loading ? (\n            <i className=\"spinner\" />\n          ) : stacktrace ? (\n            <div>\n              <h4 className=\"spacer-bottom\">{translate('background_tasks.error_stacktrace')}</h4>\n              <pre className=\"js-task-stacktrace\">{stacktrace}</pre>\n            </div>\n          ) : (\n            <div>\n              <h4 className=\"spacer-bottom\">{translate('background_tasks.error_message')}</h4>\n              <pre className=\"js-task-error-message\">{task.errorMessage}</pre>\n            </div>\n          )}\n        </div>\n\n        <div className=\"modal-foot\">\n          <a className=\"js-modal-close\" href=\"#\" onClick={this.handleCloseClick}>\n            {translate('close')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { Task, TaskStatuses } from '../../../types/tasks';\nimport ScannerContext from './ScannerContext';\nimport Stacktrace from './Stacktrace';\n\nconst AnalysisWarningsModal = lazyLoadComponent(\n  () => import('../../../components/common/AnalysisWarningsModal'),\n  'AnalysisWarningsModal'\n);\n\ninterface Props {\n  component?: unknown;\n  onCancelTask: (task: Task) => Promise<void>;\n  onFilterTask: (task: Task) => void;\n  task: Task;\n}\n\ninterface State {\n  cancelTaskOpen: boolean;\n  scannerContextOpen: boolean;\n  stacktraceOpen: boolean;\n  warningsOpen: boolean;\n}\n\nexport default class TaskActions extends React.PureComponent<Props, State> {\n  state: State = {\n    cancelTaskOpen: false,\n    scannerContextOpen: false,\n    stacktraceOpen: false,\n    warningsOpen: false\n  };\n\n  handleFilterClick = () => {\n    this.props.onFilterTask(this.props.task);\n  };\n\n  handleCancelTask = () => {\n    return this.props.onCancelTask(this.props.task);\n  };\n\n  handleCancelClick = () => {\n    this.setState({ cancelTaskOpen: true });\n  };\n\n  handleShowScannerContextClick = () => {\n    this.setState({ scannerContextOpen: true });\n  };\n\n  closeCancelTask = () => {\n    this.setState({ cancelTaskOpen: false });\n  };\n\n  closeScannerContext = () => {\n    this.setState({ scannerContextOpen: false });\n  };\n\n  handleShowStacktraceClick = () => {\n    this.setState({ stacktraceOpen: true });\n  };\n\n  closeStacktrace = () => {\n    this.setState({ stacktraceOpen: false });\n  };\n\n  handleShowWarningsClick = () => {\n    this.setState({ warningsOpen: true });\n  };\n\n  closeWarnings = () => {\n    this.setState({ warningsOpen: false });\n  };\n\n  render() {\n    const { component, task } = this.props;\n\n    const canFilter = component === undefined;\n    const canCancel = task.status === TaskStatuses.Pending;\n    const canShowStacktrace = task.errorMessage !== undefined;\n    const canShowWarnings = task.warningCount !== undefined && task.warningCount > 0;\n    const hasActions =\n      canFilter || canCancel || task.hasScannerContext || canShowStacktrace || canShowWarnings;\n\n    if (!hasActions) {\n      return <td>&nbsp;</td>;\n    }\n\n    return (\n      <td className=\"thin nowrap\">\n        <ActionsDropdown className=\"js-task-action\">\n          {canFilter && task.componentName && (\n            <ActionsDropdownItem className=\"js-task-filter\" onClick={this.handleFilterClick}>\n              {translateWithParameters(\n                'background_tasks.filter_by_component_x',\n                task.componentName\n              )}\n            </ActionsDropdownItem>\n          )}\n          {canCancel && (\n            <ActionsDropdownItem\n              className=\"js-task-cancel\"\n              destructive={true}\n              onClick={this.handleCancelClick}>\n              {translate('background_tasks.cancel_task')}\n            </ActionsDropdownItem>\n          )}\n          {task.hasScannerContext && (\n            <ActionsDropdownItem\n              className=\"js-task-show-scanner-context\"\n              onClick={this.handleShowScannerContextClick}>\n              {translate('background_tasks.show_scanner_context')}\n            </ActionsDropdownItem>\n          )}\n          {canShowStacktrace && (\n            <ActionsDropdownItem\n              className=\"js-task-show-stacktrace\"\n              onClick={this.handleShowStacktraceClick}>\n              {translate('background_tasks.show_stacktrace')}\n            </ActionsDropdownItem>\n          )}\n          {canShowWarnings && (\n            <ActionsDropdownItem\n              className=\"js-task-show-warnings\"\n              onClick={this.handleShowWarningsClick}>\n              {translate('background_tasks.show_warnings')}\n            </ActionsDropdownItem>\n          )}\n        </ActionsDropdown>\n\n        {this.state.cancelTaskOpen && (\n          <ConfirmModal\n            cancelButtonText={translate('close')}\n            confirmButtonText={translate('background_tasks.cancel_task')}\n            header={translate('background_tasks.cancel_task')}\n            isDestructive={true}\n            onClose={this.closeCancelTask}\n            onConfirm={this.handleCancelTask}>\n            {translate('background_tasks.cancel_task.text')}\n          </ConfirmModal>\n        )}\n\n        {this.state.scannerContextOpen && (\n          <ScannerContext onClose={this.closeScannerContext} task={task} />\n        )}\n\n        {this.state.stacktraceOpen && <Stacktrace onClose={this.closeStacktrace} task={task} />}\n\n        {this.state.warningsOpen && (\n          <AnalysisWarningsModal\n            componentKey={task.componentKey}\n            onClose={this.closeWarnings}\n            taskId={task.id}\n          />\n        )}\n      </td>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  type: string;\n}\n\nexport default function TaskType({ type }: Props) {\n  return (\n    <span className=\"display-inline-block note\">\n      {'['}\n      {translate('background_task.type', type)}\n      {']'}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport {\n  getBranchUrl,\n  getPortfolioUrl,\n  getProjectUrl,\n  getPullRequestUrl\n} from '../../../helpers/urls';\nimport { isPortfolioLike } from '../../../types/component';\nimport { Task } from '../../../types/tasks';\nimport TaskType from './TaskType';\n\ninterface Props {\n  task: Task;\n}\n\nexport default function TaskComponent({ task }: Props) {\n  if (!task.componentKey) {\n    return (\n      <td>\n        <span className=\"note\">{task.id}</span>\n        <TaskType type={task.type} />\n      </td>\n    );\n  }\n\n  return (\n    <td>\n      {task.branch !== undefined && <BranchIcon className=\"little-spacer-right\" />}\n      {task.pullRequest !== undefined && <PullRequestIcon className=\"little-spacer-right\" />}\n\n      {!task.branch && !task.pullRequest && task.componentQualifier && (\n        <span className=\"little-spacer-right\">\n          <QualifierIcon qualifier={task.componentQualifier} />\n        </span>\n      )}\n\n      {task.componentName && (\n        <Link className=\"spacer-right\" to={getTaskComponentUrl(task.componentKey, task)}>\n          {task.componentName}\n\n          {task.branch && (\n            <span className=\"text-limited text-text-top\" title={task.branch}>\n              <span style={{ marginLeft: 5, marginRight: 5 }}>/</span>\n              {task.branch}\n            </span>\n          )}\n\n          {task.pullRequest && (\n            <span className=\"text-limited text-text-top\" title={task.pullRequestTitle}>\n              <span style={{ marginLeft: 5, marginRight: 5 }}>/</span>\n              {task.pullRequest}\n            </span>\n          )}\n        </Link>\n      )}\n\n      <TaskType type={task.type} />\n    </td>\n  );\n}\n\nfunction getTaskComponentUrl(componentKey: string, task: Task) {\n  if (isPortfolioLike(task.componentQualifier)) {\n    return getPortfolioUrl(componentKey);\n  } else if (task.branch) {\n    return getBranchUrl(componentKey, task.branch);\n  } else if (task.pullRequest) {\n    return getPullRequestUrl(componentKey, task.pullRequest);\n  }\n  return getProjectUrl(componentKey);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as differenceInDays from 'date-fns/difference_in_days';\nimport * as React from 'react';\nimport TimeFormatter from 'sonar-ui-common/components/intl/TimeFormatter';\nimport { isValidDate, parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  date?: string;\n  baseDate?: string;\n}\n\nexport default function TaskDate({ date, baseDate }: Props) {\n  const parsedDate = date && parseDate(date);\n  const parsedBaseDate = baseDate && parseDate(baseDate);\n  const diff =\n    parsedDate && parsedBaseDate && isValidDate(parsedDate) && isValidDate(parsedBaseDate)\n      ? differenceInDays(parsedDate, parsedBaseDate)\n      : 0;\n\n  return (\n    <td className=\"thin nowrap text-right\">\n      {diff > 0 && <span className=\"text-warning little-spacer-right\">{`(+${diff}d)`}</span>}\n\n      {parsedDate && isValidDate(parsedDate) ? <TimeFormatter date={parsedDate} long={true} /> : ''}\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as isSameDay from 'date-fns/is_same_day';\nimport * as React from 'react';\nimport DateFormatter from 'sonar-ui-common/components/intl/DateFormatter';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  submittedAt: string;\n  prevSubmittedAt?: string;\n}\n\nexport default function TaskDay({ submittedAt, prevSubmittedAt }: Props) {\n  const shouldDisplay =\n    !prevSubmittedAt || !isSameDay(parseDate(submittedAt), parseDate(prevSubmittedAt));\n\n  return (\n    <td className=\"thin nowrap text-right small\">\n      {shouldDisplay ? <DateFormatter date={submittedAt} long={true} /> : ''}\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { formatDuration } from '../utils';\n\ninterface Props {\n  ms?: number;\n}\n\nexport default function TaskExecutionTime({ ms }: Props) {\n  return <td className=\"thin nowrap text-right\">{ms && formatDuration(ms)}</td>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface Props {\n  id: string;\n}\n\nexport default function TaskId({ id }: Props) {\n  return (\n    <td className=\"thin nowrap\">\n      <div className=\"note\">{id}</div>\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PendingIcon from 'sonar-ui-common/components/icons/PendingIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { TaskStatuses } from '../../../types/tasks';\n\ninterface Props {\n  status: string;\n}\n\nexport default function TaskStatus({ status }: Props) {\n  let inner;\n\n  switch (status) {\n    case TaskStatuses.Pending:\n      inner = <PendingIcon />;\n      break;\n    case TaskStatuses.InProgress:\n      inner = <i className=\"spinner\" />;\n      break;\n    case TaskStatuses.Success:\n      inner = (\n        <span className=\"badge badge-success\">{translate('background_task.status.SUCCESS')}</span>\n      );\n      break;\n    case TaskStatuses.Failed:\n      inner = (\n        <span className=\"badge badge-error\">{translate('background_task.status.FAILED')}</span>\n      );\n      break;\n    case TaskStatuses.Canceled:\n      inner = <span className=\"badge\">{translate('background_task.status.CANCELED')}</span>;\n      break;\n    default:\n      inner = '';\n  }\n\n  return <td className=\"thin spacer-right\">{inner}</td>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  submitter?: string;\n}\n\nexport default function TaskSubmitter({ submitter }: Props) {\n  return (\n    <td className=\"thin note\">\n      <span className=\"text-limited-small text-bottom\">{submitter || translate('anonymous')}</span>\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Task as ITask } from '../../../types/tasks';\nimport TaskActions from './TaskActions';\nimport TaskComponent from './TaskComponent';\nimport TaskDate from './TaskDate';\nimport TaskDay from './TaskDay';\nimport TaskExecutionTime from './TaskExecutionTime';\nimport TaskId from './TaskId';\nimport TaskStatus from './TaskStatus';\nimport TaskSubmitter from './TaskSubmitter';\n\ninterface Props {\n  component?: unknown;\n  onCancelTask: (task: ITask) => Promise<void>;\n  onFilterTask: (task: ITask) => void;\n  task: ITask;\n  previousTask?: ITask;\n}\n\nexport default function Task(props: Props) {\n  const { task, component, onCancelTask, onFilterTask, previousTask } = props;\n\n  return (\n    <tr>\n      <TaskStatus status={task.status} />\n      <TaskComponent task={task} />\n      <TaskId id={task.id} />\n      <TaskSubmitter submitter={task.submitterLogin} />\n      <TaskDay\n        prevSubmittedAt={previousTask && previousTask.submittedAt}\n        submittedAt={task.submittedAt}\n      />\n      <TaskDate date={task.submittedAt} />\n      <TaskDate baseDate={task.submittedAt} date={task.startedAt} />\n      <TaskDate baseDate={task.submittedAt} date={task.executedAt} />\n      <TaskExecutionTime ms={task.executionTimeMs} />\n      <TaskActions\n        component={component}\n        onCancelTask={onCancelTask}\n        onFilterTask={onFilterTask}\n        task={task}\n      />\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Task as ITask } from '../../../types/tasks';\nimport Task from './Task';\n\ninterface Props {\n  tasks: ITask[];\n  component?: unknown;\n  loading: boolean;\n  onCancelTask: (task: ITask) => Promise<void>;\n  onFilterTask: (task: ITask) => void;\n}\n\nexport default function Tasks({ tasks, component, loading, onCancelTask, onFilterTask }: Props) {\n  const className = classNames('data zebra zebra-hover background-tasks', {\n    'new-loading': loading\n  });\n\n  return (\n    <div className=\"boxed-group boxed-group-inner\">\n      <table className={className}>\n        <thead>\n          <tr>\n            <th>{translate('background_tasks.table.status')}</th>\n            <th>{translate('background_tasks.table.task')}</th>\n            <th>{translate('background_tasks.table.id')}</th>\n            <th>{translate('background_tasks.table.submitter')}</th>\n            <th>&nbsp;</th>\n            <th className=\"text-right\">{translate('background_tasks.table.submitted')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.started')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.finished')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.duration')}</th>\n            <th>&nbsp;</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tasks.map((task, index, tasks) => (\n            <Task\n              component={component}\n              key={task.id}\n              onCancelTask={onCancelTask}\n              onFilterTask={onFilterTask}\n              previousTask={index > 0 ? tasks[index - 1] : undefined}\n              task={task}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseAsDate } from 'sonar-ui-common/helpers/query';\nimport {\n  cancelAllTasks,\n  cancelTask as cancelTaskAPI,\n  getActivity,\n  getStatus,\n  getTypes\n} from '../../../api/ce';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { Location, Router } from '../../../components/hoc/withRouter';\nimport { Task, TaskStatuses } from '../../../types/tasks';\nimport '../background-tasks.css';\nimport { CURRENTS, DEBOUNCE_DELAY, DEFAULT_FILTERS } from '../constants';\nimport { mapFiltersToParameters, Query, updateTask } from '../utils';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Search from './Search';\nimport Stats from './Stats';\nimport Tasks from './Tasks';\n\ninterface Props {\n  component?: Pick<T.Component, 'key'> & { id: string }; // id should be removed when api/ce/activity accept a component key instead of an id\n  location: Location;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  failingCount: number;\n  loading: boolean;\n  pendingCount: number;\n  pendingTime?: number;\n  tasks: Task[];\n  types?: string[];\n}\n\nexport default class BackgroundTasksApp extends React.PureComponent<Props, State> {\n  loadTasksDebounced: () => void;\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { failingCount: 0, loading: true, pendingCount: 0, tasks: [] };\n    this.loadTasksDebounced = debounce(this.loadTasks, DEBOUNCE_DELAY);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    getTypes().then(\n      types => {\n        this.setState({ types });\n        this.loadTasks();\n      },\n      () => {}\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.component !== this.props.component ||\n      prevProps.location !== this.props.location\n    ) {\n      this.loadTasksDebounced();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  loadTasks = () => {\n    this.setState({ loading: true });\n\n    const status = this.props.location.query.status || DEFAULT_FILTERS.status;\n    const taskType = this.props.location.query.taskType || DEFAULT_FILTERS.taskType;\n    const currents = this.props.location.query.currents || DEFAULT_FILTERS.currents;\n    const minSubmittedAt =\n      this.props.location.query.minSubmittedAt || DEFAULT_FILTERS.minSubmittedAt;\n    const maxExecutedAt = this.props.location.query.maxExecutedAt || DEFAULT_FILTERS.maxExecutedAt;\n    const query = this.props.location.query.query || DEFAULT_FILTERS.query;\n\n    const filters = { status, taskType, currents, minSubmittedAt, maxExecutedAt, query };\n    const parameters = mapFiltersToParameters(filters);\n\n    if (this.props.component) {\n      parameters.componentId = this.props.component.id;\n    }\n\n    Promise.all([getActivity(parameters), getStatus(parameters.componentId)]).then(\n      ([{ tasks }, status]) => {\n        if (this.mounted) {\n          this.setState({\n            failingCount: status.failing,\n            loading: false,\n            pendingCount: status.pending,\n            pendingTime: status.pendingTime,\n            tasks\n          });\n        }\n      },\n      this.stopLoading\n    );\n  };\n\n  handleFilterUpdate = (nextState: Partial<Query>) => {\n    const nextQuery = { ...this.props.location.query, ...nextState };\n\n    // remove defaults\n    Object.keys(DEFAULT_FILTERS).forEach((key: keyof typeof DEFAULT_FILTERS) => {\n      if (nextQuery[key] === DEFAULT_FILTERS[key]) {\n        delete nextQuery[key];\n      }\n    });\n\n    if (nextQuery.minSubmittedAt) {\n      nextQuery.minSubmittedAt = toShortNotSoISOString(nextQuery.minSubmittedAt);\n    }\n\n    if (nextQuery.maxExecutedAt) {\n      nextQuery.maxExecutedAt = toShortNotSoISOString(nextQuery.maxExecutedAt);\n    }\n\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: nextQuery\n    });\n  };\n\n  handleCancelTask = (task: Task) => {\n    this.setState({ loading: true });\n\n    return cancelTaskAPI(task.id).then(nextTask => {\n      if (this.mounted) {\n        this.setState(state => ({\n          tasks: updateTask(state.tasks, nextTask),\n          loading: false\n        }));\n      }\n    }, this.stopLoading);\n  };\n\n  handleFilterTask = (task: Task) => {\n    this.handleFilterUpdate({ query: task.componentKey });\n  };\n\n  handleShowFailing = () => {\n    this.handleFilterUpdate({\n      ...DEFAULT_FILTERS,\n      status: TaskStatuses.Failed,\n      currents: CURRENTS.ONLY_CURRENTS\n    });\n  };\n\n  handleCancelAllPending = () => {\n    this.setState({ loading: true });\n\n    cancelAllTasks().then(() => {\n      if (this.mounted) {\n        this.loadTasks();\n      }\n    }, this.stopLoading);\n  };\n\n  render() {\n    const { component } = this.props;\n    const { loading, types, tasks } = this.state;\n\n    if (!types) {\n      return (\n        <div className=\"page page-limited\">\n          <i className=\"spinner\" />\n        </div>\n      );\n    }\n\n    const status = this.props.location.query.status || DEFAULT_FILTERS.status;\n    const taskType = this.props.location.query.taskType || DEFAULT_FILTERS.taskType;\n    const currents = this.props.location.query.currents || DEFAULT_FILTERS.currents;\n    const minSubmittedAt = parseAsDate(this.props.location.query.minSubmittedAt);\n    const maxExecutedAt = parseAsDate(this.props.location.query.maxExecutedAt);\n    const query = this.props.location.query.query || '';\n\n    return (\n      <div className=\"page page-limited\">\n        <Suggestions suggestions=\"background_tasks\" />\n        <Helmet defer={false} title={translate('background_tasks.page')} />\n        <Header component={component} />\n\n        <Stats\n          component={component}\n          failingCount={this.state.failingCount}\n          onCancelAllPending={this.handleCancelAllPending}\n          onShowFailing={this.handleShowFailing}\n          pendingCount={this.state.pendingCount}\n          pendingTime={this.state.pendingTime}\n        />\n\n        <Search\n          component={component}\n          currents={currents}\n          loading={loading}\n          maxExecutedAt={maxExecutedAt}\n          minSubmittedAt={minSubmittedAt}\n          onFilterUpdate={this.handleFilterUpdate}\n          onReload={this.loadTasksDebounced}\n          query={query}\n          status={status}\n          taskType={taskType}\n          types={types}\n        />\n\n        <Tasks\n          component={component}\n          loading={loading}\n          onCancelTask={this.handleCancelTask}\n          onFilterTask={this.handleFilterTask}\n          tasks={tasks}\n        />\n\n        <Footer tasks={tasks} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as addMonths from 'date-fns/add_months';\nimport * as setMonth from 'date-fns/set_month';\nimport * as setYear from 'date-fns/set_year';\nimport * as subMonths from 'date-fns/sub_months';\nimport { range } from 'lodash';\nimport * as React from 'react';\nimport { DayModifiers, Modifier, Modifiers } from 'react-day-picker';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { ButtonIcon, ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport OutsideClickHandler from 'sonar-ui-common/components/controls/OutsideClickHandler';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport CalendarIcon from 'sonar-ui-common/components/icons/CalendarIcon';\nimport ChevronLeftIcon from 'sonar-ui-common/components/icons/ChevronLeftIcon';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport {\n  getShortMonthName,\n  getShortWeekDayName,\n  getWeekDayName\n} from 'sonar-ui-common/helpers/l10n';\nimport './DayPicker.css';\nimport './styles.css';\n\nconst DayPicker = lazyLoadComponent(() => import('react-day-picker'), 'DayPicker');\n\ninterface Props {\n  className?: string;\n  currentMonth?: Date;\n  highlightFrom?: Date;\n  highlightTo?: Date;\n  inputClassName?: string;\n  maxDate?: Date;\n  minDate?: Date;\n  name?: string;\n  onChange: (date: Date | undefined) => void;\n  placeholder: string;\n  value?: Date;\n}\n\ninterface State {\n  currentMonth: Date;\n  open: boolean;\n  lastHovered?: Date;\n}\n\ntype Week = [string, string, string, string, string, string, string];\n\nexport default class DateInput extends React.PureComponent<Props, State> {\n  input?: HTMLInputElement | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { currentMonth: props.value || props.currentMonth || new Date(), open: false };\n  }\n\n  focus = () => {\n    if (this.input) {\n      this.input.focus();\n    }\n    this.openCalendar();\n  };\n\n  handleResetClick = () => {\n    this.closeCalendar();\n    this.props.onChange(undefined);\n  };\n\n  openCalendar = () => {\n    this.setState({\n      currentMonth: this.props.value || this.props.currentMonth || new Date(),\n      lastHovered: undefined,\n      open: true\n    });\n  };\n\n  closeCalendar = () => {\n    this.setState({ open: false });\n  };\n\n  handleDayClick = (day: Date, modifiers: DayModifiers) => {\n    if (!modifiers.disabled) {\n      this.closeCalendar();\n      this.props.onChange(day);\n    }\n  };\n\n  handleDayMouseEnter = (day: Date, modifiers: DayModifiers) => {\n    this.setState({ lastHovered: modifiers.disabled ? undefined : day });\n  };\n\n  handleCurrentMonthChange = ({ value }: { value: number }) => {\n    this.setState((state: State) => ({ currentMonth: setMonth(state.currentMonth, value) }));\n  };\n\n  handleCurrentYearChange = ({ value }: { value: number }) => {\n    this.setState(state => ({ currentMonth: setYear(state.currentMonth, value) }));\n  };\n\n  handlePreviousMonthClick = () => {\n    this.setState(state => ({ currentMonth: subMonths(state.currentMonth, 1) }));\n  };\n\n  handleNextMonthClick = () => {\n    this.setState(state => ({ currentMonth: addMonths(state.currentMonth, 1) }));\n  };\n\n  render() {\n    const { highlightFrom, highlightTo, minDate, value } = this.props;\n    const { lastHovered } = this.state;\n\n    const after = this.props.maxDate || new Date();\n\n    const months = range(12);\n    const years = range(new Date().getFullYear() - 10, new Date().getFullYear() + 1);\n\n    const selectedDays: Modifier[] = value ? [value] : [];\n    let modifiers: Partial<Modifiers> | undefined;\n    const lastHoveredOrValue = lastHovered || value;\n\n    if (highlightFrom && lastHoveredOrValue) {\n      modifiers = { highlighted: { from: highlightFrom, to: lastHoveredOrValue } };\n      selectedDays.push(highlightFrom);\n    }\n    if (highlightTo && lastHoveredOrValue) {\n      modifiers = { highlighted: { from: lastHoveredOrValue, to: highlightTo } };\n      selectedDays.push(highlightTo);\n    }\n\n    const weekdaysLong = range(7).map(getWeekDayName) as Week;\n    const weekdaysShort = range(7).map(getShortWeekDayName) as Week;\n\n    return (\n      <OutsideClickHandler onClickOutside={this.closeCalendar}>\n        <span className={classNames('date-input-control', this.props.className)}>\n          <InputWrapper\n            className={classNames('date-input-control-input', this.props.inputClassName, {\n              'is-filled': this.props.value !== undefined\n            })}\n            innerRef={node => (this.input = node)}\n            name={this.props.name}\n            onFocus={this.openCalendar}\n            placeholder={this.props.placeholder}\n            readOnly={true}\n            type=\"text\"\n            value={value}\n          />\n          <CalendarIcon className=\"date-input-control-icon\" fill=\"\" />\n          {this.props.value !== undefined && (\n            <ClearButton\n              className=\"button-tiny date-input-control-reset\"\n              iconProps={{ size: 12 }}\n              onClick={this.handleResetClick}\n            />\n          )}\n          {this.state.open && (\n            <div className=\"date-input-calendar\">\n              <nav className=\"date-input-calendar-nav\">\n                <ButtonIcon className=\"button-small\" onClick={this.handlePreviousMonthClick}>\n                  <ChevronLeftIcon />\n                </ButtonIcon>\n                <div className=\"date-input-calender-month\">\n                  <Select\n                    className=\"date-input-calender-month-select\"\n                    onChange={this.handleCurrentMonthChange}\n                    options={months.map(month => ({\n                      label: getShortMonthName(month),\n                      value: month\n                    }))}\n                    value={this.state.currentMonth.getMonth()}\n                  />\n                  <Select\n                    className=\"date-input-calender-month-select spacer-left\"\n                    onChange={this.handleCurrentYearChange}\n                    options={years.map(year => ({ label: String(year), value: year }))}\n                    value={this.state.currentMonth.getFullYear()}\n                  />\n                </div>\n                <ButtonIcon className=\"button-small\" onClick={this.handleNextMonthClick}>\n                  <ChevronRightIcon />\n                </ButtonIcon>\n              </nav>\n              <DayPicker\n                captionElement={<NullComponent />}\n                disabledDays={{ after, before: minDate }}\n                firstDayOfWeek={1}\n                modifiers={modifiers}\n                month={this.state.currentMonth}\n                navbarElement={<NullComponent />}\n                onDayClick={this.handleDayClick}\n                onDayMouseEnter={this.handleDayMouseEnter}\n                selectedDays={selectedDays}\n                weekdaysLong={weekdaysLong}\n                weekdaysShort={weekdaysShort}\n              />\n            </div>\n          )}\n        </span>\n      </OutsideClickHandler>\n    );\n  }\n}\n\nfunction NullComponent() {\n  return null;\n}\n\ntype InputWrapperProps = T.Omit<React.InputHTMLAttributes<HTMLInputElement>, 'value'> &\n  InjectedIntlProps & {\n    innerRef: React.Ref<HTMLInputElement>;\n    value: Date | undefined;\n  };\n\nconst InputWrapper = injectIntl(({ innerRef, intl, value, ...other }: InputWrapperProps) => {\n  const formattedValue =\n    value && intl.formatDate(value, { year: 'numeric', month: 'short', day: 'numeric' });\n  return <input {...other} ref={innerRef} value={formattedValue || ''} />;\n});\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./DayPicker.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".DayPicker{display:inline-block}.DayPicker-wrapper{position:relative;-webkit-user-select:none;-ms-user-select:none;user-select:none;padding-bottom:8px;flex-direction:row}.DayPicker-Months{display:flex;flex-wrap:wrap;justify-content:center}.DayPicker-Month{display:table;border-collapse:collapse;border-spacing:0;-webkit-user-select:none;-ms-user-select:none;user-select:none;margin:8px 8px 0}.DayPicker-Weekdays{display:table-header-group}.DayPicker-WeekdaysRow{display:table-row}.DayPicker-Weekday{display:table-cell;padding:8px;font-size:12px;text-align:center;color:#999}.DayPicker-Weekday abbr[title]{border-bottom:none;text-decoration:none}.DayPicker-Body{display:table-row-group}.DayPicker-Week{display:table-row}.DayPicker-Day{display:table-cell;line-height:15px;padding:8px;text-align:center;cursor:pointer;vertical-align:top;outline:none}.DayPicker--interactionDisabled .DayPicker-Day{cursor:default}.DayPicker-Footer{padding-top:8px}.DayPicker-Day--today{font-weight:700}.DayPicker-Day--outside{cursor:default;color:#8b9898}.DayPicker-Day--disabled{color:#cdcdcd;cursor:not-allowed}.DayPicker-Day--sunday{background-color:#f7f8f8}.DayPicker-Day--sunday:not(.DayPicker-Day--today){color:#dce0e0}.DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside){background-color:#4b9fd5;color:#fff}.DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--highlighted):not(.DayPicker-Day--outside):hover{background-color:#f3f3f3}.DayPicker-Day--highlighted:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside){background-color:#cae3f2}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".date-input-control{position:relative;display:inline-block;cursor:pointer}.date-input-control-input{width:130px;padding-left:24px!important;cursor:pointer}.date-input-control-input.is-filled{padding-right:16px!important}.date-input-control-icon{position:absolute;top:4px;left:4px}.date-input-control-icon path{fill:#cdcdcd;transition:fill .3s ease}.date-input-control-input:focus+.date-input-control-icon path{fill:#4b9fd5}.date-input-control-reset{position:absolute;top:4px;right:4px;border:none}.date-input-calendar{position:absolute;z-index:7500;top:100%;left:0;border:1px solid #e6e6e6;background-color:#fff;box-shadow:0 6px 12px rgba(0,0,0,.175)}.date-input-calendar-nav{display:flex;justify-content:space-between;align-items:center;padding-top:8px;padding-left:8px;padding-right:8px}.date-input-calender-month-select{width:70px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Query } from './utils';\n\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS: Query = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DateInput from './DateInput';\n\ntype DateRange = { from?: Date; to?: Date };\n\ninterface Props {\n  className?: string;\n  maxDate?: Date;\n  minDate?: Date;\n  onChange: (date: DateRange) => void;\n  value?: DateRange;\n}\n\nexport default class DateRangeInput extends React.PureComponent<Props> {\n  toDateInput?: DateInput | null;\n\n  get from() {\n    return this.props.value && this.props.value.from;\n  }\n\n  get to() {\n    return this.props.value && this.props.value.to;\n  }\n\n  handleFromChange = (from: Date | undefined) => {\n    this.props.onChange({ from, to: this.to });\n\n    // use `setTimeout` to work around the immediate closing of the `toDateInput`\n    setTimeout(() => {\n      if (from && !this.to && this.toDateInput) {\n        this.toDateInput.focus();\n      }\n    }, 0);\n  };\n\n  handleToChange = (to: Date | undefined) => {\n    this.props.onChange({ from: this.from, to });\n  };\n\n  render() {\n    return (\n      <div className={classNames('display-inline-flex-center', this.props.className)}>\n        <DateInput\n          currentMonth={this.to}\n          data-test=\"from\"\n          highlightTo={this.to}\n          maxDate={this.to}\n          onChange={this.handleFromChange}\n          placeholder={translate('start_date')}\n          value={this.from}\n        />\n        <span className=\"note little-spacer-left little-spacer-right\">{translate('to_')}</span>\n        <DateInput\n          currentMonth={this.from}\n          data-test=\"to\"\n          highlightFrom={this.from}\n          minDate={this.from}\n          onChange={this.handleToChange}\n          placeholder={translate('end_date')}\n          ref={element => (this.toDateInput = element)}\n          value={this.to}\n        />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}