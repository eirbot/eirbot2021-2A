{"version":3,"sources":["webpack:///./src/main/js/components/common/CodeSnippet.css?463c","webpack:///./src/main/js/components/common/CodeSnippet.css","webpack:///./src/main/js/api/webhooks.ts","webpack:///./src/main/js/apps/webhooks/components/CreateWebhookForm.tsx","webpack:///./src/main/js/apps/webhooks/components/PageActions.tsx","webpack:///./src/main/js/apps/webhooks/components/PageHeader.tsx","webpack:///./src/main/js/apps/webhooks/components/DeleteWebhookForm.tsx","webpack:///./src/main/js/apps/webhooks/components/DeliveryItem.tsx","webpack:///./src/main/js/apps/webhooks/components/DeliveryAccordion.tsx","webpack:///./src/main/js/apps/webhooks/components/DeliveriesForm.tsx","webpack:///./src/main/js/apps/webhooks/components/WebhookActions.tsx","webpack:///./src/main/js/apps/webhooks/components/LatestDeliveryForm.tsx","webpack:///./src/main/js/apps/webhooks/components/WebhookItemLatestDelivery.tsx","webpack:///./src/main/js/apps/webhooks/components/WebhookItem.tsx","webpack:///./src/main/js/apps/webhooks/components/WebhooksList.tsx","webpack:///./src/main/js/apps/webhooks/components/App.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/common/CodeSnippet.tsx"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","createWebhook","data","catch","throwGlobalError","deleteWebhook","searchWebhooks","updateWebhook","searchDeliveries","getDelivery","handleCancelClick","event","preventDefault","currentTarget","blur","props","onClose","handleValidate","name","secret","url","errors","trim","startsWith","length","render","webhook","this","isUpdate","modalHeader","confirmButtonText","header","initialValues","isInitialValid","onSubmit","onDone","size","validate","dirty","handleBlur","handleChange","isSubmitting","touched","values","autoFocus","disabled","error","id","label","htmlFor","className","onBlur","onChange","type","value","description","mounted","state","openCreate","handleCreateClose","setState","handleCreateOpen","renderCreate","webhooksCount","overlay","onClick","onCreate","componentDidMount","componentWillUnmount","loading","PageHeader","children","defaultMessage","to","DeleteWebhookForm","onCloseClick","onFormSubmit","submitting","DeliveryItem","delivery","payload","httpStatus","durationMs","CodeSnippet","noCopy","snippet","formatPayload","JSON","stringify","parse","undefined","open","fetchPayload","deliveryId","then","handleClick","renderHeader","success","title","date","at","deliveries","fetchDeliveries","key","ps","paging","stopLoading","fetchMoreDeliveries","p","pageIndex","contentLabel","onRequestClose","map","count","loadMore","ready","total","deleting","updating","handleDelete","onDelete","handleDeleteClick","handleDeletingStop","handleDeliveriesClick","handleDeliveriesStop","handleUpdate","onUpdate","handleUpdateClick","handleUpdatingStop","ActionsDropdown","latestDelivery","destructive","modal","handleModalClose","WebhookItem","webhooks","fetchWebhooks","getScopeParams","component","project","handleCreate","filter","item","Suggestions","suggestions","defer","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","componentDidUpdate","prevProps","finalSnippet","isOneLine","snippetRef","Array","isArray","line","join","ref","copyValue"],"mappings":"gFAAA,IAAIA,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,wYAAyY,KAElaD,EAAOK,QAAUA,G,wFCgBX,SAAUG,EAAcC,GAM5B,OAAO,mBAAS,uBAAwBA,GAAMC,MAAMC,EAAA,GAGhD,SAAUC,EAAcH,GAC5B,OAAO,eAAK,uBAAwBA,GAAMC,MAAMC,EAAA,GAG5C,SAAUE,EAAeJ,GAC7B,OAAO,kBAAQ,qBAAsBA,GAAMC,MAAMC,EAAA,GAG7C,SAAUG,EAAcL,GAM5B,OAAO,eAAK,uBAAwBA,GAAMC,MAAMC,EAAA,GAG5C,SAAUI,EAAiBN,GAU/B,OAAO,kBAAQ,2BAA4BA,GAAMC,MAAMC,EAAA,GAGnD,SAAUK,EAAYP,GAG1B,OAAO,kBAAQ,yBAA0BA,GAAMC,MAAMC,EAAA,G,qaC3BvD,uE,OACE,EAAAM,kBAAoB,SAACC,GACnBA,EAAMC,iBACND,EAAME,cAAcC,OACpB,EAAKC,MAAMC,WAGb,EAAAC,eAAiB,SAACf,GACR,IAAAgB,EAAsBhB,EAAlB,KAAEiB,EAAgBjB,EAAV,OAAEkB,EAAQlB,EAAL,IACnBmB,EAA2D,GAcjE,OAbKH,EAAKI,SACRD,EAAOH,KAAO,oBAAU,2BAErBE,EAAIE,OAEGF,EAAIG,WAAW,YAAeH,EAAIG,WAAW,YAE7C,mBAASH,KACnBC,EAAOD,IAAM,oBAAU,4BAFvBC,EAAOD,IAAM,oBAAU,6BAFvBC,EAAOD,IAAM,oBAAU,yBAMrBD,GAAUA,EAAOK,OAAS,MAC5BH,EAAOF,OAAS,oBAAU,+BAErBE,G,EAiFX,OAxG+C,OA0B7C,YAAAI,OAAA,WACU,IAAAC,EAAYC,KAAKZ,MAAV,QACTa,IAAaF,EACbG,EAAcD,EAAW,oBAAU,mBAAqB,oBAAU,mBAClEE,EAAoBF,EAAW,oBAAU,eAAiB,oBAAU,UAC1E,OACE,gBAAC,IAAe,CACdE,kBAAmBA,EACnBC,OAAQF,EACRG,cAAe,CACbd,KAAOQ,GAAWA,EAAQR,MAAS,GACnCC,OAASO,GAAWA,EAAQP,QAAW,GACvCC,IAAMM,GAAWA,EAAQN,KAAQ,IAEnCa,eAAgBL,EAChBZ,QAASW,KAAKZ,MAAMC,QACpBkB,SAAUP,KAAKZ,MAAMoB,OACrBC,KAAK,QACLC,SAAUV,KAAKV,iBACd,SAAC,G,IAAEqB,EAAK,QAAEjB,EAAM,SAAEkB,EAAU,aAAEC,EAAY,eAAEC,EAAY,eAAEC,EAAO,UAAEC,EAAM,SAAO,OAC/E,gCACE,gBAAC,IAAoB,CACnBC,WAAW,EACXN,MAAOA,EACPO,SAAUJ,EACVK,MAAOzB,EAAOH,KACd6B,GAAG,eACHC,MACE,yBAAOC,QAAQ,gBACZ,oBAAU,iBACX,sBAAIC,UAAU,aAAW,MAG7BhC,KAAK,OACLiC,OAAQZ,EACRa,SAAUZ,EACVE,QAASA,EAAQxB,KACjBmC,KAAK,OACLC,MAAOX,EAAOzB,OAEhB,gBAAC,IAAoB,CACnBqC,YAAa,oBAAU,4BACvBjB,MAAOA,EACPO,SAAUJ,EACVK,MAAOzB,EAAOD,IACd2B,GAAG,cACHC,MACE,yBAAOC,QAAQ,eACZ,oBAAU,gBACX,sBAAIC,UAAU,aAAW,MAG7BhC,KAAK,MACLiC,OAAQZ,EACRa,SAAUZ,EACVE,QAASA,EAAQtB,IACjBiC,KAAK,OACLC,MAAOX,EAAOvB,MAEhB,gBAAC,IAAoB,CACnBmC,YAAa,oBAAU,+BACvBjB,MAAOA,EACPO,SAAUJ,EACVK,MAAOzB,EAAOF,OACd4B,GAAG,iBACHC,MAAO,yBAAOC,QAAQ,kBAAkB,oBAAU,oBAClD/B,KAAK,SACLiC,OAAQZ,EACRa,SAAUZ,EACVE,QAASA,EAAQvB,OACjBkC,KAAK,WACLC,MAAOX,EAAOxB,cAO5B,EAxGA,CAA+C,iB,mWCA/C,uE,OACE,EAAAqC,SAAU,EACV,EAAAC,MAAe,CAAEC,YAAY,GAU7B,EAAAC,kBAAoB,WACd,EAAKH,SACP,EAAKI,SAAS,CAAEF,YAAY,KAIhC,EAAAG,iBAAmB,WACjB,EAAKD,SAAS,CAAEF,YAAY,KAG9B,EAAAI,aAAe,WACb,OAAI,EAAK/C,MAAMgD,eAzBI,GA2Bf,gBAAC,IAAO,CAACC,QAAS,kCAAwB,2BA3B3B,KA4Bb,gBAAC,SAAM,CAACd,UAAU,8BAA8B,oBAAU,YAM9D,gCACE,gBAAC,SAAM,CAACA,UAAU,oBAAoBe,QAAS,EAAKJ,kBACjD,oBAAU,WAEZ,EAAKJ,MAAMC,YACV,gBAAC,EAAiB,CAAC1C,QAAS,EAAK2C,kBAAmBxB,OAAQ,EAAKpB,MAAMmD,a,EAajF,OAlDyC,OAIvC,YAAAC,kBAAA,WACExC,KAAK6B,SAAU,GAGjB,YAAAY,qBAAA,WACEzC,KAAK6B,SAAU,GAkCjB,YAAA/B,OAAA,WACE,OAAIE,KAAKZ,MAAMsD,QACN,KAGF,uBAAKnB,UAAU,gBAAgBvB,KAAKmC,iBAE/C,EAlDA,CAAyC,iB,kBCR3B,SAAUQ,EAAW,G,IAAEC,EAAQ,WAAEF,EAAO,UACpD,OACE,0BAAQnB,UAAU,eAChB,sBAAIA,UAAU,cAAc,oBAAU,kBACrCmB,GAAW,qBAAGnB,UAAU,YAExBqB,EAED,qBAAGrB,UAAU,oBACX,gBAAC,mBAAgB,CACfsB,eAAgB,oBAAU,wBAC1BzB,GAAG,uBACHJ,OAAQ,CACNvB,IACE,gBAAC,IAAI,CAACqD,GAAG,mDACN,oBAAU,qC,4ECbb,SAAUC,EAAkB,G,IAAE1D,EAAO,UAAEkB,EAAQ,WAAER,EAAO,UAC9DK,EAAS,oBAAU,mBAEzB,OACE,gBAAC,IAAW,CAACA,OAAQA,EAAQf,QAASA,EAASkB,SAAUA,IACtD,SAAC,G,IAAEyC,EAAY,eAAEC,EAAY,eAAEC,EAAU,aAAO,OAC/C,wBAAM3C,SAAU0C,GACd,0BAAQ1B,UAAU,cAChB,0BAAKnB,IAGP,uBAAKmB,UAAU,cACZ,kCAAwB,0BAA2BxB,EAAQR,OAG9D,0BAAQgC,UAAU,cAChB,gBAAC,IAAe,CAACA,UAAU,eAAemB,QAASQ,IACnD,gBAAC,eAAY,CAAC3B,UAAU,aAAaL,SAAUgC,GAC5C,oBAAU,WAEb,gBAAC,kBAAe,CAAChC,SAAUgC,EAAYZ,QAASU,GAC7C,oBAAU,gB,kICpBX,SAAUG,GAAa,G,IAAE5B,EAAS,YAAE6B,EAAQ,WAAEV,EAAO,UAAEW,EAAO,UAC1E,OACE,uBAAK9B,UAAWA,GACd,qBAAGA,UAAU,iBACV,kCACC,+BACA6B,EAASE,YAAc,oBAAU,0CAGrC,qBAAG/B,UAAU,iBACV,kCACC,+BACA,wBAAc6B,EAASG,WAAY,cAGvC,qBAAGhC,UAAU,iBAAiB,oBAAU,8BACxC,gBAAC,IAAe,CAACA,UAAU,yBAAyBmB,QAASA,GAC1DW,GAAW,gBAACG,EAAA,EAAW,CAACC,QAAQ,EAAMC,QAASC,GAAcN,OAMtE,SAASM,GAAcN,GACrB,IACE,OAAOO,KAAKC,UAAUD,KAAKE,MAAMT,QAAUU,EAAW,GACtD,MAAO5C,GACP,OAAOkC,G,yWCtBX,uE,OACE,EAAAxB,SAAU,EACV,EAAAC,MAAe,CAAEY,SAAS,EAAOsB,MAAM,GAUvC,EAAAC,aAAe,SAAC,G,IAAEb,QAAF,MAAe,EAAKhE,MAAK,GAAf,SAExB,OADA,EAAK6C,SAAS,CAAES,SAAS,IAClB5D,EAAY,CAAEoF,WAAYd,EAAShC,KAAM+C,MAC9C,SAAC,G,IAAEf,EAAQ,WACL,EAAKvB,SACP,EAAKI,SAAS,CAAEoB,QAASD,EAASC,QAASX,SAAS,OAGxD,WACM,EAAKb,SACP,EAAKI,SAAS,CAAES,SAAS,QAMjC,EAAAiB,cAAgB,SAACN,GACf,IACE,OAAOO,KAAKC,UAAUD,KAAKE,MAAMT,QAAUU,EAAW,GACtD,MAAO5C,GACP,OAAOkC,IAIX,EAAAe,YAAc,WACP,EAAKtC,MAAMuB,SACd,EAAKY,eAEP,EAAKhC,UAAS,SAAC,GAAa,MAAC,CAAE+B,MAAV,Y,EA4BzB,OApE+C,QAI7C,YAAAxB,kBAAA,WACExC,KAAK6B,SAAU,GAGjB,YAAAY,qBAAA,WACEzC,KAAK6B,SAAU,GAkCjB,YAAA/B,OAAA,WACU,IAAAsD,EAAapD,KAAKZ,MAAV,SACV,EAA6BY,KAAK8B,MAAhCY,EAAO,UAAEsB,EAAI,OAAEX,EAAO,UAE9B,OACE,gBAAC,IAAmB,CAClBf,QAAStC,KAAKoE,YACdJ,KAAMA,EACNK,aAAc,WACZ,OAAAjB,EAASkB,QACP,gBAAC,IAAgB,CAAC/C,UAAU,0BAE5B,gBAAC,IAAc,CAACA,UAAU,yBAG9BgD,MAAO,gBAAC,IAAiB,CAACC,KAAMpB,EAASqB,MACzC,gBAACtB,GAAY,CACX5B,UAAU,kBACV6B,SAAUA,EACVV,QAASA,EACTW,QAASA,MAKnB,EApEA,CAA+C,iB,8hBCI/C,uE,OACE,EAAAxB,SAAU,EACV,EAAAC,MAAe,CAAE4C,WAAY,GAAIhC,SAAS,GAW1C,EAAAiC,gBAAkB,SAAC,GACjB9F,EAAiB,CAAEkB,cADF,MAAc,EAAKX,MAAK,GAAf,QACUwF,IAAKC,GAhB3B,KAgB4CV,MAAK,SAAC,G,IAAEO,EAAU,aAAEI,EAAM,SAC9E,EAAKjD,SACP,EAAKI,SAAS,CAAEyC,WAAU,EAAEhC,SAAS,EAAOoC,OAAM,MAEnD,EAAKC,cAGV,EAAAC,oBAAsB,SAAC,G,IAAEjF,QAAF,MAAc,EAAKX,MAAK,GAAf,QACtB0F,EAAW,EAAKhD,MAAV,OACVgD,IACF,EAAK7C,SAAS,CAAES,SAAS,IACzB7D,EAAiB,CAAEkB,QAASA,EAAQ6E,IAAKK,EAAGH,EAAOI,UAAY,EAAGL,GA3BtD,KA2BuEV,MACjF,SAAC,G,IAAEO,EAAU,aAAEI,EAAM,SACf,EAAKjD,SACP,EAAKI,UAAS,SAACH,GAAiB,MAAC,CAC/B4C,WAAY,GAAI5C,EAAM4C,WAAeA,GACrChC,SAAS,EACToC,OAAM,QAIZ,EAAKC,eAKX,EAAAA,YAAc,WACR,EAAKlD,SACP,EAAKI,SAAS,CAAES,SAAS,K,EAuC/B,OAjF4C,QAI1C,YAAAF,kBAAA,WACExC,KAAK6B,SAAU,EACf7B,KAAK2E,mBAGP,YAAAlC,qBAAA,WACEzC,KAAK6B,SAAU,GAoCjB,YAAA/B,OAAA,WACU,IAAAC,EAAYC,KAAKZ,MAAV,QACT,EAAkCY,KAAK8B,MAArC4C,EAAU,aAAEhC,EAAO,UAAEoC,EAAM,SAC7B1E,EAAS,kCAAwB,4BAA6BL,EAAQR,MAE5E,OACE,gBAAC,IAAK,CAAC4F,aAAc/E,EAAQgF,eAAgBpF,KAAKZ,MAAMC,SACtD,0BAAQkC,UAAU,cAChB,0BAAKnB,IAEP,uBAAKmB,UAAU,8BACZmD,EAAWW,KAAI,SAAAjC,GAAY,OAC1B,gBAAC,GAAiB,CAACA,SAAUA,EAAUwB,IAAKxB,EADlB,QAG5B,uBAAK7B,UAAU,eACb,gBAAC,IAAe,CAACmB,QAASA,UAEhBqB,IAAXe,GACC,gBAAC,IAAU,CACTvD,UAAU,uBACV+D,MAAOZ,EAAW7E,OAClB0F,SAAUvF,KAAKgF,oBACfQ,OAAQ9C,EACR+C,MAAOX,EAAOW,SAIpB,0BAAQlE,UAAU,cAChB,gBAAC,kBAAe,CAACA,UAAU,iBAAiBe,QAAStC,KAAKZ,MAAMC,SAC7D,oBAAU,aAMvB,EAjFA,CAA4C,iB,sjBCA5C,uE,OACE,EAAAwC,SAAU,EACV,EAAAC,MAAe,CAAE4D,UAAU,EAAOhB,YAAY,EAAOiB,UAAU,GAU/D,EAAAC,aAAe,WACb,OAAO,EAAKxG,MAAMyG,SAAS,EAAKzG,MAAMW,QAAQ6E,MAGhD,EAAAkB,kBAAoB,WAClB,EAAK7D,SAAS,CAAEyD,UAAU,KAG5B,EAAAK,mBAAqB,WACf,EAAKlE,SACP,EAAKI,SAAS,CAAEyD,UAAU,KAI9B,EAAAM,sBAAwB,WACtB,EAAK/D,SAAS,CAAEyC,YAAY,KAG9B,EAAAuB,qBAAuB,WACrB,EAAKhE,SAAS,CAAEyC,YAAY,KAG9B,EAAAwB,aAAe,SAAC3H,GACd,OAAO,EAAKa,MAAM+G,SAAQ,SAAM5H,GAAI,CAAEwB,QAAS,EAAKX,MAAMW,QAAQ6E,QAGpE,EAAAwB,kBAAoB,WAClB,EAAKnE,SAAS,CAAE0D,UAAU,KAG5B,EAAAU,mBAAqB,WACnB,EAAKpE,SAAS,CAAE0D,UAAU,K,EAiD9B,OA5F4C,QAI1C,YAAAnD,kBAAA,WACExC,KAAK6B,SAAU,GAGjB,YAAAY,qBAAA,WACEzC,KAAK6B,SAAU,GAqCjB,YAAA/B,OAAA,WACU,IAAAC,EAAYC,KAAKZ,MAAV,QACf,OACE,gCACE,gBAAC,IAAe,CAACmC,UAAU,mBACzB,gBAAC+E,EAAA,oBAAmB,CAAC/E,UAAU,oBAAoBe,QAAStC,KAAKoG,mBAC9D,oBAAU,gBAEZrG,EAAQwG,gBACP,gBAACD,EAAA,oBAAmB,CAClB/E,UAAU,wBACVe,QAAStC,KAAKgG,uBACb,oBAAU,6BAGf,gBAACM,EAAA,uBAAsB,MACvB,gBAACA,EAAA,oBAAmB,CAClB/E,UAAU,oBACViF,aAAa,EACblE,QAAStC,KAAK8F,mBACb,oBAAU,YAId9F,KAAK8B,MAAM4C,YACV,gBAAC,GAAc,CAACrF,QAASW,KAAKiG,qBAAsBlG,QAASA,IAG9DC,KAAK8B,MAAM6D,UACV,gBAAC,EAAiB,CAChBtG,QAASW,KAAKqG,mBACd7F,OAAQR,KAAKkG,aACbnG,QAASA,IAIZC,KAAK8B,MAAM4D,UACV,gBAAC3C,EAAiB,CAChB1D,QAASW,KAAK+F,mBACdxF,SAAUP,KAAK4F,aACf7F,QAASA,MAMrB,EA5FA,CAA4C,iB,0XCJ5C,uE,OACE,EAAA8B,SAAU,EACV,EAAAC,MAAe,CAAEY,SAAS,GAW1B,EAAAuB,aAAe,SAAC,GACd,OAAOnF,EAAY,CAAEoF,iBADP,MAAe,EAAK9E,MAAK,GAAf,SACkBgC,KAAM+C,MAC9C,SAAC,G,IAAEf,EAAQ,WACL,EAAKvB,SACP,EAAKI,SAAS,CAAEoB,QAASD,EAASC,QAASX,SAAS,OAGxD,WACM,EAAKb,SACP,EAAKI,SAAS,CAAES,SAAS,QAMjC,EAAAiB,cAAgB,SAACN,GACf,IACE,OAAOO,KAAKC,UAAUD,KAAKE,MAAMT,QAAUU,EAAW,GACtD,MAAO5C,GACP,OAAOkC,I,EA4Bb,OA5DgD,QAI9C,YAAAb,kBAAA,WACExC,KAAK6B,SAAU,EACf7B,KAAKiE,gBAGP,YAAAxB,qBAAA,WACEzC,KAAK6B,SAAU,GA0BjB,YAAA/B,OAAA,WACQ,MAAwBE,KAAKZ,MAA3BgE,EAAQ,WAAErD,EAAO,UACnB,EAAuBC,KAAK8B,MAA1BY,EAAO,UAAEW,EAAO,UAClBjD,EAAS,kCAAwB,iCAAkCL,EAAQR,MAEjF,OACE,gBAAC,IAAK,CAAC4F,aAAc/E,EAAQgF,eAAgBpF,KAAKZ,MAAMC,SACtD,0BAAQkC,UAAU,cAChB,0BAAKnB,IAEP,gBAAC+C,GAAY,CACX5B,UAAU,6BACV6B,SAAUA,EACVV,QAASA,EACTW,QAASA,IAEX,0BAAQ9B,UAAU,cAChB,gBAAC,kBAAe,CAACA,UAAU,iBAAiBe,QAAStC,KAAKZ,MAAMC,SAC7D,oBAAU,aAMvB,EA5DA,CAAgD,iB,qWCDhD,uE,OACE,EAAAwC,SAAU,EACV,EAAAC,MAAe,CAAE2E,OAAO,GAUxB,EAAArC,YAAc,WACZ,EAAKnC,SAAS,CAAEwE,OAAO,KAGzB,EAAAC,iBAAmB,WACb,EAAK7E,SACP,EAAKI,SAAS,CAAEwE,OAAO,K,EAmC7B,OArDuD,QAIrD,YAAAjE,kBAAA,WACExC,KAAK6B,SAAU,GAGjB,YAAAY,qBAAA,WACEzC,KAAK6B,SAAU,GAajB,YAAA/B,OAAA,WACU,IAAAC,EAAYC,KAAKZ,MAAV,QACf,IAAKW,EAAQwG,eACX,OAAO,4BAAO,oBAAU,iCAGlB,IAAAE,EAAUzG,KAAK8B,MAAV,MACb,OACE,gCACG/B,EAAQwG,eAAejC,QACtB,gBAAC,IAAgB,CAAC/C,UAAU,kBAE5B,gBAAC,IAAc,CAACA,UAAU,kBAE5B,wBAAMA,UAAU,0CACd,gBAAC,IAAiB,CAACiD,KAAMzE,EAAQwG,eAAe9B,KAChD,gBAAC,aAAU,CAAClD,UAAU,kCAAkCe,QAAStC,KAAKoE,aACpE,gBAAC,KAAc,QAIlBqC,GACC,gBAAC,GAAkB,CACjBrD,SAAUrD,EAAQwG,eAClBlH,QAASW,KAAK0G,iBACd3G,QAASA,MAMrB,EArDA,CAAuD,iBCNzC,SAAU4G,GAAY,G,IAAEd,EAAQ,WAAEM,EAAQ,WAAEpG,EAAO,UAC/D,OACE,0BACE,0BAAKA,EAAQR,MACb,0BAAKQ,EAAQN,KACb,0BAAKM,EAAQP,OAAS,oBAAU,OAAS,oBAAU,OACnD,0BACE,gBAAC,GAAyB,CAACO,QAASA,KAEtC,sBAAIwB,UAAU,0BACZ,gBAAC,GAAc,CAACsE,SAAUA,EAAUM,SAAUA,EAAUpG,QAASA,M,yWCVzE,uE,OACE,EAAAsE,aAAe,WAAM,OACnB,6BACE,0BACE,0BAAK,oBAAU,SACf,0BAAK,oBAAU,iBACf,0BAAK,oBAAU,2BACf,0BAAK,oBAAU,4BACf,qBAPe,S,EAiCvB,OAlC0C,QAaxC,YAAAvE,OAAA,sBACU8G,EAAa5G,KAAKZ,MAAV,SAChB,OAAIwH,EAAS/G,OAAS,EACb,yBAAI,oBAAU,uBAGrB,yBAAO0B,UAAU,cACdvB,KAAKqE,eACN,6BACG,IAAOuC,GAAU,SAAA7G,GAAW,OAAAA,EAAQR,KAAR,iBAA4B8F,KAAI,SAAAtF,GAAW,OACtE,gBAAC4G,GAAW,CACV/B,IAAK7E,EAAQ6E,IACbiB,SAAU,EAAKzG,MAAMyG,SACrBM,SAAU,EAAK/G,MAAM+G,SACrBpG,QALoE,UAYlF,EAlCA,CAA0C,iB,4uBCO1C,0E,OACE,EAAA8B,SAAU,EACV,EAAAC,MAAe,CAAEY,SAAS,EAAMkE,SAAU,IAW1C,EAAAC,cAAgB,WACd,OAAOlI,EAAe,EAAKmI,kBAAkB3C,MAC3C,SAAC,G,IAAEyC,EAAQ,WACL,EAAK/E,SACP,EAAKI,SAAS,CAAES,SAAS,EAAOkE,SAAQ,OAG5C,WACM,EAAK/E,SACP,EAAKI,SAAS,CAAES,SAAS,QAMjC,EAAAoE,eAAiB,SAAC,G,IAAEC,QAAF,MAAgB,EAAK3H,MAAK,GAAf,UAC3B,MAAO,CACL4H,QAASD,GAAaA,EAAUnC,MAIpC,EAAAqC,aAAe,SAAC1I,GAQd,OAAOD,EAPY,GAAH,IACdiB,KAAMhB,EAAKgB,KACXE,IAAKlB,EAAKkB,KACNlB,EAAKiB,QAAU,CAAEA,OAAQjB,EAAKiB,SAC/B,EAAKsH,mBAGuB3C,MAAK,SAAC,G,IAAEpE,EAAO,UAC1C,EAAK8B,SACP,EAAKI,UAAS,SAAC,G,IAAE2E,EAAQ,WAAO,MAAC,CAAEA,SAAU,GAAIA,EAAQ,CAAE7G,YAKjE,EAAA6F,aAAe,SAAC7F,GACd,OAAOrB,EAAc,CAAEqB,QAAO,IAAIoE,MAAK,WACjC,EAAKtC,SACP,EAAKI,UAAS,SAAC,GAAiB,MAAC,CAC/B2E,SADuB,WACJM,QAAO,SAAAC,GAAQ,OAAAA,EAAKvC,MAAL,aAM1C,EAAAsB,aAAe,SAAC3H,GAQd,OAAOK,EAPY,GAAH,CACdmB,QAASxB,EAAKwB,QACdR,KAAMhB,EAAKgB,KACXE,IAAKlB,EAAKkB,KACNlB,EAAKiB,QAAU,CAAEA,OAAQjB,EAAKiB,UAGH2E,MAAK,WAChC,EAAKtC,SACP,EAAKI,UAAS,SAAC,GAAiB,MAAC,CAC/B2E,SADuB,WACJvB,KAAI,SAAAtF,GACrB,OAAAA,EAAQ6E,MAAQrG,EAAKwB,QAClB,SAAMA,GAAO,CAAER,KAAMhB,EAAKgB,KAAMC,OAAQjB,EAAKiB,OAAQC,IAAKlB,EAAKkB,MAC9DM,a,EAqChB,OA9GiC,QAI/B,YAAAyC,kBAAA,WACExC,KAAK6B,SAAU,EACf7B,KAAK6G,iBAGP,YAAApE,qBAAA,WACEzC,KAAK6B,SAAU,GAsEjB,YAAA/B,OAAA,WACQ,MAAwBE,KAAK8B,MAA3BY,EAAO,UAAEkE,EAAQ,WAEzB,OACE,gCACE,gBAACQ,EAAA,EAAW,CAACC,YAAY,aACzB,gBAAC,IAAM,CAACC,OAAO,EAAO/C,MAAO,oBAAU,mBAEvC,uBAAKhD,UAAU,qBACb,gBAACoB,EAAU,CAACD,QAASA,GACnB,gBAAC,EAAW,CACVA,QAASA,EACTH,SAAUvC,KAAKiH,aACf7E,cAAewE,EAAS/G,WAI1B6C,GACA,uBAAKnB,UAAU,iCACb,gBAAC,GAAY,CACXsE,SAAU7F,KAAK4F,aACfO,SAAUnG,KAAKkG,aACfU,SAAUA,QAQ1B,EA9GA,CAAiC,iB,kbCXnB,SAAUQ,EAAY,G,IAAEC,EAAW,cAC/C,OACE,gBAAC,IAAmBE,SAAQ,MACzB,SAAC,G,IAAEC,EAAc,iBAAEC,EAAiB,oBAAO,OAC1C,gBAACC,EAAgB,CACfF,eAAgBA,EAChBC,kBAAmBA,EACnBJ,YAAaA,OAavB,+B,+CAmBA,OAnB+B,OAC7B,YAAA7E,kBAAA,WACExC,KAAKZ,MAAMoI,eAAexH,KAAKZ,MAAMiI,cAGvC,YAAAM,mBAAA,SAAmBC,GACbA,EAAUP,cAAgBrH,KAAKZ,MAAMiI,cACvCrH,KAAKZ,MAAMqI,kBAAkBzH,KAAKZ,MAAMiI,aACxCrH,KAAKZ,MAAMoI,eAAeI,EAAUP,eAIxC,YAAA5E,qBAAA,WACEzC,KAAKZ,MAAMqI,kBAAkBzH,KAAKZ,MAAMiI,cAG1C,YAAAvH,OAAA,WACE,OAAO,MAEX,EAnBA,CAA+B,kB,iCC9C/B,iFA+Bc,SAAU0D,EAAYpE,GAC1B,IAGJyI,EAHIC,EAA+B1I,EAAtB,UAAEqE,EAAoBrE,EAAd,OAAEsE,EAAYtE,EAAL,QAC5B2I,EAAa,SAA6B,MAShD,OALEF,EADEG,MAAMC,QAAQvE,GACDA,EAAQwD,QAAO,SAAAgB,GAAQ,iCAAiBC,KAAKL,EAAY,IAAM,WAE/DpE,EAIf,uBAAKnC,UAAW,EAAW,yDAA0D,KACnF,uBAAKA,UAAU,SAAS6G,IAAKL,GAC1BF,IAEDpE,GAAU,gBAAC,kBAAe,CAAC4E,UAAWR","file":"js/340.1613385090031.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./CodeSnippet.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".code-snippet{background:#e6e6e6;border-radius:3px}.code-snippet pre{padding:8px 16px;border-right:1px solid hsla(0,0%,78.4%,.5);overflow-y:hidden;overflow-x:auto}.code-snippet>button{height:auto;border:0;border-radius:0;background:transparent;padding:8px}.code-snippet>button:active,.code-snippet>button:focus,.code-snippet>button:hover{background-color:hsla(0,0%,78.4%,.5);color:#236a97}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function createWebhook(data: {\n  name: string;\n  project?: string;\n  secret?: string;\n  url: string;\n}): Promise<{ webhook: T.Webhook }> {\n  return postJSON('/api/webhooks/create', data).catch(throwGlobalError);\n}\n\nexport function deleteWebhook(data: { webhook: string }): Promise<void | Response> {\n  return post('/api/webhooks/delete', data).catch(throwGlobalError);\n}\n\nexport function searchWebhooks(data: { project?: string }): Promise<{ webhooks: T.Webhook[] }> {\n  return getJSON('/api/webhooks/list', data).catch(throwGlobalError);\n}\n\nexport function updateWebhook(data: {\n  webhook: string;\n  name: string;\n  secret?: string;\n  url: string;\n}): Promise<void | Response> {\n  return post('/api/webhooks/update', data).catch(throwGlobalError);\n}\n\nexport function searchDeliveries(data: {\n  ceTaskId?: string;\n  componentKey?: string;\n  webhook?: string;\n  p?: number;\n  ps?: number;\n}): Promise<{\n  deliveries: T.WebhookDelivery[];\n  paging: T.Paging;\n}> {\n  return getJSON('/api/webhooks/deliveries', data).catch(throwGlobalError);\n}\n\nexport function getDelivery(data: {\n  deliveryId: string;\n}): Promise<{ delivery: T.WebhookDelivery & { payload: string } }> {\n  return getJSON('/api/webhooks/delivery', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport InputValidationField from 'sonar-ui-common/components/controls/InputValidationField';\nimport ValidationModal from 'sonar-ui-common/components/controls/ValidationModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isWebUri } from 'valid-url';\n\ninterface Props {\n  onClose: () => void;\n  onDone: (data: Values) => Promise<void>;\n  webhook?: T.Webhook;\n}\n\ninterface Values {\n  name: string;\n  secret: string;\n  url: string;\n}\n\nexport default class CreateWebhookForm extends React.PureComponent<Props> {\n  handleCancelClick = (event: React.SyntheticEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.props.onClose();\n  };\n\n  handleValidate = (data: Values) => {\n    const { name, secret, url } = data;\n    const errors: { name?: string; secret?: string; url?: string } = {};\n    if (!name.trim()) {\n      errors.name = translate('webhooks.name.required');\n    }\n    if (!url.trim()) {\n      errors.url = translate('webhooks.url.required');\n    } else if (!url.startsWith('http://') && !url.startsWith('https://')) {\n      errors.url = translate('webhooks.url.bad_protocol');\n    } else if (!isWebUri(url)) {\n      errors.url = translate('webhooks.url.bad_format');\n    }\n    if (secret && secret.length > 200) {\n      errors.secret = translate('webhooks.secret.bad_format');\n    }\n    return errors;\n  };\n\n  render() {\n    const { webhook } = this.props;\n    const isUpdate = !!webhook;\n    const modalHeader = isUpdate ? translate('webhooks.update') : translate('webhooks.create');\n    const confirmButtonText = isUpdate ? translate('update_verb') : translate('create');\n    return (\n      <ValidationModal\n        confirmButtonText={confirmButtonText}\n        header={modalHeader}\n        initialValues={{\n          name: (webhook && webhook.name) || '',\n          secret: (webhook && webhook.secret) || '',\n          url: (webhook && webhook.url) || ''\n        }}\n        isInitialValid={isUpdate}\n        onClose={this.props.onClose}\n        onSubmit={this.props.onDone}\n        size=\"small\"\n        validate={this.handleValidate}>\n        {({ dirty, errors, handleBlur, handleChange, isSubmitting, touched, values }) => (\n          <>\n            <InputValidationField\n              autoFocus={true}\n              dirty={dirty}\n              disabled={isSubmitting}\n              error={errors.name}\n              id=\"webhook-name\"\n              label={\n                <label htmlFor=\"webhook-name\">\n                  {translate('webhooks.name')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n              }\n              name=\"name\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              touched={touched.name}\n              type=\"text\"\n              value={values.name}\n            />\n            <InputValidationField\n              description={translate('webhooks.url.description')}\n              dirty={dirty}\n              disabled={isSubmitting}\n              error={errors.url}\n              id=\"webhook-url\"\n              label={\n                <label htmlFor=\"webhook-url\">\n                  {translate('webhooks.url')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n              }\n              name=\"url\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              touched={touched.url}\n              type=\"text\"\n              value={values.url}\n            />\n            <InputValidationField\n              description={translate('webhooks.secret.description')}\n              dirty={dirty}\n              disabled={isSubmitting}\n              error={errors.secret}\n              id=\"webhook-secret\"\n              label={<label htmlFor=\"webhook-secret\">{translate('webhooks.secret')}</label>}\n              name=\"secret\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              touched={touched.secret}\n              type=\"password\"\n              value={values.secret}\n            />\n          </>\n        )}\n      </ValidationModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport CreateWebhookForm from './CreateWebhookForm';\n\ninterface Props {\n  loading: boolean;\n  onCreate: (data: { name: string; secret?: string; url: string }) => Promise<void>;\n  webhooksCount: number;\n}\n\ninterface State {\n  openCreate: boolean;\n}\n\nconst WEBHOOKS_LIMIT = 10;\n\nexport default class PageActions extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { openCreate: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCreateClose = () => {\n    if (this.mounted) {\n      this.setState({ openCreate: false });\n    }\n  };\n\n  handleCreateOpen = () => {\n    this.setState({ openCreate: true });\n  };\n\n  renderCreate = () => {\n    if (this.props.webhooksCount >= WEBHOOKS_LIMIT) {\n      return (\n        <Tooltip overlay={translateWithParameters('webhooks.maximum_reached', WEBHOOKS_LIMIT)}>\n          <Button className=\"js-webhook-create disabled\">{translate('create')}</Button>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <>\n        <Button className=\"js-webhook-create\" onClick={this.handleCreateOpen}>\n          {translate('create')}\n        </Button>\n        {this.state.openCreate && (\n          <CreateWebhookForm onClose={this.handleCreateClose} onDone={this.props.onCreate} />\n        )}\n      </>\n    );\n  };\n\n  render() {\n    if (this.props.loading) {\n      return null;\n    }\n\n    return <div className=\"page-actions\">{this.renderCreate()}</div>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  children?: React.ReactNode;\n  loading: boolean;\n}\n\nexport default function PageHeader({ children, loading }: Props) {\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('webhooks.page')}</h1>\n      {loading && <i className=\"spinner\" />}\n\n      {children}\n\n      <p className=\"page-description\">\n        <FormattedMessage\n          defaultMessage={translate('webhooks.description')}\n          id=\"webhooks.description\"\n          values={{\n            url: (\n              <Link to=\"/documentation/project-administration/webhooks/\">\n                {translate('webhooks.documentation_link')}\n              </Link>\n            )\n          }}\n        />\n      </p>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n  onSubmit: () => Promise<void>;\n  webhook: T.Webhook;\n}\n\nexport default function DeleteWebhookForm({ onClose, onSubmit, webhook }: Props) {\n  const header = translate('webhooks.delete');\n\n  return (\n    <SimpleModal header={header} onClose={onClose} onSubmit={onSubmit}>\n      {({ onCloseClick, onFormSubmit, submitting }) => (\n        <form onSubmit={onFormSubmit}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n          </header>\n\n          <div className=\"modal-body\">\n            {translateWithParameters('webhooks.delete.confirm', webhook.name)}\n          </div>\n\n          <footer className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton className=\"button-red\" disabled={submitting}>\n              {translate('delete')}\n            </SubmitButton>\n            <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      )}\n    </SimpleModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport CodeSnippet from '../../../components/common/CodeSnippet';\n\ninterface Props {\n  className?: string;\n  delivery: T.WebhookDelivery;\n  loading: boolean;\n  payload: string | undefined;\n}\n\nexport default function DeliveryItem({ className, delivery, loading, payload }: Props) {\n  return (\n    <div className={className}>\n      <p className=\"spacer-bottom\">\n        {translateWithParameters(\n          'webhooks.delivery.response_x',\n          delivery.httpStatus || translate('webhooks.delivery.server_unreachable')\n        )}\n      </p>\n      <p className=\"spacer-bottom\">\n        {translateWithParameters(\n          'webhooks.delivery.duration_x',\n          formatMeasure(delivery.durationMs, 'MILLISEC')\n        )}\n      </p>\n      <p className=\"spacer-bottom\">{translate('webhooks.delivery.payload')}</p>\n      <DeferredSpinner className=\"spacer-left spacer-top\" loading={loading}>\n        {payload && <CodeSnippet noCopy={true} snippet={formatPayload(payload)} />}\n      </DeferredSpinner>\n    </div>\n  );\n}\n\nfunction formatPayload(payload: string) {\n  try {\n    return JSON.stringify(JSON.parse(payload), undefined, 2);\n  } catch (error) {\n    return payload;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BoxedGroupAccordion from 'sonar-ui-common/components/controls/BoxedGroupAccordion';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DateTimeFormatter from 'sonar-ui-common/components/intl/DateTimeFormatter';\nimport { getDelivery } from '../../../api/webhooks';\nimport DeliveryItem from './DeliveryItem';\n\ninterface Props {\n  delivery: T.WebhookDelivery;\n}\n\ninterface State {\n  loading: boolean;\n  open: boolean;\n  payload?: string;\n}\n\nexport default class DeliveryAccordion extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false, open: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchPayload = ({ delivery } = this.props) => {\n    this.setState({ loading: true });\n    return getDelivery({ deliveryId: delivery.id }).then(\n      ({ delivery }) => {\n        if (this.mounted) {\n          this.setState({ payload: delivery.payload, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  formatPayload = (payload: string) => {\n    try {\n      return JSON.stringify(JSON.parse(payload), undefined, 2);\n    } catch (error) {\n      return payload;\n    }\n  };\n\n  handleClick = () => {\n    if (!this.state.payload) {\n      this.fetchPayload();\n    }\n    this.setState(({ open }) => ({ open: !open }));\n  };\n\n  render() {\n    const { delivery } = this.props;\n    const { loading, open, payload } = this.state;\n\n    return (\n      <BoxedGroupAccordion\n        onClick={this.handleClick}\n        open={open}\n        renderHeader={() =>\n          delivery.success ? (\n            <AlertSuccessIcon className=\"pull-right js-success\" />\n          ) : (\n            <AlertErrorIcon className=\"pull-right js-error\" />\n          )\n        }\n        title={<DateTimeFormatter date={delivery.at} />}>\n        <DeliveryItem\n          className=\"big-spacer-left\"\n          delivery={delivery}\n          loading={loading}\n          payload={payload}\n        />\n      </BoxedGroupAccordion>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { searchDeliveries } from '../../../api/webhooks';\nimport DeliveryAccordion from './DeliveryAccordion';\n\ninterface Props {\n  onClose: () => void;\n  webhook: T.Webhook;\n}\n\ninterface State {\n  deliveries: T.WebhookDelivery[];\n  loading: boolean;\n  paging?: T.Paging;\n}\n\nconst PAGE_SIZE = 10;\n\nexport default class DeliveriesForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { deliveries: [], loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchDeliveries();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDeliveries = ({ webhook } = this.props) => {\n    searchDeliveries({ webhook: webhook.key, ps: PAGE_SIZE }).then(({ deliveries, paging }) => {\n      if (this.mounted) {\n        this.setState({ deliveries, loading: false, paging });\n      }\n    }, this.stopLoading);\n  };\n\n  fetchMoreDeliveries = ({ webhook } = this.props) => {\n    const { paging } = this.state;\n    if (paging) {\n      this.setState({ loading: true });\n      searchDeliveries({ webhook: webhook.key, p: paging.pageIndex + 1, ps: PAGE_SIZE }).then(\n        ({ deliveries, paging }) => {\n          if (this.mounted) {\n            this.setState((state: State) => ({\n              deliveries: [...state.deliveries, ...deliveries],\n              loading: false,\n              paging\n            }));\n          }\n        },\n        this.stopLoading\n      );\n    }\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { webhook } = this.props;\n    const { deliveries, loading, paging } = this.state;\n    const header = translateWithParameters('webhooks.deliveries_for_x', webhook.name);\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <div className=\"modal-body modal-container\">\n          {deliveries.map(delivery => (\n            <DeliveryAccordion delivery={delivery} key={delivery.id} />\n          ))}\n          <div className=\"text-center\">\n            <DeferredSpinner loading={loading} />\n          </div>\n          {paging !== undefined && (\n            <ListFooter\n              className=\"little-spacer-bottom\"\n              count={deliveries.length}\n              loadMore={this.fetchMoreDeliveries}\n              ready={!loading}\n              total={paging.total}\n            />\n          )}\n        </div>\n        <footer className=\"modal-foot\">\n          <ResetButtonLink className=\"js-modal-close\" onClick={this.props.onClose}>\n            {translate('close')}\n          </ResetButtonLink>\n        </footer>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownDivider,\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport CreateWebhookForm from './CreateWebhookForm';\nimport DeleteWebhookForm from './DeleteWebhookForm';\nimport DeliveriesForm from './DeliveriesForm';\n\ninterface Props {\n  onDelete: (webhook: string) => Promise<void>;\n  onUpdate: (data: { webhook: string; name: string; url: string }) => Promise<void>;\n  webhook: T.Webhook;\n}\n\ninterface State {\n  deleting: boolean;\n  deliveries: boolean;\n  updating: boolean;\n}\n\nexport default class WebhookActions extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { deleting: false, deliveries: false, updating: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleDelete = () => {\n    return this.props.onDelete(this.props.webhook.key);\n  };\n\n  handleDeleteClick = () => {\n    this.setState({ deleting: true });\n  };\n\n  handleDeletingStop = () => {\n    if (this.mounted) {\n      this.setState({ deleting: false });\n    }\n  };\n\n  handleDeliveriesClick = () => {\n    this.setState({ deliveries: true });\n  };\n\n  handleDeliveriesStop = () => {\n    this.setState({ deliveries: false });\n  };\n\n  handleUpdate = (data: { name: string; url: string }) => {\n    return this.props.onUpdate({ ...data, webhook: this.props.webhook.key });\n  };\n\n  handleUpdateClick = () => {\n    this.setState({ updating: true });\n  };\n\n  handleUpdatingStop = () => {\n    this.setState({ updating: false });\n  };\n\n  render() {\n    const { webhook } = this.props;\n    return (\n      <>\n        <ActionsDropdown className=\"big-spacer-left\">\n          <ActionsDropdownItem className=\"js-webhook-update\" onClick={this.handleUpdateClick}>\n            {translate('update_verb')}\n          </ActionsDropdownItem>\n          {webhook.latestDelivery && (\n            <ActionsDropdownItem\n              className=\"js-webhook-deliveries\"\n              onClick={this.handleDeliveriesClick}>\n              {translate('webhooks.deliveries.show')}\n            </ActionsDropdownItem>\n          )}\n          <ActionsDropdownDivider />\n          <ActionsDropdownItem\n            className=\"js-webhook-delete\"\n            destructive={true}\n            onClick={this.handleDeleteClick}>\n            {translate('delete')}\n          </ActionsDropdownItem>\n        </ActionsDropdown>\n\n        {this.state.deliveries && (\n          <DeliveriesForm onClose={this.handleDeliveriesStop} webhook={webhook} />\n        )}\n\n        {this.state.updating && (\n          <CreateWebhookForm\n            onClose={this.handleUpdatingStop}\n            onDone={this.handleUpdate}\n            webhook={webhook}\n          />\n        )}\n\n        {this.state.deleting && (\n          <DeleteWebhookForm\n            onClose={this.handleDeletingStop}\n            onSubmit={this.handleDelete}\n            webhook={webhook}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getDelivery } from '../../../api/webhooks';\nimport DeliveryItem from './DeliveryItem';\n\ninterface Props {\n  delivery: T.WebhookDelivery;\n  onClose: () => void;\n  webhook: T.Webhook;\n}\n\ninterface State {\n  loading: boolean;\n  payload?: string;\n}\n\nexport default class LatestDeliveryForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchPayload();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchPayload = ({ delivery } = this.props) => {\n    return getDelivery({ deliveryId: delivery.id }).then(\n      ({ delivery }) => {\n        if (this.mounted) {\n          this.setState({ payload: delivery.payload, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  formatPayload = (payload: string) => {\n    try {\n      return JSON.stringify(JSON.parse(payload), undefined, 2);\n    } catch (error) {\n      return payload;\n    }\n  };\n\n  render() {\n    const { delivery, webhook } = this.props;\n    const { loading, payload } = this.state;\n    const header = translateWithParameters('webhooks.latest_delivery_for_x', webhook.name);\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <DeliveryItem\n          className=\"modal-body modal-container\"\n          delivery={delivery}\n          loading={loading}\n          payload={payload}\n        />\n        <footer className=\"modal-foot\">\n          <ResetButtonLink className=\"js-modal-close\" onClick={this.props.onClose}>\n            {translate('close')}\n          </ResetButtonLink>\n        </footer>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonIcon } from 'sonar-ui-common/components/controls/buttons';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport BulletListIcon from 'sonar-ui-common/components/icons/BulletListIcon';\nimport DateTimeFormatter from 'sonar-ui-common/components/intl/DateTimeFormatter';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport LatestDeliveryForm from './LatestDeliveryForm';\n\ninterface Props {\n  webhook: T.Webhook;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class WebhookItemLatestDelivery extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleModalClose = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    const { webhook } = this.props;\n    if (!webhook.latestDelivery) {\n      return <span>{translate('webhooks.last_execution.none')}</span>;\n    }\n\n    const { modal } = this.state;\n    return (\n      <>\n        {webhook.latestDelivery.success ? (\n          <AlertSuccessIcon className=\"text-text-top\" />\n        ) : (\n          <AlertErrorIcon className=\"text-text-top\" />\n        )}\n        <span className=\"spacer-left display-inline-flex-center\">\n          <DateTimeFormatter date={webhook.latestDelivery.at} />\n          <ButtonIcon className=\"button-small little-spacer-left\" onClick={this.handleClick}>\n            <BulletListIcon />\n          </ButtonIcon>\n        </span>\n\n        {modal && (\n          <LatestDeliveryForm\n            delivery={webhook.latestDelivery}\n            onClose={this.handleModalClose}\n            webhook={webhook}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport WebhookActions from './WebhookActions';\nimport WebhookItemLatestDelivery from './WebhookItemLatestDelivery';\n\ninterface Props {\n  onDelete: (webhook: string) => Promise<void>;\n  onUpdate: (data: { webhook: string; name: string; url: string }) => Promise<void>;\n  webhook: T.Webhook;\n}\n\nexport default function WebhookItem({ onDelete, onUpdate, webhook }: Props) {\n  return (\n    <tr>\n      <td>{webhook.name}</td>\n      <td>{webhook.url}</td>\n      <td>{webhook.secret ? translate('yes') : translate('no')}</td>\n      <td>\n        <WebhookItemLatestDelivery webhook={webhook} />\n      </td>\n      <td className=\"thin nowrap text-right\">\n        <WebhookActions onDelete={onDelete} onUpdate={onUpdate} webhook={webhook} />\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport WebhookItem from './WebhookItem';\n\ninterface Props {\n  onDelete: (webhook: string) => Promise<void>;\n  onUpdate: (data: { webhook: string; name: string; url: string }) => Promise<void>;\n  webhooks: T.Webhook[];\n}\n\nexport default class WebhooksList extends React.PureComponent<Props> {\n  renderHeader = () => (\n    <thead>\n      <tr>\n        <th>{translate('name')}</th>\n        <th>{translate('webhooks.url')}</th>\n        <th>{translate('webhooks.secret_header')}</th>\n        <th>{translate('webhooks.last_execution')}</th>\n        <th />\n      </tr>\n    </thead>\n  );\n\n  render() {\n    const { webhooks } = this.props;\n    if (webhooks.length < 1) {\n      return <p>{translate('webhooks.no_result')}</p>;\n    }\n    return (\n      <table className=\"data zebra\">\n        {this.renderHeader()}\n        <tbody>\n          {sortBy(webhooks, webhook => webhook.name.toLowerCase()).map(webhook => (\n            <WebhookItem\n              key={webhook.key}\n              onDelete={this.props.onDelete}\n              onUpdate={this.props.onUpdate}\n              webhook={webhook}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createWebhook, deleteWebhook, searchWebhooks, updateWebhook } from '../../../api/webhooks';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport PageActions from './PageActions';\nimport PageHeader from './PageHeader';\nimport WebhooksList from './WebhooksList';\n\ninterface Props {\n  component?: T.LightComponent;\n}\n\ninterface State {\n  loading: boolean;\n  webhooks: T.Webhook[];\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true, webhooks: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchWebhooks();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchWebhooks = () => {\n    return searchWebhooks(this.getScopeParams()).then(\n      ({ webhooks }) => {\n        if (this.mounted) {\n          this.setState({ loading: false, webhooks });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  getScopeParams = ({ component } = this.props) => {\n    return {\n      project: component && component.key\n    };\n  };\n\n  handleCreate = (data: { name: string; secret?: string; url: string }) => {\n    const createData = {\n      name: data.name,\n      url: data.url,\n      ...(data.secret && { secret: data.secret }),\n      ...this.getScopeParams()\n    };\n\n    return createWebhook(createData).then(({ webhook }) => {\n      if (this.mounted) {\n        this.setState(({ webhooks }) => ({ webhooks: [...webhooks, webhook] }));\n      }\n    });\n  };\n\n  handleDelete = (webhook: string) => {\n    return deleteWebhook({ webhook }).then(() => {\n      if (this.mounted) {\n        this.setState(({ webhooks }) => ({\n          webhooks: webhooks.filter(item => item.key !== webhook)\n        }));\n      }\n    });\n  };\n\n  handleUpdate = (data: { webhook: string; name: string; secret?: string; url: string }) => {\n    const udpateData = {\n      webhook: data.webhook,\n      name: data.name,\n      url: data.url,\n      ...(data.secret && { secret: data.secret })\n    };\n\n    return updateWebhook(udpateData).then(() => {\n      if (this.mounted) {\n        this.setState(({ webhooks }) => ({\n          webhooks: webhooks.map(webhook =>\n            webhook.key === data.webhook\n              ? { ...webhook, name: data.name, secret: data.secret, url: data.url }\n              : webhook\n          )\n        }));\n      }\n    });\n  };\n\n  render() {\n    const { loading, webhooks } = this.state;\n\n    return (\n      <>\n        <Suggestions suggestions=\"webhooks\" />\n        <Helmet defer={false} title={translate('webhooks.page')} />\n\n        <div className=\"page page-limited\">\n          <PageHeader loading={loading}>\n            <PageActions\n              loading={loading}\n              onCreate={this.handleCreate}\n              webhooksCount={webhooks.length}\n            />\n          </PageHeader>\n\n          {!loading && (\n            <div className=\"boxed-group boxed-group-inner\">\n              <WebhooksList\n                onDelete={this.handleDelete}\n                onUpdate={this.handleUpdate}\n                webhooks={webhooks}\n              />\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport './CodeSnippet.css';\n\nexport interface CodeSnippetProps {\n  isOneLine?: boolean;\n  noCopy?: boolean;\n  snippet: string | (string | undefined)[];\n}\n\nexport default function CodeSnippet(props: CodeSnippetProps) {\n  const { isOneLine, noCopy, snippet } = props;\n  const snippetRef = React.useRef<HTMLPreElement>(null);\n\n  let finalSnippet: string;\n  if (Array.isArray(snippet)) {\n    finalSnippet = snippet.filter(line => isDefined(line)).join(isOneLine ? ' ' : ' \\\\\\n  ');\n  } else {\n    finalSnippet = snippet;\n  }\n\n  return (\n    <div className={classNames('code-snippet spacer-top spacer-bottom display-flex-row', {})}>\n      <pre className=\"flex-1\" ref={snippetRef}>\n        {finalSnippet}\n      </pre>\n      {!noCopy && <ClipboardButton copyValue={finalSnippet} />}\n    </div>\n  );\n}\n"],"sourceRoot":""}