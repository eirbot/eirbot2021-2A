{"version":3,"sources":["webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx","webpack:///./src/main/js/components/common/ProjectKeyInput.tsx","webpack:///./src/main/js/helpers/projects.ts","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css?95f7","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css","webpack:///./src/main/js/apps/create/project/style.css?00fe","webpack:///./src/main/js/apps/create/project/style.css","webpack:///./src/main/js/api/alm-integrations.ts","webpack:///./src/main/js/apps/create/project/AzurePersonalAccessTokenForm.tsx","webpack:///./src/main/js/apps/create/project/types.ts","webpack:///./src/main/js/apps/create/project/AzureProjectAccordion.tsx","webpack:///./src/main/js/apps/create/project/AzureProjectsList.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageHeader.tsx","webpack:///./src/main/js/apps/create/project/WrongBindingCountAlert.tsx","webpack:///./src/main/js/apps/create/project/AzureProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/AzureProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectAccordion.tsx","webpack:///./src/main/js/apps/create/project/BitbucketRepositories.tsx","webpack:///./src/main/js/apps/create/project/BitbucketSearchResults.tsx","webpack:///./src/main/js/apps/create/project/BitbucketImportRepositoryForm.tsx","webpack:///./src/main/js/apps/create/project/PersonalAccessTokenForm.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/constants.ts","webpack:///./src/main/js/apps/create/project/BitbucketProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectModeSelection.tsx","webpack:///./src/main/js/apps/create/project/GitHubProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/GitHubProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/GitlabProjectSelectionForm.tsx","webpack:///./src/main/js/apps/create/project/GitlabProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/GitlabProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPage.tsx","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/components/common/DocumentationTooltip.tsx","webpack:///./src/main/js/api/alm-settings.ts","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts"],"names":["whenLoggedIn","WrappedComponent","componentDidMount","this","props","currentUser","render","displayName","Wrapper","ProjectKeyInput","error","help","label","placeholder","projectKey","touched","validating","isInvalid","undefined","isValid","className","description","id","required","autoFocus","maxLength","minLength","onChange","onProjectKeyChange","type","value","validateProjectKey","length","Empty","TooLong","test","Valid","OnlyDigits","InvalidChar","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","setAlmPersonalAccessToken","almSetting","pat","catch","throwGlobalError","checkPersonalAccessTokenIsValid","then","response","status","searchAzureRepositories","searchQuery","getGithubOrganizations","token","getGithubRepositories","data","organization","pageSize","page","query","p","ps","q","getGitlabProjects","projectName","projects","projectsPaging","importGitlabProject","gitlabProjectId","getAzurePatUrl","url","replace","AzurePersonalAccessTokenForm","alm","submitting","validationFailed","setTouched","errorMessage","setToken","defaultMessage","values","link","href","rel","target","scope","onSubmit","e","preventDefault","onPersonalAccessTokenCreate","name","disabled","loading","CreateProjectModes","highlight","text","term","underline","toLowerCase","includes","split","RegExp","pre","found","post","AzureProjectAccordion","importing","startsOpen","project","repositories","selectedRepository","open","setOpen","setPage","limitedRepositories","slice","isSelected","repo","onClick","onOpen","title","map","key","sqProjectKey","fill","green","size","to","sqProjectName","checked","onCheck","onSelectRepository","count","total","loadMore","Alert","variant","pathname","mode","AzureDevOps","resetPat","AzureProjectsList","loadingRepositories","searchResults","filteredProjects","filter","displayedProjects","keySuffix","Boolean","onOpenProject","CreateProjectPageHeader","additionalActions","WrongBindingCountAlert","canAdmin","category","AzureProjectCreateRenderer","searching","settings","showPersonalAccessTokenForm","submittingToken","tokenValidationFailed","onImportRepository","alt","height","src","Azure","onSearch","mounted","fetchInitialData","setState","checkPersonalAccessToken","patIsValid","fetchAzureProjects","state","firstProjectName","fetchAzureRepositories","repos","Promise","resolve","getAzureRepositories","cleanUrl","location","router","handleOpenProject","projectRepos","handleSearchRepositories","results","handleImportRepository","repositoryName","createdProject","onProjectCreate","handleSelectRepository","handlePersonalAccessTokenCreate","componentDidUpdate","prevProps","componentWillUnmount","loadingBindings","BitbucketProjectAccordion","disableRepositories","showingAllRepositories","repositoryCount","BitbucketServer","String","BitbucketRepositories","projectRepositories","openProjectKeys","setOpenProjectKeys","allAreExpanded","isOpen","allShown","handleClick","BitbucketSearchResults","some","r","filteredProjectKeys","filteredSearchResults","BitbucketImportRepositoryForm","getPatUrl","endsWith","PersonalAccessTokenForm","FormData","currentTarget","get","display","perm","GitLab","BitbucketProjectCreateRenderer","bitbucketSetting","fetchBitbucketProjects","fetchBitbucketRepositories","all","isLastPage","filteredRepositories","reduce","acc","repositorySlug","slug","handleSearch","bitbucketSettings","renderAlmOption","almCounts","tooltipLinks","onSelectMode","style","lineHeight","DocumentationTooltip","links","withAppState","GitHub","orgToOption","organizations","o","GitHubProjectCreateRenderer","loadingOrganizations","selectedOrganization","defaultOptions","minimumQueryLength","onSelect","onSelectOrganization","repositoryPaging","isDisabled","repository","onLoadMore","renderRepositoryList","triggerSearch","fetchRepositories","organizationKey","handleSelectOrganization","find","handleLoadMore","pageIndex","repositoryKey","initialize","code","redirectToGithub","fetchOrganizations","clientId","queryParams","param","join","instanceRootUrl","window","params","paging","GitlabProjectSelectionForm","importingGitlabProjectId","loadingMore","overlay","qualifier","Project","pathSlug","pathName","onImport","GitlabProjectCreateRenderer","tokenIsValid","fetchProjects","result","handleError","doImport","handleImport","checkFreeKey","component","alreadyExist","projectKeyError","handleFormSubmit","event","canSubmit","trim","handleProjectKeyChange","validateKey","prevState","projectNameChanged","projectNameError","validateName","handleProjectNameChange","projectNameIsInvalid","projectNameIsValid","azureSettings","githubSettings","gitlabSettings","fetchAlmBindings","almSettings","s","handleModeSelect","handleProjectCreate","projectKeys","renderForm","Manual","titleTemplate","A11ySkipTarget","anchor","Consumer","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","weight","inPlace","children","getAlmDefinitions","getAlmDefinitionsNoCatch","getAlmSettings","validateAlmSettings","BadRequest","createGithubConfiguration","updateGithubConfiguration","createAzureConfiguration","updateAzureConfiguration","createBitbucketConfiguration","updateBitbucketConfiguration","createBitbucketCloudConfiguration","updateBitbucketCloudConfiguration","createGitlabConfiguration","updateGitlabConfiguration","deleteConfiguration","countBindedProjects","getProjectAlmBinding","deleteProjectAlmBinding","setProjectAzureBinding","setProjectBitbucketBinding","setProjectBitbucketCloudBinding","setProjectGithubBinding","setProjectGitlabBinding","ALM_INTEGRATION","ANALYSIS_SCOPE_CATEGORY","LANGUAGES_CATEGORY","NEW_CODE_PERIOD_CATEGORY","PULL_REQUEST_DECORATION_BINDING_CATEGORY"],"mappings":"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","file":"js/311.1613385090031.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport handleRequiredAuthentication from 'sonar-ui-common/helpers/handleRequiredAuthentication';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { PROJECT_KEY_MAX_LEN } from '../../helpers/constants';\n\nexport interface ProjectKeyInputProps {\n  error?: string;\n  help?: string;\n  label?: string;\n  onProjectKeyChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  projectKey?: string;\n  touched: boolean;\n  validating?: boolean;\n}\n\nexport default function ProjectKeyInput(props: ProjectKeyInputProps) {\n  const { error, help, label, placeholder, projectKey, touched, validating } = props;\n\n  const isInvalid = touched && error !== undefined;\n  const isValid = touched && !validating && error === undefined;\n\n  return (\n    <ValidationInput\n      className=\"form-field\"\n      description={translate('onboarding.create_project.project_key.description')}\n      error={error}\n      help={help}\n      id=\"project-key\"\n      isInvalid={isInvalid}\n      isValid={isValid}\n      label={label}\n      required={label !== undefined}>\n      <input\n        autoFocus={true}\n        className={classNames('input-super-large', {\n          'is-invalid': isInvalid,\n          'is-valid': isValid\n        })}\n        id=\"project-key\"\n        maxLength={PROJECT_KEY_MAX_LEN}\n        minLength={1}\n        onChange={props.onProjectKeyChange}\n        placeholder={placeholder}\n        type=\"text\"\n        value={projectKey}\n      />\n    </ValidationInput>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { ProjectKeyValidationResult } from '../types/component';\nimport { PROJECT_KEY_MAX_LEN } from './constants';\n\nexport function validateProjectKey(projectKey: string): ProjectKeyValidationResult {\n  // This is the regex used on the backend:\n  //   [\\p{Alnum}\\-_.:]*[\\p{Alpha}\\-_.:]+[\\p{Alnum}\\-_.:]*\n  // See sonar-core/src/main/java/org/sonar/core/component/ComponentKeys.java\n  const regex = /^[\\w\\-.:]*[a-z\\-_.:]+[\\w\\-.:]*$/i;\n  if (projectKey.length === 0) {\n    return ProjectKeyValidationResult.Empty;\n  } else if (projectKey.length > PROJECT_KEY_MAX_LEN) {\n    return ProjectKeyValidationResult.TooLong;\n  } else if (regex.test(projectKey)) {\n    return ProjectKeyValidationResult.Valid;\n  } else {\n    return /^[0-9]+$/.test(projectKey)\n      ? ProjectKeyValidationResult.OnlyDigits\n      : ProjectKeyValidationResult.InvalidChar;\n  }\n}\n","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".manual-project-create{max-width:700px}.manual-project-create .button{margin-top:8px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#create-project{padding-top:0!important}#create-project header{padding-top:20px;background-color:#f3f3f3;position:-webkit-sticky;position:sticky;top:48px;z-index:50}.create-project-manual{display:flex!important;justify-content:space-between}.create-project-azdo-repo{width:410px;min-height:40px;box-sizing:border-box;margin-right:auto}.create-project-import-bbs .open .boxed-group-header{border-bottom:1px solid #e6e6e6}.create-project-import-bbs .boxed-group-inner{padding-top:24px}.create-project-import-bbs-repo{width:250px;min-height:40px}.create-project-github-repository{box-sizing:border-box;width:33.33%}.create-project-github-repository .notice{display:block;position:absolute}.create-project-github-repository .notice svg{color:#0a0}.create-project-import-gitlab table>tbody>tr>td{vertical-align:middle}.create-project-import-gitlab .project-name,.create-project-import-gitlab .project-path{max-width:400px}.create-project-import-gitlab .sq-project-link{max-width:300px}.create-project-import-gitlab .already-set-up svg{color:#0a0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { get, getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AzureProject,\n  AzureRepository,\n  BitbucketProject,\n  BitbucketRepository,\n  GithubOrganization,\n  GithubRepository,\n  GitlabProject\n} from '../types/alm-integration';\nimport { ProjectBase } from './components';\n\nexport function setAlmPersonalAccessToken(almSetting: string, pat: string): Promise<void> {\n  return post('/api/alm_integrations/set_pat', { almSetting, pat }).catch(throwGlobalError);\n}\n\nexport function checkPersonalAccessTokenIsValid(almSetting: string): Promise<boolean> {\n  return get('/api/alm_integrations/check_pat', { almSetting })\n    .then(() => true)\n    .catch((response: Response) => {\n      if (response.status === 400) {\n        return false;\n      } else {\n        return throwGlobalError(response);\n      }\n    });\n}\n\nexport function getAzureProjects(almSetting: string): Promise<{ projects: AzureProject[] }> {\n  return getJSON('/api/alm_integrations/list_azure_projects', { almSetting }).catch(\n    throwGlobalError\n  );\n}\n\nexport function getAzureRepositories(\n  almSetting: string,\n  projectName: string\n): Promise<{ repositories: AzureRepository[] }> {\n  return getJSON('/api/alm_integrations/search_azure_repos', { almSetting, projectName }).catch(\n    throwGlobalError\n  );\n}\n\nexport function searchAzureRepositories(\n  almSetting: string,\n  searchQuery: string\n): Promise<{ repositories: AzureRepository[] }> {\n  return getJSON('/api/alm_integrations/search_azure_repos', { almSetting, searchQuery }).catch(\n    throwGlobalError\n  );\n}\n\nexport function importAzureRepository(\n  almSetting: string,\n  projectName: string,\n  repositoryName: string\n): Promise<{ project: ProjectBase }> {\n  return postJSON('/api/alm_integrations/import_azure_project', {\n    almSetting,\n    projectName,\n    repositoryName\n  }).catch(throwGlobalError);\n}\n\nexport function getBitbucketServerProjects(\n  almSetting: string\n): Promise<{ projects: BitbucketProject[] }> {\n  return getJSON('/api/alm_integrations/list_bitbucketserver_projects', { almSetting });\n}\n\nexport function getBitbucketServerRepositories(\n  almSetting: string,\n  projectName: string\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketserver_repos', {\n    almSetting,\n    projectName\n  });\n}\n\nexport function importBitbucketServerProject(\n  almSetting: string,\n  projectKey: string,\n  repositorySlug: string\n): Promise<{ project: ProjectBase }> {\n  return postJSON('/api/alm_integrations/import_bitbucketserver_project', {\n    almSetting,\n    projectKey,\n    repositorySlug\n  }).catch(throwGlobalError);\n}\n\nexport function searchForBitbucketServerRepositories(\n  almSetting: string,\n  repositoryName: string\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketserver_repos', {\n    almSetting,\n    repositoryName\n  });\n}\n\nexport function getGithubClientId(almSetting: string): Promise<{ clientId?: string }> {\n  return getJSON('/api/alm_integrations/get_github_client_id', { almSetting });\n}\n\nexport function importGithubRepository(\n  almSetting: string,\n  organization: string,\n  repositoryKey: string\n): Promise<{ project: ProjectBase }> {\n  return postJSON('/api/alm_integrations/import_github_project', {\n    almSetting,\n    organization,\n    repositoryKey\n  }).catch(throwGlobalError);\n}\n\nexport function getGithubOrganizations(\n  almSetting: string,\n  token: string\n): Promise<{ organizations: GithubOrganization[] }> {\n  return getJSON('/api/alm_integrations/list_github_organizations', {\n    almSetting,\n    token\n  }).catch((response?: Response) => {\n    if (response && response.status !== 400) {\n      throwGlobalError(response);\n    }\n  });\n}\n\nexport function getGithubRepositories(data: {\n  almSetting: string;\n  organization: string;\n  pageSize: number;\n  page?: number;\n  query?: string;\n}): Promise<{ repositories: GithubRepository[]; paging: T.Paging }> {\n  const { almSetting, organization, pageSize, page = 1, query } = data;\n  return getJSON('/api/alm_integrations/list_github_repositories', {\n    almSetting,\n    organization,\n    p: page,\n    ps: pageSize,\n    q: query || undefined\n  }).catch(throwGlobalError);\n}\n\nexport function getGitlabProjects(data: {\n  almSetting: string;\n  page?: number;\n  pageSize?: number;\n  query?: string;\n}): Promise<{ projects: GitlabProject[]; projectsPaging: T.Paging }> {\n  const { almSetting, pageSize, page, query } = data;\n  return getJSON('/api/alm_integrations/search_gitlab_repos', {\n    almSetting,\n    projectName: query || undefined,\n    p: page,\n    ps: pageSize\n  })\n    .then(({ repositories, paging }) => ({ projects: repositories, projectsPaging: paging }))\n    .catch(throwGlobalError);\n}\n\nexport function importGitlabProject(data: {\n  almSetting: string;\n  gitlabProjectId: string;\n}): Promise<{ project: ProjectBase }> {\n  const { almSetting, gitlabProjectId } = data;\n  return postJSON('/api/alm_integrations/import_gitlab_project', {\n    almSetting,\n    gitlabProjectId\n  }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\n\nexport interface AzurePersonalAccessTokenFormProps {\n  almSetting: AlmSettingsInstance;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  submitting?: boolean;\n  validationFailed: boolean;\n}\n\nfunction getAzurePatUrl(url: string) {\n  return `${url.replace(/\\/$/, '')}/_usersSettings/tokens`;\n}\n\nexport default function AzurePersonalAccessTokenForm(props: AzurePersonalAccessTokenFormProps) {\n  const {\n    almSetting: { alm, url },\n    submitting = false,\n    validationFailed\n  } = props;\n\n  const [touched, setTouched] = React.useState(false);\n  React.useEffect(() => {\n    setTouched(false);\n  }, [submitting]);\n\n  const [token, setToken] = React.useState('');\n\n  const isInvalid = (validationFailed && !touched) || (touched && !token);\n\n  let errorMessage;\n  if (!token) {\n    errorMessage = translate('onboarding.create_project.pat_form.pat_required');\n  } else if (isInvalid) {\n    errorMessage = translate('onboarding.create_project.pat_incorrect', alm);\n  }\n\n  return (\n    <div className=\"boxed-group abs-width-600\">\n      <div className=\"boxed-group-inner\">\n        <h2>{translate('onboarding.create_project.pat_form.title', alm)}</h2>\n\n        <div className=\"big-spacer-top big-spacer-bottom\">\n          <FormattedMessage\n            id=\"onboarding.create_project.pat_help.instructions\"\n            defaultMessage={translate('onboarding.create_project.pat_help.instructions', alm)}\n            values={{\n              link: url ? (\n                <a\n                  className=\"link-with-icon\"\n                  href={getAzurePatUrl(url)}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\">\n                  <DetachIcon className=\"little-spacer-right\" />\n                  <span>\n                    {translate('onboarding.create_project.pat_help.instructions.link', alm)}\n                  </span>\n                </a>\n              ) : (\n                translate('onboarding.create_project.pat_help.instructions.link', alm)\n              ),\n              scope: (\n                <strong>\n                  <em>Code (Read & Write)</em>\n                </strong>\n              )\n            }}\n          />\n        </div>\n\n        <form\n          onSubmit={(e: React.SyntheticEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            props.onPersonalAccessTokenCreate(token);\n          }}>\n          <ValidationInput\n            error={errorMessage}\n            id=\"personal_access_token\"\n            isInvalid={isInvalid}\n            isValid={false}\n            label={translate('onboarding.create_project.enter_pat')}\n            required={true}>\n            <input\n              autoFocus={true}\n              className={classNames('width-100 little-spacer-bottom', {\n                'is-invalid': isInvalid\n              })}\n              id=\"personal_access_token\"\n              minLength={1}\n              name=\"personal_access_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setToken(e.target.value);\n                setTouched(true);\n              }}\n              type=\"text\"\n              value={token}\n            />\n          </ValidationInput>\n\n          <SubmitButton disabled={isInvalid || submitting || !touched}>\n            {translate('onboarding.create_project.pat_form.list_repositories')}\n          </SubmitButton>\n          <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n        </form>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum CreateProjectModes {\n  Manual = 'manual',\n  AzureDevOps = 'azure',\n  BitbucketServer = 'bitbucket',\n  GitHub = 'github',\n  GitLab = 'gitlab'\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport BoxedGroupAccordion from 'sonar-ui-common/components/controls/BoxedGroupAccordion';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { AzureProject, AzureRepository } from '../../../types/alm-integration';\nimport { CreateProjectModes } from './types';\n\nexport interface AzureProjectAccordionProps {\n  importing: boolean;\n  loading: boolean;\n  onOpen: (key: string) => void;\n  onSelectRepository: (repository: AzureRepository) => void;\n  project: AzureProject;\n  repositories?: AzureRepository[];\n  searchQuery?: string;\n  selectedRepository?: AzureRepository;\n  startsOpen: boolean;\n}\n\nconst PAGE_SIZE = 30;\n\nfunction highlight(text: string, term?: string, underline = false) {\n  if (!term || !text.toLowerCase().includes(term.toLowerCase())) {\n    return text;\n  }\n\n  // Capture only the first occurence by using a capturing group to get\n  // everything after the first occurence\n  const [pre, found, post] = text.split(new RegExp(`(${term})(.*)`, 'i'));\n  return (\n    <>\n      {pre}\n      <strong className={classNames({ underline })}>{found}</strong>\n      {post}\n    </>\n  );\n}\n\nexport default function AzureProjectAccordion(props: AzureProjectAccordionProps) {\n  const {\n    importing,\n    loading,\n    startsOpen,\n    project,\n    repositories = [],\n    searchQuery,\n    selectedRepository\n  } = props;\n\n  const [open, setOpen] = React.useState(startsOpen);\n  const handleClick = () => {\n    if (!open) {\n      props.onOpen(project.name);\n    }\n    setOpen(!open);\n  };\n\n  const [page, setPage] = React.useState(1);\n  const limitedRepositories = repositories.slice(0, page * PAGE_SIZE);\n\n  const isSelected = (repo: AzureRepository) =>\n    selectedRepository?.projectName === project.name && selectedRepository.name === repo.name;\n\n  return (\n    <BoxedGroupAccordion\n      className={classNames('big-spacer-bottom', {\n        open\n      })}\n      onClick={handleClick}\n      open={open}\n      title={<h3 title={project.description}>{highlight(project.name, searchQuery, true)}</h3>}>\n      {open && (\n        <DeferredSpinner loading={loading}>\n          {/* The extra loading guard is to prevent the flash of the Alert */}\n          {!loading && repositories.length === 0 ? (\n            <Alert variant=\"warning\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.create_project.azure.no_repositories')}\n                id=\"onboarding.create_project.azure.no_repositories\"\n                values={{\n                  link: (\n                    <Link\n                      to={{\n                        pathname: '/projects/create',\n                        query: { mode: CreateProjectModes.AzureDevOps, resetPat: 1 }\n                      }}>\n                      {translate('onboarding.create_project.update_your_token')}\n                    </Link>\n                  )\n                }}\n              />\n            </Alert>\n          ) : (\n            <>\n              <div className=\"display-flex-wrap\">\n                {limitedRepositories.map(repo => (\n                  <div\n                    className=\"create-project-azdo-repo display-flex-start spacer-bottom padded-right\"\n                    key={repo.name}>\n                    {repo.sqProjectKey ? (\n                      <>\n                        <CheckIcon className=\"spacer-right\" fill={colors.green} size={14} />\n                        <div className=\"overflow-hidden\">\n                          <div className=\"little-spacer-bottom text-ellipsis\">\n                            <Link to={getProjectUrl(repo.sqProjectKey)} title={repo.sqProjectName}>\n                              {highlight(repo.sqProjectName || repo.name, searchQuery)}\n                            </Link>\n                          </div>\n                          <em>{translate('onboarding.create_project.repository_imported')}</em>\n                        </div>\n                      </>\n                    ) : (\n                      <Radio\n                        checked={isSelected(repo)}\n                        className=\"overflow-hidden\"\n                        disabled={importing}\n                        onCheck={() => props.onSelectRepository(repo)}\n                        value={repo.name}>\n                        <span className=\"text-ellipsis\" title={repo.name}>\n                          {highlight(repo.name, searchQuery)}\n                        </span>\n                      </Radio>\n                    )}\n                  </div>\n                ))}\n              </div>\n              <ListFooter\n                count={limitedRepositories.length}\n                total={repositories.length}\n                loadMore={() => setPage(p => p + 1)}\n              />\n            </>\n          )}\n        </DeferredSpinner>\n      )}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AzureProject, AzureRepository } from '../../../types/alm-integration';\nimport AzureProjectAccordion from './AzureProjectAccordion';\nimport { CreateProjectModes } from './types';\n\nexport interface AzureProjectsListProps {\n  importing: boolean;\n  loadingRepositories: T.Dict<boolean>;\n  onOpenProject: (key: string) => void;\n  onSelectRepository: (repository: AzureRepository) => void;\n  projects?: AzureProject[];\n  repositories: T.Dict<AzureRepository[]>;\n  searchResults?: T.Dict<AzureRepository[]>;\n  searchQuery?: string;\n  selectedRepository?: AzureRepository;\n}\n\nconst PAGE_SIZE = 10;\n\nexport default function AzureProjectsList(props: AzureProjectsListProps) {\n  const {\n    importing,\n    loadingRepositories,\n    projects = [],\n    repositories,\n    searchResults,\n    searchQuery,\n    selectedRepository\n  } = props;\n\n  const [page, setPage] = React.useState(1);\n\n  const filteredProjects = searchResults\n    ? projects.filter(p => searchResults[p.name] !== undefined)\n    : projects;\n\n  if (filteredProjects.length === 0) {\n    return (\n      <Alert className=\"spacer-top\" variant=\"warning\">\n        {searchResults ? (\n          translate('onboarding.create_project.azure.no_results')\n        ) : (\n          <FormattedMessage\n            defaultMessage={translate('onboarding.create_project.azure.no_projects')}\n            id=\"onboarding.create_project.azure.no_projects\"\n            values={{\n              link: (\n                <Link\n                  to={{\n                    pathname: '/projects/create',\n                    query: { mode: CreateProjectModes.AzureDevOps, resetPat: 1 }\n                  }}>\n                  {translate('onboarding.create_project.update_your_token')}\n                </Link>\n              )\n            }}\n          />\n        )}\n      </Alert>\n    );\n  }\n\n  const displayedProjects = filteredProjects.slice(0, page * PAGE_SIZE);\n\n  // Add a suffix to the key to force react to not reuse AzureProjectAccordions between\n  // search results and project exploration\n  const keySuffix = searchResults ? ' - result' : '';\n\n  return (\n    <div>\n      {displayedProjects.map((p, i) => (\n        <AzureProjectAccordion\n          key={`${p.name}${keySuffix}`}\n          importing={importing}\n          loading={Boolean(loadingRepositories[p.name])}\n          onOpen={props.onOpenProject}\n          onSelectRepository={props.onSelectRepository}\n          project={p}\n          repositories={searchResults ? searchResults[p.name] : repositories[p.name]}\n          selectedRepository={selectedRepository}\n          searchQuery={searchQuery}\n          startsOpen={searchResults !== undefined || i === 0}\n        />\n      ))}\n\n      <ListFooter\n        count={displayedProjects.length}\n        loadMore={() => setPage(p => p + 1)}\n        total={filteredProjects.length}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface CreateProjectPageHeaderProps {\n  additionalActions?: React.ReactNode;\n  title: React.ReactNode;\n}\n\nexport default function CreateProjectPageHeader(props: CreateProjectPageHeaderProps) {\n  const { additionalActions, title } = props;\n\n  return (\n    <header className=\"huge-spacer-bottom bordered-bottom overflow-hidden\">\n      <h1 className=\"pull-left huge big-spacer-bottom\">{title}</h1>\n\n      {additionalActions}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmKeys } from '../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../../settings/components/AdditionalCategoryKeys';\n\nexport interface WrongBindingCountAlertProps {\n  alm: AlmKeys;\n  canAdmin: boolean;\n}\n\nexport default function WrongBindingCountAlert(props: WrongBindingCountAlertProps) {\n  const { alm, canAdmin } = props;\n\n  return (\n    <Alert variant=\"error\">\n      {canAdmin ? (\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.wrong_binding_count.admin')}\n          id=\"onboarding.create_project.wrong_binding_count.admin\"\n          values={{\n            alm: translate('onboarding.alm', alm),\n            url: (\n              <Link\n                to={{\n                  pathname: '/admin/settings',\n                  query: { category: ALM_INTEGRATION }\n                }}>\n                {translate('settings.page')}\n              </Link>\n            )\n          }}\n        />\n      ) : (\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.wrong_binding_count')}\n          id=\"onboarding.create_project.wrong_binding_count\"\n          values={{\n            alm: translate('onboarding.alm', alm)\n          }}\n        />\n      )}\n    </Alert>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { AzureProject, AzureRepository } from '../../../types/alm-integration';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport AzurePersonalAccessTokenForm from './AzurePersonalAccessTokenForm';\nimport AzureProjectsList from './AzureProjectsList';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport WrongBindingCountAlert from './WrongBindingCountAlert';\n\nexport interface AzureProjectCreateRendererProps {\n  canAdmin?: boolean;\n  importing: boolean;\n  loading: boolean;\n  loadingRepositories: T.Dict<boolean>;\n  onImportRepository: () => void;\n  onOpenProject: (key: string) => void;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repository: AzureRepository) => void;\n  projects?: AzureProject[];\n  repositories: T.Dict<AzureRepository[]>;\n  searching?: boolean;\n  searchResults?: T.Dict<AzureRepository[]>;\n  searchQuery?: string;\n  selectedRepository?: AzureRepository;\n  settings?: AlmSettingsInstance;\n  showPersonalAccessTokenForm?: boolean;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default function AzureProjectCreateRenderer(props: AzureProjectCreateRendererProps) {\n  const {\n    canAdmin,\n    importing,\n    loading,\n    loadingRepositories,\n    projects,\n    repositories,\n    searching,\n    searchResults,\n    searchQuery,\n    selectedRepository,\n    settings,\n    showPersonalAccessTokenForm,\n    submittingToken,\n    tokenValidationFailed\n  } = props;\n\n  return (\n    <>\n      <CreateProjectPageHeader\n        additionalActions={\n          !showPersonalAccessTokenForm && (\n            <div className=\"display-flex-center pull-right\">\n              <DeferredSpinner className=\"spacer-right\" loading={importing} />\n              <Button\n                className=\"button-large button-primary\"\n                disabled={!selectedRepository || importing}\n                onClick={props.onImportRepository}>\n                {translate('onboarding.create_project.import_selected_repo')}\n              </Button>\n            </div>\n          )\n        }\n        title={\n          <span className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"24\"\n              src={`${getBaseUrl()}/images/alm/azure.svg`}\n            />\n            {translate('onboarding.create_project.azure.title')}\n          </span>\n        }\n      />\n\n      {loading && <i className=\"spinner\" />}\n\n      {!loading && !(settings && settings.url) && (\n        <WrongBindingCountAlert alm={AlmKeys.Azure} canAdmin={!!canAdmin} />\n      )}\n\n      {!loading &&\n        settings &&\n        (showPersonalAccessTokenForm ? (\n          <div className=\"display-flex-justify-center\">\n            <AzurePersonalAccessTokenForm\n              almSetting={settings}\n              onPersonalAccessTokenCreate={props.onPersonalAccessTokenCreate}\n              submitting={submittingToken}\n              validationFailed={tokenValidationFailed}\n            />\n          </div>\n        ) : (\n          <>\n            <div className=\"huge-spacer-bottom\">\n              <SearchBox\n                onChange={props.onSearch}\n                placeholder={translate('onboarding.create_project.search_projects_repositories')}\n              />\n            </div>\n            <DeferredSpinner loading={Boolean(searching)}>\n              <AzureProjectsList\n                importing={importing}\n                loadingRepositories={loadingRepositories}\n                onOpenProject={props.onOpenProject}\n                onSelectRepository={props.onSelectRepository}\n                projects={projects}\n                repositories={repositories}\n                searchResults={searchResults}\n                searchQuery={searchQuery}\n                selectedRepository={selectedRepository}\n              />\n            </DeferredSpinner>\n          </>\n        ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy } from 'lodash';\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport {\n  checkPersonalAccessTokenIsValid,\n  getAzureProjects,\n  getAzureRepositories,\n  importAzureRepository,\n  searchAzureRepositories,\n  setAlmPersonalAccessToken\n} from '../../../api/alm-integrations';\nimport { AzureProject, AzureRepository } from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport AzureCreateProjectRenderer from './AzureProjectCreateRenderer';\n\ninterface Props extends Pick<WithRouterProps, 'location' | 'router'> {\n  canAdmin: boolean;\n  loadingBindings: boolean;\n  onProjectCreate: (projectKeys: string[]) => void;\n  settings: AlmSettingsInstance[];\n}\n\ninterface State {\n  importing: boolean;\n  loading: boolean;\n  loadingRepositories: T.Dict<boolean>;\n  patIsValid?: boolean;\n  projects?: AzureProject[];\n  repositories: T.Dict<AzureRepository[]>;\n  searching?: boolean;\n  searchResults?: T.Dict<AzureRepository[]>;\n  searchQuery?: string;\n  selectedRepository?: AzureRepository;\n  settings?: AlmSettingsInstance;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default class AzureProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // For now, we only handle a single instance. So we always use the first\n      // one from the list.\n      settings: props.settings[0],\n      importing: false,\n      loading: false,\n      loadingRepositories: {},\n      repositories: {},\n      tokenValidationFailed: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchInitialData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.settings.length === 0 && this.props.settings.length > 0) {\n      this.setState(\n        { settings: this.props.settings.length === 1 ? this.props.settings[0] : undefined },\n        () => this.fetchInitialData()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchInitialData = async () => {\n    this.setState({ loading: true });\n\n    const patIsValid = await this.checkPersonalAccessToken().catch(() => false);\n\n    let projects: AzureProject[] | undefined;\n    if (patIsValid) {\n      projects = await this.fetchAzureProjects();\n    }\n\n    const { repositories } = this.state;\n\n    let firstProjectName: string;\n\n    if (projects && projects.length > 0) {\n      firstProjectName = projects[0].name;\n\n      this.setState(({ loadingRepositories }) => ({\n        loadingRepositories: { ...loadingRepositories, [firstProjectName]: true }\n      }));\n\n      const repos = await this.fetchAzureRepositories(firstProjectName);\n      repositories[firstProjectName] = repos;\n    }\n\n    if (this.mounted) {\n      this.setState(({ loadingRepositories }) => {\n        if (firstProjectName) {\n          loadingRepositories[firstProjectName] = false;\n        }\n\n        return {\n          patIsValid,\n          loading: false,\n          loadingRepositories: { ...loadingRepositories },\n          projects,\n          repositories\n        };\n      });\n    }\n  };\n\n  fetchAzureProjects = (): Promise<AzureProject[] | undefined> => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve(undefined);\n    }\n\n    return getAzureProjects(settings.key).then(({ projects }) => projects);\n  };\n\n  fetchAzureRepositories = (projectName: string): Promise<AzureRepository[]> => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve([]);\n    }\n\n    return getAzureRepositories(settings.key, projectName)\n      .then(({ repositories }) => repositories)\n      .catch(() => []);\n  };\n\n  cleanUrl = () => {\n    const { location, router } = this.props;\n    delete location.query.resetPat;\n    router.replace(location);\n  };\n\n  handleOpenProject = async (projectKey: string) => {\n    if (this.state.searchResults) {\n      return;\n    }\n\n    this.setState(({ loadingRepositories }) => ({\n      loadingRepositories: { ...loadingRepositories, [projectKey]: true }\n    }));\n\n    const projectRepos = await this.fetchAzureRepositories(projectKey);\n\n    this.setState(({ loadingRepositories, repositories }) => ({\n      loadingRepositories: { ...loadingRepositories, [projectKey]: false },\n      repositories: { ...repositories, [projectKey]: projectRepos }\n    }));\n  };\n\n  handleSearchRepositories = async (searchQuery: string) => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return;\n    }\n\n    if (searchQuery.length === 0) {\n      this.setState({ searchResults: undefined, searchQuery: undefined });\n      return;\n    }\n\n    this.setState({ searching: true });\n\n    const results: AzureRepository[] = await searchAzureRepositories(settings.key, searchQuery)\n      .then(({ repositories }) => repositories)\n      .catch(() => []);\n\n    if (this.mounted) {\n      this.setState({\n        searching: false,\n        searchResults: groupBy(results, 'projectName'),\n        searchQuery\n      });\n    }\n  };\n\n  handleImportRepository = async () => {\n    const { selectedRepository, settings } = this.state;\n\n    if (!settings || !selectedRepository) {\n      return;\n    }\n\n    this.setState({ importing: true });\n\n    const createdProject = await importAzureRepository(\n      settings.key,\n      selectedRepository.projectName,\n      selectedRepository.name\n    )\n      .then(({ project }) => project)\n      .catch(() => undefined);\n\n    if (this.mounted) {\n      this.setState({ importing: false });\n      if (createdProject) {\n        this.props.onProjectCreate([createdProject.key]);\n      }\n    }\n  };\n\n  handleSelectRepository = (selectedRepository: AzureRepository) => {\n    this.setState({ selectedRepository });\n  };\n\n  checkPersonalAccessToken = () => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve(false);\n    }\n\n    return checkPersonalAccessTokenIsValid(settings.key);\n  };\n\n  handlePersonalAccessTokenCreate = async (token: string) => {\n    const { settings } = this.state;\n\n    if (!settings || token.length < 1) {\n      return;\n    }\n\n    this.setState({ submittingToken: true, tokenValidationFailed: false });\n\n    try {\n      await setAlmPersonalAccessToken(settings.key, token);\n      const patIsValid = await this.checkPersonalAccessToken();\n\n      if (this.mounted) {\n        this.setState({ submittingToken: false, patIsValid, tokenValidationFailed: !patIsValid });\n\n        if (patIsValid) {\n          this.cleanUrl();\n          this.fetchInitialData();\n        }\n      }\n    } catch (e) {\n      if (this.mounted) {\n        this.setState({ submittingToken: false });\n      }\n    }\n  };\n\n  render() {\n    const { canAdmin, loadingBindings, location } = this.props;\n    const {\n      importing,\n      loading,\n      loadingRepositories,\n      patIsValid,\n      projects,\n      repositories,\n      searching,\n      searchResults,\n      searchQuery,\n      selectedRepository,\n      settings,\n      submittingToken,\n      tokenValidationFailed\n    } = this.state;\n\n    return (\n      <AzureCreateProjectRenderer\n        canAdmin={canAdmin}\n        importing={importing}\n        loading={loading || loadingBindings}\n        loadingRepositories={loadingRepositories}\n        onImportRepository={this.handleImportRepository}\n        onOpenProject={this.handleOpenProject}\n        onPersonalAccessTokenCreate={this.handlePersonalAccessTokenCreate}\n        onSearch={this.handleSearchRepositories}\n        onSelectRepository={this.handleSelectRepository}\n        projects={projects}\n        repositories={repositories}\n        searching={searching}\n        searchResults={searchResults}\n        searchQuery={searchQuery}\n        selectedRepository={selectedRepository}\n        settings={settings}\n        showPersonalAccessTokenForm={!patIsValid || Boolean(location.query.resetPat)}\n        submittingToken={submittingToken}\n        tokenValidationFailed={tokenValidationFailed}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport BoxedGroupAccordion from 'sonar-ui-common/components/controls/BoxedGroupAccordion';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { BitbucketProject, BitbucketRepository } from '../../../types/alm-integration';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketProjectAccordionProps {\n  disableRepositories: boolean;\n  onClick?: () => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  open: boolean;\n  project?: BitbucketProject;\n  repositories: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showingAllRepositories: boolean;\n}\n\nexport default function BitbucketProjectAccordion(props: BitbucketProjectAccordionProps) {\n  const {\n    disableRepositories,\n    open,\n    project,\n    repositories,\n    selectedRepository,\n    showingAllRepositories\n  } = props;\n\n  const repositoryCount = repositories.length;\n\n  const title = project?.name ?? translate('search_results');\n\n  return (\n    <BoxedGroupAccordion\n      className={classNames('big-spacer-bottom', {\n        open,\n        'not-clickable': !props.onClick,\n        'no-hover': !props.onClick\n      })}\n      onClick={\n        props.onClick\n          ? props.onClick\n          : () => {\n              /* noop */\n            }\n      }\n      open={open}\n      title={<h3>{title}</h3>}>\n      {open && (\n        <>\n          <div className=\"display-flex-wrap\">\n            {repositoryCount === 0 && (\n              <Alert variant=\"warning\">\n                <FormattedMessage\n                  defaultMessage={translate('onboarding.create_project.no_bbs_repos')}\n                  id=\"onboarding.create_project.no_bbs_repos\"\n                  values={{\n                    link: (\n                      <Link\n                        to={{\n                          pathname: '/projects/create',\n                          query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }\n                        }}>\n                        {translate('onboarding.create_project.update_your_token')}\n                      </Link>\n                    )\n                  }}\n                />\n              </Alert>\n            )}\n\n            {repositories.map(repo =>\n              repo.sqProjectKey ? (\n                <div\n                  className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo\"\n                  key={repo.id}>\n                  <CheckIcon className=\"spacer-right\" fill={colors.green} size={14} />\n                  <div className=\"overflow-hidden\">\n                    <div className=\"little-spacer-bottom text-ellipsis\">\n                      <strong title={repo.name}>\n                        <Link to={getProjectUrl(repo.sqProjectKey)}>{repo.name}</Link>\n                      </strong>\n                    </div>\n                    <em>{translate('onboarding.create_project.repository_imported')}</em>\n                  </div>\n                </div>\n              ) : (\n                <Radio\n                  checked={selectedRepository?.id === repo.id}\n                  className={classNames(\n                    'display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo overflow-hidden',\n                    {\n                      disabled: disableRepositories,\n                      'text-muted': disableRepositories,\n                      'link-no-underline': disableRepositories\n                    }\n                  )}\n                  key={repo.id}\n                  onCheck={() => props.onSelectRepository(repo)}\n                  value={String(repo.id)}>\n                  <strong className=\"text-ellipsis\" title={repo.name}>\n                    {repo.name}\n                  </strong>\n                </Radio>\n              )\n            )}\n          </div>\n\n          {!showingAllRepositories && repositoryCount > 0 && (\n            <Alert variant=\"warning\">\n              {translateWithParameters(\n                'onboarding.create_project.only_showing_X_first_repos',\n                repositoryCount\n              )}\n            </Alert>\n          )}\n        </>\n      )}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq, without } from 'lodash';\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport BitbucketProjectAccordion from './BitbucketProjectAccordion';\n\nexport interface BitbucketRepositoriesProps {\n  disableRepositories: boolean;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects: BitbucketProject[];\n  projectRepositories: BitbucketProjectRepositories;\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketRepositories(props: BitbucketRepositoriesProps) {\n  const { disableRepositories, projects, projectRepositories, selectedRepository } = props;\n\n  const [openProjectKeys, setOpenProjectKeys] = React.useState(\n    projects.length > 0 ? [projects[0].key] : []\n  );\n\n  const allAreExpanded = projects.length <= openProjectKeys.length;\n\n  const handleClick = (isOpen: boolean, projectKey: string) => {\n    setOpenProjectKeys(\n      isOpen ? without(openProjectKeys, projectKey) : uniq([...openProjectKeys, projectKey])\n    );\n  };\n\n  return (\n    <>\n      <div className=\"overflow-hidden spacer-bottom\">\n        <ButtonLink\n          className=\"pull-right\"\n          onClick={() => setOpenProjectKeys(allAreExpanded ? [] : projects.map(p => p.key))}>\n          {allAreExpanded ? translate('collapse_all') : translate('expand_all')}\n        </ButtonLink>\n      </div>\n\n      {projects.map(project => {\n        const isOpen = openProjectKeys.includes(project.key);\n        const { allShown, repositories = [] } = projectRepositories[project.key] || {};\n\n        return (\n          <BitbucketProjectAccordion\n            disableRepositories={disableRepositories}\n            key={project.key}\n            onClick={() => handleClick(isOpen, project.key)}\n            onSelectRepository={props.onSelectRepository}\n            open={isOpen}\n            project={project}\n            repositories={repositories}\n            selectedRepository={selectedRepository}\n            showingAllRepositories={allShown}\n          />\n        );\n      })}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BitbucketProject, BitbucketRepository } from '../../../types/alm-integration';\nimport BitbucketProjectAccordion from './BitbucketProjectAccordion';\n\nexport interface BitbucketSearchResultsProps {\n  disableRepositories: boolean;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects: BitbucketProject[];\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketSearchResults(props: BitbucketSearchResultsProps) {\n  const {\n    disableRepositories,\n    projects,\n    searching,\n    searchResults = [],\n    selectedRepository\n  } = props;\n\n  if (searchResults.length === 0 && !searching) {\n    return (\n      <Alert className=\"big-spacer-top\" variant=\"warning\">\n        {translate('onboarding.create_project.no_bbs_repos.filter')}\n      </Alert>\n    );\n  }\n\n  const filteredProjects = projects.filter(p => searchResults.some(r => r.projectKey === p.key));\n  const filteredProjectKeys = filteredProjects.map(p => p.key);\n  const filteredSearchResults = searchResults.filter(\n    r => !filteredProjectKeys.includes(r.projectKey)\n  );\n\n  return (\n    <div className=\"big-spacer-top\">\n      <DeferredSpinner loading={searching}>\n        {filteredSearchResults.length > 0 && (\n          <BitbucketProjectAccordion\n            disableRepositories={disableRepositories}\n            onSelectRepository={props.onSelectRepository}\n            open={true}\n            repositories={filteredSearchResults}\n            selectedRepository={selectedRepository}\n            showingAllRepositories={true}\n          />\n        )}\n\n        {filteredProjects.map(project => {\n          const repositories = searchResults.filter(r => r.projectKey === project.key);\n\n          return (\n            <BitbucketProjectAccordion\n              disableRepositories={disableRepositories}\n              key={project.key}\n              onSelectRepository={props.onSelectRepository}\n              open={true}\n              project={project}\n              repositories={repositories}\n              selectedRepository={selectedRepository}\n              showingAllRepositories={true}\n            />\n          );\n        })}\n      </DeferredSpinner>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport BitbucketRepositories from './BitbucketRepositories';\nimport BitbucketSearchResults from './BitbucketSearchResults';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketImportRepositoryFormProps {\n  disableRepositories: boolean;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketImportRepositoryForm(props: BitbucketImportRepositoryFormProps) {\n  const {\n    disableRepositories,\n    projects = [],\n    projectRepositories = {},\n    searchResults,\n    searching,\n    selectedRepository\n  } = props;\n\n  if (projects.length === 0) {\n    return (\n      <Alert className=\"spacer-top\" variant=\"warning\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.no_bbs_projects')}\n          id=\"onboarding.create_project.no_bbs_projects\"\n          values={{\n            link: (\n              <Link\n                to={{\n                  pathname: '/projects/create',\n                  query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }\n                }}>\n                {translate('onboarding.create_project.update_your_token')}\n              </Link>\n            )\n          }}\n        />\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"create-project-import-bbs\">\n      <SearchBox\n        onChange={props.onSearch}\n        placeholder={translate('onboarding.create_project.search_repositories_by_name')}\n      />\n\n      {searching || searchResults ? (\n        <BitbucketSearchResults\n          disableRepositories={disableRepositories}\n          onSelectRepository={props.onSelectRepository}\n          projects={projects}\n          searchResults={searchResults}\n          searching={searching}\n          selectedRepository={selectedRepository}\n        />\n      ) : (\n        <BitbucketRepositories\n          disableRepositories={disableRepositories}\n          onSelectRepository={props.onSelectRepository}\n          projectRepositories={projectRepositories}\n          projects={projects}\n          selectedRepository={selectedRepository}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\n\nexport interface PersonalAccessTokenFormProps {\n  almSetting: AlmSettingsInstance;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  submitting?: boolean;\n  validationFailed: boolean;\n}\n\nfunction getPatUrl(alm: AlmKeys, url: string) {\n  if (alm === AlmKeys.BitbucketServer) {\n    return `${url.replace(/\\/$/, '')}/plugins/servlet/access-tokens/add`;\n  } else {\n    // GitLab\n    return url.endsWith('/api/v4')\n      ? `${url.replace('/api/v4', '').replace(/\\/$/, '')}/profile/personal_access_tokens`\n      : 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html#creating-a-personal-access-token';\n  }\n}\n\nexport default function PersonalAccessTokenForm(props: PersonalAccessTokenFormProps) {\n  const {\n    almSetting: { alm, url },\n    submitting = false,\n    validationFailed\n  } = props;\n  const [touched, setTouched] = React.useState(false);\n\n  React.useEffect(() => {\n    setTouched(false);\n  }, [submitting]);\n\n  const isInvalid = validationFailed && !touched;\n\n  return (\n    <div className=\"display-flex-start\">\n      <form\n        className=\"width-50\"\n        onSubmit={(e: React.SyntheticEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          const value = new FormData(e.currentTarget).get('personal_access_token') as string;\n          props.onPersonalAccessTokenCreate(value);\n        }}>\n        <h2 className=\"big\">{translate('onboarding.create_project.pat_form.title', alm)}</h2>\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.pat_form.help', alm)}\n        </p>\n\n        <ValidationInput\n          error={isInvalid ? translate('onboarding.create_project.pat_incorrect', alm) : undefined}\n          id=\"personal_access_token\"\n          isInvalid={isInvalid}\n          isValid={false}\n          label={translate('onboarding.create_project.enter_pat')}\n          required={true}>\n          <input\n            autoFocus={true}\n            className={classNames('input-super-large', {\n              'is-invalid': isInvalid\n            })}\n            id=\"personal_access_token\"\n            minLength={1}\n            name=\"personal_access_token\"\n            onChange={() => {\n              setTouched(true);\n            }}\n            type=\"text\"\n          />\n        </ValidationInput>\n\n        <SubmitButton disabled={isInvalid || submitting || !touched}>\n          {translate('save')}\n        </SubmitButton>\n        <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n      </form>\n\n      <Alert className=\"big-spacer-left width-50\" display=\"block\" variant=\"info\">\n        <h3>{translate('onboarding.create_project.pat_help.title')}</h3>\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          <FormattedMessage\n            id=\"onboarding.create_project.pat_help.instructions\"\n            defaultMessage={translate('onboarding.create_project.pat_help.instructions')}\n            values={{ alm: translate('onboarding.alm', alm) }}\n          />\n        </p>\n\n        {url && (\n          <div className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"16\"\n              src={`${getBaseUrl()}/images/alm/${alm}.svg`}\n            />\n            <a href={getPatUrl(alm, url)} rel=\"noopener noreferrer\" target=\"_blank\">\n              {translate('onboarding.create_project.pat_help.link')}\n            </a>\n          </div>\n        )}\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.pat_help.instructions2', alm)}\n        </p>\n\n        <ul>\n          {alm === AlmKeys.BitbucketServer && (\n            <>\n              <li>\n                <FormattedMessage\n                  defaultMessage={translate(\n                    'onboarding.create_project.pat_help.bbs_permission_projects'\n                  )}\n                  id=\"onboarding.create_project.pat_help.bbs_permission_projects\"\n                  values={{\n                    perm: (\n                      <strong>\n                        {translate('onboarding.create_project.pat_help.read_permission')}\n                      </strong>\n                    )\n                  }}\n                />\n              </li>\n              <li>\n                <FormattedMessage\n                  defaultMessage={translate(\n                    'onboarding.create_project.pat_help.bbs_permission_repos'\n                  )}\n                  id=\"onboarding.create_project.pat_help.bbs_permission_repos\"\n                  values={{\n                    perm: (\n                      <strong>\n                        {translate('onboarding.create_project.pat_help.read_permission')}\n                      </strong>\n                    )\n                  }}\n                />\n              </li>\n            </>\n          )}\n          {alm === AlmKeys.GitLab && (\n            <li className=\"spacer-bottom\">\n              <strong>\n                {translate('onboarding.create_project.pat_help.gitlab.read_api_permission')}\n              </strong>\n            </li>\n          )}\n        </ul>\n      </Alert>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketImportRepositoryForm from './BitbucketImportRepositoryForm';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport PersonalAccessTokenForm from './PersonalAccessTokenForm';\nimport WrongBindingCountAlert from './WrongBindingCountAlert';\n\nexport interface BitbucketProjectCreateRendererProps {\n  bitbucketSetting?: AlmSettingsInstance;\n  canAdmin?: boolean;\n  importing: boolean;\n  loading: boolean;\n  onImportRepository: () => void;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  onProjectCreate: (projectKeys: string[]) => void;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showPersonalAccessTokenForm?: boolean;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default function BitbucketProjectCreateRenderer(props: BitbucketProjectCreateRendererProps) {\n  const {\n    bitbucketSetting,\n    canAdmin,\n    importing,\n    loading,\n    projects,\n    projectRepositories,\n    selectedRepository,\n    searching,\n    searchResults,\n    showPersonalAccessTokenForm,\n    submittingToken,\n    tokenValidationFailed\n  } = props;\n\n  return (\n    <>\n      <CreateProjectPageHeader\n        additionalActions={\n          !showPersonalAccessTokenForm && (\n            <div className=\"display-flex-center pull-right\">\n              <DeferredSpinner className=\"spacer-right\" loading={importing} />\n              <Button\n                className=\"button-large button-primary\"\n                disabled={!selectedRepository || importing}\n                onClick={props.onImportRepository}>\n                {translate('onboarding.create_project.import_selected_repo')}\n              </Button>\n            </div>\n          )\n        }\n        title={\n          <span className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"24\"\n              src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            />\n            {translate('onboarding.create_project.from_bbs')}\n          </span>\n        }\n      />\n\n      {loading && <i className=\"spinner\" />}\n\n      {!loading && !bitbucketSetting && (\n        <WrongBindingCountAlert alm={AlmKeys.BitbucketServer} canAdmin={!!canAdmin} />\n      )}\n\n      {!loading &&\n        bitbucketSetting &&\n        (showPersonalAccessTokenForm ? (\n          <PersonalAccessTokenForm\n            almSetting={bitbucketSetting}\n            onPersonalAccessTokenCreate={props.onPersonalAccessTokenCreate}\n            submitting={submittingToken}\n            validationFailed={tokenValidationFailed}\n          />\n        ) : (\n          <BitbucketImportRepositoryForm\n            disableRepositories={importing}\n            onSearch={props.onSearch}\n            onSelectRepository={props.onSelectRepository}\n            projectRepositories={projectRepositories}\n            projects={projects}\n            searchResults={searchResults}\n            searching={searching}\n            selectedRepository={selectedRepository}\n          />\n        ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const PROJECT_NAME_MAX_LEN = 255;\n\nexport const DEFAULT_BBS_PAGE_SIZE = 25;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport {\n  checkPersonalAccessTokenIsValid,\n  getBitbucketServerProjects,\n  getBitbucketServerRepositories,\n  importBitbucketServerProject,\n  searchForBitbucketServerRepositories,\n  setAlmPersonalAccessToken\n} from '../../../api/alm-integrations';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketCreateProjectRenderer from './BitbucketProjectCreateRenderer';\nimport { DEFAULT_BBS_PAGE_SIZE } from './constants';\n\ninterface Props extends Pick<WithRouterProps, 'location'> {\n  canAdmin: boolean;\n  bitbucketSettings: AlmSettingsInstance[];\n  loadingBindings: boolean;\n  onProjectCreate: (projectKeys: string[]) => void;\n}\n\ninterface State {\n  bitbucketSetting?: AlmSettingsInstance;\n  importing: boolean;\n  loading: boolean;\n  patIsValid?: boolean;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default class BitbucketProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // For now, we only handle a single instance. So we always use the first\n      // one from the list.\n      bitbucketSetting: props.bitbucketSettings[0],\n      importing: false,\n      loading: false,\n      searching: false,\n      tokenValidationFailed: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchInitialData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.bitbucketSettings.length === 0 && this.props.bitbucketSettings.length > 0) {\n      this.setState({ bitbucketSetting: this.props.bitbucketSettings[0] }, () =>\n        this.fetchInitialData()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchInitialData = async () => {\n    this.setState({ loading: true });\n\n    const patIsValid = await this.checkPersonalAccessToken().catch(() => false);\n\n    let projects;\n    if (patIsValid) {\n      projects = await this.fetchBitbucketProjects().catch(() => undefined);\n    }\n\n    let projectRepositories;\n    if (projects && projects.length > 0) {\n      projectRepositories = await this.fetchBitbucketRepositories(projects).catch(() => undefined);\n    }\n\n    if (this.mounted) {\n      this.setState({\n        patIsValid,\n        projects,\n        projectRepositories,\n        loading: false\n      });\n    }\n  };\n\n  checkPersonalAccessToken = () => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(false);\n    }\n\n    return checkPersonalAccessTokenIsValid(bitbucketSetting.key);\n  };\n\n  fetchBitbucketProjects = (): Promise<BitbucketProject[] | undefined> => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(undefined);\n    }\n\n    return getBitbucketServerProjects(bitbucketSetting.key).then(({ projects }) => projects);\n  };\n\n  fetchBitbucketRepositories = (\n    projects: BitbucketProject[]\n  ): Promise<BitbucketProjectRepositories | undefined> => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(undefined);\n    }\n\n    return Promise.all(\n      projects.map(p => {\n        return getBitbucketServerRepositories(bitbucketSetting.key, p.name).then(\n          ({ isLastPage, repositories }) => {\n            // Because the WS uses the project name rather than its key to find\n            // repositories, we can match more repositories than we expect. For\n            // example, p.name = \"A1\" would find repositories for projects \"A1\",\n            // \"A10\", \"A11\", etc. This is a limitation of BBS. To make sure we\n            // don't display incorrect information, filter on the project key.\n            const filteredRepositories = repositories.filter(r => r.projectKey === p.key);\n\n            // And because of the above, the \"isLastPage\" cannot be relied upon\n            // either. This one is impossible to get 100% for now. We can only\n            // make some assumptions: by default, the page size for BBS is 25\n            // (this is not part of the payload, so we don't know the actual\n            // number; but changing this implies changing some advanced config,\n            // so it's not likely). If the filtered repos is larger than this\n            // number AND isLastPage is false, we'll keep it at false.\n            // Otherwise, we assume it's true.\n            const realIsLastPage =\n              isLastPage || filteredRepositories.length < DEFAULT_BBS_PAGE_SIZE;\n\n            return {\n              repositories: filteredRepositories,\n              isLastPage: realIsLastPage,\n              projectKey: p.key\n            };\n          }\n        );\n      })\n    ).then(results => {\n      return results.reduce(\n        (acc: BitbucketProjectRepositories, { isLastPage, projectKey, repositories }) => {\n          return { ...acc, [projectKey]: { allShown: isLastPage, repositories } };\n        },\n        {}\n      );\n    });\n  };\n\n  handlePersonalAccessTokenCreate = (token: string) => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting || token.length < 1) {\n      return;\n    }\n\n    this.setState({ submittingToken: true, tokenValidationFailed: false });\n    setAlmPersonalAccessToken(bitbucketSetting.key, token)\n      .then(this.checkPersonalAccessToken)\n      .then(patIsValid => {\n        if (this.mounted) {\n          this.setState({ submittingToken: false, patIsValid, tokenValidationFailed: !patIsValid });\n          if (patIsValid) {\n            this.fetchInitialData();\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submittingToken: false });\n        }\n      });\n  };\n\n  handleImportRepository = () => {\n    const { bitbucketSetting, selectedRepository } = this.state;\n\n    if (!bitbucketSetting || !selectedRepository) {\n      return;\n    }\n\n    this.setState({ importing: true });\n    importBitbucketServerProject(\n      bitbucketSetting.key,\n      selectedRepository.projectKey,\n      selectedRepository.slug\n    )\n      .then(({ project: { key } }) => {\n        if (this.mounted) {\n          this.setState({ importing: false });\n          this.props.onProjectCreate([key]);\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ importing: false });\n        }\n      });\n  };\n\n  handleSearch = (query: string) => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return;\n    }\n\n    if (!query) {\n      this.setState({ searching: false, searchResults: undefined, selectedRepository: undefined });\n      return;\n    }\n\n    this.setState({ searching: true, selectedRepository: undefined });\n    searchForBitbucketServerRepositories(bitbucketSetting.key, query)\n      .then(({ repositories }) => {\n        if (this.mounted) {\n          this.setState({ searching: false, searchResults: repositories });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ searching: false });\n        }\n      });\n  };\n\n  handleSelectRepository = (selectedRepository: BitbucketRepository) => {\n    this.setState({ selectedRepository });\n  };\n\n  render() {\n    const { canAdmin, loadingBindings, location } = this.props;\n    const {\n      bitbucketSetting,\n      importing,\n      loading,\n      patIsValid,\n      projectRepositories,\n      projects,\n      searching,\n      searchResults,\n      selectedRepository,\n      submittingToken,\n      tokenValidationFailed\n    } = this.state;\n\n    return (\n      <BitbucketCreateProjectRenderer\n        bitbucketSetting={bitbucketSetting}\n        canAdmin={canAdmin}\n        importing={importing}\n        loading={loading || loadingBindings}\n        onImportRepository={this.handleImportRepository}\n        onPersonalAccessTokenCreate={this.handlePersonalAccessTokenCreate}\n        onProjectCreate={this.props.onProjectCreate}\n        onSearch={this.handleSearch}\n        onSelectRepository={this.handleSelectRepository}\n        projectRepositories={projectRepositories}\n        projects={projects}\n        searchResults={searchResults}\n        searching={searching}\n        selectedRepository={selectedRepository}\n        showPersonalAccessTokenForm={!patIsValid || Boolean(location.query.resetPat)}\n        submittingToken={submittingToken}\n        tokenValidationFailed={tokenValidationFailed}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport DocumentationTooltip from '../../../components/common/DocumentationTooltip';\nimport { withAppState } from '../../../components/hoc/withAppState';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../helpers/constants';\nimport { AlmKeys } from '../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../../settings/components/AdditionalCategoryKeys';\nimport { CreateProjectModes } from './types';\n\nexport interface CreateProjectModeSelectionProps {\n  almCounts: {\n    [AlmKeys.Azure]: number;\n    [AlmKeys.BitbucketServer]: number;\n    [AlmKeys.GitLab]: number;\n    [AlmKeys.GitHub]: number;\n  };\n  appState: Pick<T.AppState, 'canAdmin'>;\n  loadingBindings: boolean;\n  onSelectMode: (mode: CreateProjectModes) => void;\n}\n\nfunction renderAlmOption(\n  props: CreateProjectModeSelectionProps,\n  alm: AlmKeys.Azure | AlmKeys.BitbucketServer | AlmKeys.GitHub | AlmKeys.GitLab,\n  mode: CreateProjectModes\n) {\n  const {\n    almCounts,\n    appState: { canAdmin },\n    loadingBindings\n  } = props;\n\n  const count = almCounts[alm];\n  const disabled = count !== 1 || loadingBindings;\n\n  const tooltipLinks = [];\n  if (count === 0) {\n    if (canAdmin) {\n      tooltipLinks.push({\n        href: `/admin/settings?category=${ALM_INTEGRATION}&alm=${alm}`,\n        label: translateWithParameters(\n          'onboarding.create_project.set_up_x',\n          translate('alm', alm, 'short')\n        )\n      });\n    }\n\n    tooltipLinks.push({\n      href: ALM_DOCUMENTATION_PATHS[alm],\n      label: translateWithParameters(\n        'onboarding.create_project.help_set_up_x',\n        translate('alm', alm, 'short')\n      )\n    });\n  }\n\n  return (\n    <div className=\"big-spacer-left display-flex-column\">\n      <button\n        className={classNames(\n          'button button-huge display-flex-column create-project-mode-type-alm',\n          { disabled }\n        )}\n        disabled={disabled}\n        onClick={() => props.onSelectMode(mode)}\n        type=\"button\">\n        <img\n          alt=\"\" // Should be ignored by screen readers\n          height={80}\n          src={`${getBaseUrl()}/images/alm/${alm}.svg`}\n        />\n        <div className=\"medium big-spacer-top abs-height-50 display-flex-center\">\n          {translate('onboarding.create_project.select_method', alm)}\n        </div>\n\n        {loadingBindings && (\n          <span>\n            {translate('onboarding.create_project.check_alm_supported')}\n            <i className=\"little-spacer-left spinner\" />\n          </span>\n        )}\n\n        {!loadingBindings && disabled && (\n          <div className=\"text-muted small spacer-top\" style={{ lineHeight: 1.5 }}>\n            {translate('onboarding.create_project.alm_not_configured')}\n            <DocumentationTooltip\n              className=\"little-spacer-left\"\n              content={\n                count === 0\n                  ? translate('onboarding.create_project.zero_alm_instances', alm)\n                  : `${translate('onboarding.create_project.too_many_alm_instances', alm)} \n                ${translateWithParameters(\n                  'onboarding.create_project.alm_instances_count_X',\n                  count\n                )}`\n              }\n              links={count === 0 ? tooltipLinks : undefined}\n            />\n          </div>\n        )}\n      </button>\n    </div>\n  );\n}\n\nexport function CreateProjectModeSelection(props: CreateProjectModeSelectionProps) {\n  return (\n    <>\n      <header className=\"huge-spacer-top big-spacer-bottom padded\">\n        <h1 className=\"text-center huge big-spacer-bottom\">\n          {translate('my_account.create_new.TRK')}\n        </h1>\n        <p className=\"text-center big\">{translate('onboarding.create_project.select_method')}</p>\n      </header>\n\n      <div className=\"create-project-modes huge-spacer-top display-flex-justify-center\">\n        <button\n          className=\"button button-huge display-flex-column create-project-mode-type-manual\"\n          onClick={() => props.onSelectMode(CreateProjectModes.Manual)}\n          type=\"button\">\n          <img\n            alt=\"\" // Should be ignored by screen readers\n            height={80}\n            src={`${getBaseUrl()}/images/sonarcloud/analysis/manual.svg`}\n          />\n          <div className=\"medium big-spacer-top\">\n            {translate('onboarding.create_project.select_method.manual')}\n          </div>\n        </button>\n\n        {renderAlmOption(props, AlmKeys.Azure, CreateProjectModes.AzureDevOps)}\n        {renderAlmOption(props, AlmKeys.BitbucketServer, CreateProjectModes.BitbucketServer)}\n        {renderAlmOption(props, AlmKeys.GitHub, CreateProjectModes.GitHub)}\n        {renderAlmOption(props, AlmKeys.GitLab, CreateProjectModes.GitLab)}\n      </div>\n    </>\n  );\n}\n\nexport default withAppState(CreateProjectModeSelection);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport SearchSelect from 'sonar-ui-common/components/controls/SearchSelect';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/system';\nimport { GithubOrganization, GithubRepository } from '../../../types/alm-integration';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\n\nexport interface GitHubProjectCreateRendererProps {\n  canAdmin: boolean;\n  error: boolean;\n  importing: boolean;\n  loadingBindings: boolean;\n  loadingOrganizations: boolean;\n  loadingRepositories: boolean;\n  onImportRepository: () => void;\n  onLoadMore: () => void;\n  onSearch: (q: string) => void;\n  onSelectOrganization: (key: string) => void;\n  onSelectRepository: (key: string) => void;\n  organizations: GithubOrganization[];\n  repositories?: GithubRepository[];\n  repositoryPaging: T.Paging;\n  searchQuery: string;\n  selectedOrganization?: GithubOrganization;\n  selectedRepository?: GithubRepository;\n}\n\nfunction orgToOption({ key, name }: GithubOrganization) {\n  return { value: key, label: name };\n}\n\nconst handleSearch = (organizations: GithubOrganization[]) => (q: string) =>\n  Promise.resolve(organizations.filter(o => !q || o.name.includes(q)).map(orgToOption));\n\nfunction renderRepositoryList(props: GitHubProjectCreateRendererProps) {\n  const {\n    importing,\n    loadingRepositories,\n    repositories,\n    repositoryPaging,\n    searchQuery,\n    selectedOrganization,\n    selectedRepository\n  } = props;\n\n  const isChecked = (repository: GithubRepository) =>\n    !!repository.sqProjectKey ||\n    (!!selectedRepository && selectedRepository.key === repository.key);\n\n  const isDisabled = (repository: GithubRepository) =>\n    !!repository.sqProjectKey || loadingRepositories || importing;\n\n  return (\n    selectedOrganization &&\n    repositories && (\n      <div className=\"boxed-group padded display-flex-wrap\">\n        <div className=\"width-100\">\n          <SearchBox\n            className=\"big-spacer-bottom\"\n            onChange={props.onSearch}\n            placeholder={translate('onboarding.create_project.search_repositories')}\n            value={searchQuery}\n          />\n        </div>\n\n        {repositories.length === 0 ? (\n          <div className=\"padded\">\n            <DeferredSpinner loading={loadingRepositories}>\n              {translate('no_results')}\n            </DeferredSpinner>\n          </div>\n        ) : (\n          repositories.map(r => (\n            <Radio\n              className=\"spacer-top spacer-bottom padded create-project-github-repository\"\n              key={r.key}\n              checked={isChecked(r)}\n              disabled={isDisabled(r)}\n              value={r.key}\n              onCheck={props.onSelectRepository}>\n              <div className=\"big overflow-hidden\" title={r.name}>\n                <div className=\"text-ellipsis\">{r.name}</div>\n                {r.sqProjectKey && (\n                  <em className=\"notice text-muted-2 small display-flex-center\">\n                    {translate('onboarding.create_project.repository_imported')}\n                    <CheckIcon className=\"little-spacer-left\" size={12} />\n                  </em>\n                )}\n              </div>\n            </Radio>\n          ))\n        )}\n\n        <div className=\"display-flex-justify-center width-100\">\n          <ListFooter\n            count={repositories.length}\n            total={repositoryPaging.total}\n            loadMore={props.onLoadMore}\n            loading={loadingRepositories}\n          />\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default function GitHubProjectCreateRenderer(props: GitHubProjectCreateRendererProps) {\n  const {\n    canAdmin,\n    error,\n    importing,\n    loadingBindings,\n    loadingOrganizations,\n    organizations,\n    selectedOrganization,\n    selectedRepository\n  } = props;\n\n  if (loadingBindings) {\n    return <DeferredSpinner />;\n  }\n\n  return (\n    <div>\n      <CreateProjectPageHeader\n        additionalActions={\n          selectedOrganization && (\n            <div className=\"display-flex-center pull-right\">\n              <DeferredSpinner className=\"spacer-right\" loading={importing} />\n              <Button\n                className=\"button-large button-primary\"\n                disabled={!selectedRepository || importing}\n                onClick={props.onImportRepository}>\n                {translate('onboarding.create_project.import_selected_repo')}\n              </Button>\n            </div>\n          )\n        }\n        title={\n          <span className=\"text-middle display-flex-center\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height={24}\n              src={`${getBaseUrl()}/images/alm/github.svg`}\n            />\n            {translate('onboarding.create_project.github.title')}\n          </span>\n        }\n      />\n\n      {error ? (\n        <div className=\"display-flex-justify-center\">\n          <div className=\"boxed-group padded width-50 huge-spacer-top\">\n            <h2 className=\"big-spacer-bottom\">\n              {translate('onboarding.create_project.github.warning.title')}\n            </h2>\n            <Alert variant=\"warning\">\n              {canAdmin ? (\n                <FormattedMessage\n                  id=\"onboarding.create_project.github.warning.message_admin\"\n                  defaultMessage={translate(\n                    'onboarding.create_project.github.warning.message_admin'\n                  )}\n                  values={{\n                    link: (\n                      <Link to=\"/admin/settings?category=almintegration\">\n                        {translate('onboarding.create_project.github.warning.message_admin.link')}\n                      </Link>\n                    )\n                  }}\n                />\n              ) : (\n                translate('onboarding.create_project.github.warning.message')\n              )}\n            </Alert>\n          </div>\n        </div>\n      ) : (\n        <DeferredSpinner loading={loadingOrganizations}>\n          <div className=\"form-field\">\n            <label>{translate('onboarding.create_project.github.choose_organization')}</label>\n            {organizations.length > 0 ? (\n              <SearchSelect\n                defaultOptions={organizations.map(orgToOption)}\n                onSearch={handleSearch(organizations)}\n                minimumQueryLength={0}\n                onSelect={({ value }) => props.onSelectOrganization(value)}\n                value={selectedOrganization && orgToOption(selectedOrganization)}\n              />\n            ) : (\n              !loadingOrganizations && (\n                <Alert className=\"spacer-top\" variant=\"error\">\n                  {canAdmin ? (\n                    <FormattedMessage\n                      id=\"onboarding.create_project.github.no_orgs_admin\"\n                      defaultMessage={translate('onboarding.create_project.github.no_orgs_admin')}\n                      values={{\n                        link: (\n                          <Link to=\"/admin/settings?category=almintegration\">\n                            {translate(\n                              'onboarding.create_project.github.warning.message_admin.link'\n                            )}\n                          </Link>\n                        )\n                      }}\n                    />\n                  ) : (\n                    translate('onboarding.create_project.github.no_orgs')\n                  )}\n                </Alert>\n              )\n            )}\n          </div>\n        </DeferredSpinner>\n      )}\n\n      {renderRepositoryList(props)}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport { getHostUrl } from 'sonar-ui-common/helpers/urls';\nimport {\n  getGithubClientId,\n  getGithubOrganizations,\n  getGithubRepositories,\n  importGithubRepository\n} from '../../../api/alm-integrations';\nimport { GithubOrganization, GithubRepository } from '../../../types/alm-integration';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport GitHubProjectCreateRenderer from './GitHubProjectCreateRenderer';\n\ninterface Props extends Pick<WithRouterProps, 'location' | 'router'> {\n  canAdmin: boolean;\n  loadingBindings: boolean;\n  onProjectCreate: (projectKeys: string[]) => void;\n  settings: AlmSettingsInstance[];\n}\n\ninterface State {\n  error: boolean;\n  importing: boolean;\n  loadingOrganizations: boolean;\n  loadingRepositories: boolean;\n  organizations: GithubOrganization[];\n  repositoryPaging: T.Paging;\n  repositories: GithubRepository[];\n  searchQuery: string;\n  selectedOrganization?: GithubOrganization;\n  selectedRepository?: GithubRepository;\n  settings?: AlmSettingsInstance;\n}\n\nconst REPOSITORY_PAGE_SIZE = 30;\n\nexport default class GitHubProjectCreate extends React.Component<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      error: false,\n      importing: false,\n      loadingOrganizations: true,\n      loadingRepositories: false,\n      organizations: [],\n      repositories: [],\n      repositoryPaging: { pageSize: REPOSITORY_PAGE_SIZE, total: 0, pageIndex: 1 },\n      searchQuery: '',\n      settings: props.settings[0]\n    };\n\n    this.triggerSearch = debounce(this.triggerSearch, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    this.initialize();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.settings.length === 0 && this.props.settings.length > 0) {\n      this.setState({ settings: this.props.settings[0] }, () => this.initialize());\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  async initialize() {\n    const { location, router } = this.props;\n    const { settings } = this.state;\n\n    if (!settings || !settings.url) {\n      this.setState({ error: true });\n      return;\n    } else {\n      this.setState({ error: false });\n    }\n\n    const code = location.query?.code;\n\n    try {\n      if (!code) {\n        await this.redirectToGithub(settings);\n      } else {\n        delete location.query.code;\n        router.replace(location);\n        await this.fetchOrganizations(settings, code);\n      }\n    } catch (e) {\n      if (this.mounted) {\n        this.setState({ error: true });\n      }\n    }\n  }\n\n  async redirectToGithub(settings: AlmSettingsInstance) {\n    if (!settings.url) {\n      return;\n    }\n\n    const { clientId } = await getGithubClientId(settings.key);\n\n    if (!clientId) {\n      this.setState({ error: true });\n      return;\n    }\n\n    const queryParams = [\n      { param: 'client_id', value: clientId },\n      { param: 'redirect_uri', value: `${getHostUrl()}/projects/create?mode=${AlmKeys.GitHub}` }\n    ]\n      .map(({ param, value }) => `${param}=${value}`)\n      .join('&');\n\n    let instanceRootUrl;\n    // Strip the api section from the url, since we're not hitting the api here.\n    if (settings.url.includes('/api/v3')) {\n      // GitHub Enterprise\n      instanceRootUrl = settings.url.replace('/api/v3', '');\n    } else {\n      // github.com\n      instanceRootUrl = settings.url.replace('api.', '');\n    }\n\n    // strip the trailing /\n    instanceRootUrl = instanceRootUrl.replace(/\\/$/, '');\n    window.location.replace(`${instanceRootUrl}/login/oauth/authorize?${queryParams}`);\n  }\n\n  async fetchOrganizations(settings: AlmSettingsInstance, token: string) {\n    const { organizations } = await getGithubOrganizations(settings.key, token);\n\n    if (this.mounted) {\n      this.setState({ loadingOrganizations: false, organizations });\n    }\n  }\n\n  async fetchRepositories(params: { organizationKey: string; page?: number; query?: string }) {\n    const { organizationKey, page = 1, query } = params;\n    const { settings } = this.state;\n\n    if (!settings) {\n      this.setState({ error: true });\n      return;\n    }\n\n    this.setState({ loadingRepositories: true });\n\n    try {\n      const data = await getGithubRepositories({\n        almSetting: settings.key,\n        organization: organizationKey,\n        pageSize: REPOSITORY_PAGE_SIZE,\n        page,\n        query\n      });\n\n      if (this.mounted) {\n        this.setState(({ repositories }) => ({\n          loadingRepositories: false,\n          repositoryPaging: data.paging,\n          repositories: page === 1 ? data.repositories : [...repositories, ...data.repositories]\n        }));\n      }\n    } catch (_) {\n      if (this.mounted) {\n        this.setState({\n          loadingRepositories: false,\n          repositoryPaging: { pageIndex: 1, pageSize: REPOSITORY_PAGE_SIZE, total: 0 },\n          repositories: []\n        });\n      }\n    }\n  }\n\n  triggerSearch = (query: string) => {\n    const { selectedOrganization } = this.state;\n    if (selectedOrganization) {\n      this.setState({ selectedRepository: undefined });\n      this.fetchRepositories({ organizationKey: selectedOrganization.key, query });\n    }\n  };\n\n  handleSelectOrganization = (key: string) => {\n    this.setState(({ organizations }) => ({\n      searchQuery: '',\n      selectedRepository: undefined,\n      selectedOrganization: organizations.find(o => o.key === key)\n    }));\n    this.fetchRepositories({ organizationKey: key });\n  };\n\n  handleSelectRepository = (key: string) => {\n    this.setState(({ repositories }) => ({\n      selectedRepository: repositories?.find(r => r.key === key)\n    }));\n  };\n\n  handleSearch = (searchQuery: string) => {\n    this.setState({ searchQuery });\n    this.triggerSearch(searchQuery);\n  };\n\n  handleLoadMore = () => {\n    const { repositoryPaging, searchQuery, selectedOrganization } = this.state;\n\n    if (selectedOrganization) {\n      this.fetchRepositories({\n        organizationKey: selectedOrganization.key,\n        page: repositoryPaging.pageIndex + 1,\n        query: searchQuery\n      });\n    }\n  };\n\n  handleImportRepository = async () => {\n    const { selectedOrganization, selectedRepository, settings } = this.state;\n\n    if (settings && selectedOrganization && selectedRepository) {\n      this.setState({ importing: true });\n\n      try {\n        const { project } = await importGithubRepository(\n          settings.key,\n          selectedOrganization.key,\n          selectedRepository.key\n        );\n\n        this.props.onProjectCreate([project.key]);\n      } finally {\n        if (this.mounted) {\n          this.setState({ importing: false });\n        }\n      }\n    }\n  };\n\n  render() {\n    const { canAdmin, loadingBindings } = this.props;\n    const {\n      error,\n      importing,\n      loadingOrganizations,\n      loadingRepositories,\n      organizations,\n      repositoryPaging,\n      repositories,\n      searchQuery,\n      selectedOrganization,\n      selectedRepository\n    } = this.state;\n\n    return (\n      <GitHubProjectCreateRenderer\n        canAdmin={canAdmin}\n        error={error}\n        importing={importing}\n        loadingBindings={loadingBindings}\n        loadingOrganizations={loadingOrganizations}\n        loadingRepositories={loadingRepositories}\n        onImportRepository={this.handleImportRepository}\n        onLoadMore={this.handleLoadMore}\n        onSearch={this.handleSearch}\n        onSelectOrganization={this.handleSelectOrganization}\n        onSelectRepository={this.handleSelectRepository}\n        organizations={organizations}\n        repositoryPaging={repositoryPaging}\n        searchQuery={searchQuery}\n        repositories={repositories}\n        selectedOrganization={selectedOrganization}\n        selectedRepository={selectedRepository}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { GitlabProject } from '../../../types/alm-integration';\nimport { ComponentQualifier } from '../../../types/component';\nimport { CreateProjectModes } from './types';\n\nexport interface GitlabProjectSelectionFormProps {\n  importingGitlabProjectId?: string;\n  loadingMore: boolean;\n  onImport: (gitlabProjectId: string) => void;\n  onLoadMore: () => void;\n  onSearch: (searchQuery: string) => void;\n  projects?: GitlabProject[];\n  projectsPaging: T.Paging;\n  searching: boolean;\n  searchQuery: string;\n}\n\nexport default function GitlabProjectSelectionForm(props: GitlabProjectSelectionFormProps) {\n  const {\n    importingGitlabProjectId,\n    loadingMore,\n    projects = [],\n    projectsPaging,\n    searching,\n    searchQuery\n  } = props;\n\n  if (projects.length === 0 && searchQuery.length === 0 && !searching) {\n    return (\n      <Alert className=\"spacer-top\" variant=\"warning\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.gitlab.no_projects')}\n          id=\"onboarding.create_project.gitlab.no_projects\"\n          values={{\n            link: (\n              <Link\n                to={{\n                  pathname: '/projects/create',\n                  query: { mode: CreateProjectModes.GitLab, resetPat: 1 }\n                }}>\n                {translate('onboarding.create_project.update_your_token')}\n              </Link>\n            )\n          }}\n        />\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"boxed-group big-padded create-project-import-gitlab\">\n      <SearchBox\n        className=\"spacer\"\n        loading={searching}\n        minLength={3}\n        onChange={props.onSearch}\n        placeholder={translate('onboarding.create_project.gitlab.search_prompt')}\n      />\n\n      <hr />\n\n      {projects.length === 0 ? (\n        <div className=\"padded\">{translate('no_results')}</div>\n      ) : (\n        <table className=\"data zebra zebra-hover\">\n          <tbody>\n            {projects.map(project => (\n              <tr key={project.id}>\n                <td>\n                  <Tooltip overlay={project.slug}>\n                    <strong className=\"project-name display-inline-block text-ellipsis\">\n                      {project.sqProjectKey ? (\n                        <Link to={getProjectUrl(project.sqProjectKey)}>\n                          <QualifierIcon\n                            className=\"spacer-right\"\n                            qualifier={ComponentQualifier.Project}\n                          />\n                          {project.sqProjectName}\n                        </Link>\n                      ) : (\n                        project.name\n                      )}\n                    </strong>\n                  </Tooltip>\n                  <br />\n                  <Tooltip overlay={project.pathSlug}>\n                    <span className=\"text-muted project-path display-inline-block text-ellipsis\">\n                      {project.pathName}\n                    </span>\n                  </Tooltip>\n                </td>\n                <td>\n                  <a\n                    className=\"display-inline-flex-center big-spacer-right\"\n                    href={project.url}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    <DetachIcon className=\"little-spacer-right\" />\n                    {translate('onboarding.create_project.gitlab.link')}\n                  </a>\n                </td>\n                {project.sqProjectKey ? (\n                  <td>\n                    <span className=\"display-flex-center display-flex-justify-end already-set-up\">\n                      <CheckIcon className=\"little-spacer-right\" size={12} />\n                      {translate('onboarding.create_project.repository_imported')}\n                    </span>\n                  </td>\n                ) : (\n                  <td className=\"text-right\">\n                    <Button\n                      disabled={!!importingGitlabProjectId}\n                      onClick={() => props.onImport(project.id)}>\n                      {translate('onboarding.create_project.gitlab.set_up')}\n                      {importingGitlabProjectId === project.id && (\n                        <DeferredSpinner className=\"spacer-left\" />\n                      )}\n                    </Button>\n                  </td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      <ListFooter\n        count={projects.length}\n        loadMore={props.onLoadMore}\n        loading={loadingMore}\n        total={projectsPaging.total}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { GitlabProject } from '../../../types/alm-integration';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport GitlabProjectSelectionForm from './GitlabProjectSelectionForm';\nimport PersonalAccessTokenForm from './PersonalAccessTokenForm';\nimport WrongBindingCountAlert from './WrongBindingCountAlert';\n\nexport interface GitlabProjectCreateRendererProps {\n  canAdmin?: boolean;\n  importingGitlabProjectId?: string;\n  loading: boolean;\n  loadingMore: boolean;\n  onImport: (gitlabProjectId: string) => void;\n  onLoadMore: () => void;\n  onPersonalAccessTokenCreate: (pat: string) => void;\n  onSearch: (searchQuery: string) => void;\n  projects?: GitlabProject[];\n  projectsPaging: T.Paging;\n  searching: boolean;\n  searchQuery: string;\n  settings?: AlmSettingsInstance;\n  showPersonalAccessTokenForm?: boolean;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default function GitlabProjectCreateRenderer(props: GitlabProjectCreateRendererProps) {\n  const {\n    canAdmin,\n    importingGitlabProjectId,\n    loading,\n    loadingMore,\n    projects,\n    projectsPaging,\n    searching,\n    searchQuery,\n    settings,\n    showPersonalAccessTokenForm,\n    submittingToken,\n    tokenValidationFailed\n  } = props;\n\n  return (\n    <>\n      <CreateProjectPageHeader\n        title={\n          <span className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"24\"\n              src={`${getBaseUrl()}/images/alm/gitlab.svg`}\n            />\n            {translate('onboarding.create_project.gitlab.title')}\n          </span>\n        }\n      />\n\n      {loading && <i className=\"spinner\" />}\n\n      {!loading && !settings && (\n        <WrongBindingCountAlert alm={AlmKeys.GitLab} canAdmin={!!canAdmin} />\n      )}\n\n      {!loading &&\n        settings &&\n        (showPersonalAccessTokenForm ? (\n          <PersonalAccessTokenForm\n            almSetting={settings}\n            onPersonalAccessTokenCreate={props.onPersonalAccessTokenCreate}\n            submitting={submittingToken}\n            validationFailed={tokenValidationFailed}\n          />\n        ) : (\n          <GitlabProjectSelectionForm\n            importingGitlabProjectId={importingGitlabProjectId}\n            loadingMore={loadingMore}\n            onImport={props.onImport}\n            onLoadMore={props.onLoadMore}\n            onSearch={props.onSearch}\n            projects={projects}\n            projectsPaging={projectsPaging}\n            searching={searching}\n            searchQuery={searchQuery}\n          />\n        ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport {\n  checkPersonalAccessTokenIsValid,\n  getGitlabProjects,\n  importGitlabProject,\n  setAlmPersonalAccessToken\n} from '../../../api/alm-integrations';\nimport { GitlabProject } from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport GitlabProjectCreateRenderer from './GitlabProjectCreateRenderer';\n\ninterface Props extends Pick<WithRouterProps, 'location' | 'router'> {\n  canAdmin: boolean;\n  loadingBindings: boolean;\n  onProjectCreate: (projectKeys: string[]) => void;\n  settings: AlmSettingsInstance[];\n}\n\ninterface State {\n  importingGitlabProjectId?: string;\n  loading: boolean;\n  loadingMore: boolean;\n  projects?: GitlabProject[];\n  projectsPaging: T.Paging;\n  submittingToken: boolean;\n  tokenIsValid: boolean;\n  tokenValidationFailed: boolean;\n  searching: boolean;\n  searchQuery: string;\n  settings?: AlmSettingsInstance;\n}\n\nconst GITLAB_PROJECTS_PAGESIZE = 30;\n\nexport default class GitlabProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingMore: false,\n      projectsPaging: { pageIndex: 1, total: 0, pageSize: GITLAB_PROJECTS_PAGESIZE },\n      tokenIsValid: false,\n      searching: false,\n      searchQuery: '',\n      settings: props.settings.length === 1 ? props.settings[0] : undefined,\n      submittingToken: false,\n      tokenValidationFailed: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchInitialData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.settings.length === 0 && this.props.settings.length > 0) {\n      this.setState(\n        { settings: this.props.settings.length === 1 ? this.props.settings[0] : undefined },\n        () => this.fetchInitialData()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchInitialData = async () => {\n    this.setState({ loading: true });\n\n    const tokenIsValid = await this.checkPersonalAccessToken();\n\n    let result;\n    if (tokenIsValid) {\n      result = await this.fetchProjects();\n    }\n\n    if (this.mounted) {\n      if (result) {\n        const { projects, projectsPaging } = result;\n\n        this.setState({\n          tokenIsValid,\n          loading: false,\n          projects,\n          projectsPaging\n        });\n      } else {\n        this.setState({\n          loading: false\n        });\n      }\n    }\n  };\n\n  checkPersonalAccessToken = () => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve(false);\n    }\n\n    return checkPersonalAccessTokenIsValid(settings.key).catch(() => false);\n  };\n\n  handleError = () => {\n    if (this.mounted) {\n      this.setState({ tokenIsValid: false });\n    }\n\n    return undefined;\n  };\n\n  fetchProjects = async (pageIndex = 1, query?: string) => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve(undefined);\n    }\n\n    try {\n      return await getGitlabProjects({\n        almSetting: settings.key,\n        page: pageIndex,\n        pageSize: GITLAB_PROJECTS_PAGESIZE,\n        query\n      });\n    } catch (_) {\n      return this.handleError();\n    }\n  };\n\n  doImport = async (gitlabProjectId: string) => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve(undefined);\n    }\n\n    try {\n      return await importGitlabProject({\n        almSetting: settings.key,\n        gitlabProjectId\n      });\n    } catch (_) {\n      return this.handleError();\n    }\n  };\n\n  handleImport = async (gitlabProjectId: string) => {\n    this.setState({ importingGitlabProjectId: gitlabProjectId });\n\n    const result = await this.doImport(gitlabProjectId);\n\n    if (this.mounted) {\n      this.setState({ importingGitlabProjectId: undefined });\n\n      if (result) {\n        this.props.onProjectCreate([result.project.key]);\n      }\n    }\n  };\n\n  handleLoadMore = async () => {\n    this.setState({ loadingMore: true });\n\n    const {\n      projectsPaging: { pageIndex },\n      searchQuery\n    } = this.state;\n\n    const result = await this.fetchProjects(pageIndex + 1, searchQuery);\n\n    if (this.mounted) {\n      this.setState(({ projects = [], projectsPaging }) => ({\n        loadingMore: false,\n        projects: result ? [...projects, ...result.projects] : projects,\n        projectsPaging: result ? result.projectsPaging : projectsPaging\n      }));\n    }\n  };\n\n  handleSearch = async (searchQuery: string) => {\n    this.setState({ searching: true, searchQuery });\n\n    const result = await this.fetchProjects(1, searchQuery);\n\n    if (this.mounted) {\n      this.setState(({ projects, projectsPaging }) => ({\n        searching: false,\n        projects: result ? result.projects : projects,\n        projectsPaging: result ? result.projectsPaging : projectsPaging\n      }));\n    }\n  };\n\n  cleanUrl = () => {\n    const { location, router } = this.props;\n    delete location.query.resetPat;\n    router.replace(location);\n  };\n\n  handlePersonalAccessTokenCreate = async (token: string) => {\n    const { settings } = this.state;\n\n    if (!settings || token.length < 1) {\n      return;\n    }\n\n    this.setState({ submittingToken: true, tokenValidationFailed: false });\n\n    try {\n      await setAlmPersonalAccessToken(settings.key, token);\n\n      const patIsValid = await this.checkPersonalAccessToken();\n\n      if (this.mounted) {\n        this.setState({\n          submittingToken: false,\n          tokenIsValid: patIsValid,\n          tokenValidationFailed: !patIsValid\n        });\n\n        if (patIsValid) {\n          this.cleanUrl();\n          await this.fetchInitialData();\n        }\n      }\n    } catch (e) {\n      if (this.mounted) {\n        this.setState({ submittingToken: false });\n      }\n    }\n  };\n\n  render() {\n    const { canAdmin, loadingBindings, location } = this.props;\n    const {\n      importingGitlabProjectId,\n      loading,\n      loadingMore,\n      projects,\n      projectsPaging,\n      tokenIsValid,\n      searching,\n      searchQuery,\n      settings,\n      submittingToken,\n      tokenValidationFailed\n    } = this.state;\n\n    return (\n      <GitlabProjectCreateRenderer\n        settings={settings}\n        canAdmin={canAdmin}\n        importingGitlabProjectId={importingGitlabProjectId}\n        loading={loading || loadingBindings}\n        loadingMore={loadingMore}\n        onImport={this.handleImport}\n        onLoadMore={this.handleLoadMore}\n        onPersonalAccessTokenCreate={this.handlePersonalAccessTokenCreate}\n        onSearch={this.handleSearch}\n        projects={projects}\n        projectsPaging={projectsPaging}\n        searching={searching}\n        searchQuery={searchQuery}\n        showPersonalAccessTokenForm={!tokenIsValid || Boolean(location.query.resetPat)}\n        submittingToken={submittingToken}\n        tokenValidationFailed={tokenValidationFailed}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createProject, doesComponentExists } from '../../../api/components';\nimport ProjectKeyInput from '../../../components/common/ProjectKeyInput';\nimport { validateProjectKey } from '../../../helpers/projects';\nimport { ProjectKeyValidationResult } from '../../../types/component';\nimport { PROJECT_NAME_MAX_LEN } from './constants';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport './ManualProjectCreate.css';\n\ninterface Props {\n  onProjectCreate: (projectKeys: string[]) => void;\n}\n\ninterface State {\n  projectName: string;\n  projectNameChanged: boolean;\n  projectNameError?: string;\n  projectKey: string;\n  projectKeyError?: string;\n  submitting: boolean;\n  touched: boolean;\n  validating: boolean;\n}\n\ntype ValidState = State & Required<Pick<State, 'projectKey' | 'projectName'>>;\n\nexport default class ManualProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      projectKey: '',\n      projectName: '',\n      projectNameChanged: false,\n      submitting: false,\n      touched: false,\n      validating: false\n    };\n    this.checkFreeKey = debounce(this.checkFreeKey, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkFreeKey = (key: string) => {\n    return doesComponentExists({ component: key })\n      .then(alreadyExist => {\n        if (this.mounted && key === this.state.projectKey) {\n          if (!alreadyExist) {\n            this.setState({ projectKeyError: undefined, validating: false });\n          } else {\n            this.setState({\n              projectKeyError: translate('onboarding.create_project.project_key.taken'),\n              touched: true,\n              validating: false\n            });\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted && key === this.state.projectKey) {\n          this.setState({ projectKeyError: undefined, validating: false });\n        }\n      });\n  };\n\n  canSubmit(state: State): state is ValidState {\n    const { projectKey, projectKeyError, projectName, projectNameError } = state;\n    return Boolean(\n      projectKeyError === undefined &&\n        projectNameError === undefined &&\n        projectKey.length > 0 &&\n        projectName.length > 0\n    );\n  }\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { state } = this;\n    if (this.canSubmit(state)) {\n      this.setState({ submitting: true });\n      createProject({\n        project: state.projectKey,\n        name: (state.projectName || state.projectKey).trim()\n      }).then(\n        ({ project }) => this.props.onProjectCreate([project.key]),\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleProjectKeyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectKey = event.currentTarget.value || '';\n    const projectKeyError = this.validateKey(projectKey);\n\n    this.setState(prevState => {\n      const projectName = prevState.projectNameChanged ? prevState.projectName : projectKey;\n      return {\n        projectKey,\n        projectKeyError,\n        projectName,\n        projectNameError: this.validateName(projectName),\n        touched: true,\n        validating: projectKeyError === undefined\n      };\n    });\n\n    if (projectKeyError === undefined) {\n      this.checkFreeKey(projectKey);\n    }\n  };\n\n  handleProjectNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectName = event.currentTarget.value;\n    this.setState({\n      projectName,\n      projectNameChanged: true,\n      projectNameError: this.validateName(projectName)\n    });\n  };\n\n  validateKey = (projectKey: string) => {\n    const result = validateProjectKey(projectKey);\n    return result === ProjectKeyValidationResult.Valid\n      ? undefined\n      : translate('onboarding.create_project.project_key.error', result);\n  };\n\n  validateName = (projectName: string) => {\n    if (projectName.length === 0) {\n      return translate('onboarding.create_project.display_name.error.empty');\n    } else if (projectName.length > PROJECT_NAME_MAX_LEN) {\n      return translate('onboarding.create_project.display_name.error.too_long');\n    }\n    return undefined;\n  };\n\n  render() {\n    const {\n      projectKey,\n      projectKeyError,\n      projectName,\n      projectNameError,\n      submitting,\n      touched,\n      validating\n    } = this.state;\n    const projectNameIsInvalid = touched && projectNameError !== undefined;\n    const projectNameIsValid = touched && projectNameError === undefined;\n\n    return (\n      <>\n        <CreateProjectPageHeader title={translate('onboarding.create_project.setup_manually')} />\n\n        <div className=\"create-project-manual\">\n          <div className=\"flex-1 huge-spacer-right\">\n            <form className=\"manual-project-create\" onSubmit={this.handleFormSubmit}>\n              <ProjectKeyInput\n                error={projectKeyError}\n                help={translate('onboarding.create_project.project_key.help')}\n                label={translate('onboarding.create_project.project_key')}\n                onProjectKeyChange={this.handleProjectKeyChange}\n                projectKey={projectKey}\n                touched={touched}\n                validating={validating}\n              />\n\n              <ValidationInput\n                className=\"form-field\"\n                description={translate('onboarding.create_project.display_name.description')}\n                error={projectNameError}\n                help={translate('onboarding.create_project.display_name.help')}\n                id=\"project-name\"\n                isInvalid={projectNameIsInvalid}\n                isValid={projectNameIsValid}\n                label={translate('onboarding.create_project.display_name')}\n                required={true}>\n                <input\n                  className={classNames('input-super-large', {\n                    'is-invalid': projectNameIsInvalid,\n                    'is-valid': projectNameIsValid\n                  })}\n                  id=\"project-name\"\n                  maxLength={PROJECT_NAME_MAX_LEN}\n                  minLength={1}\n                  onChange={this.handleProjectNameChange}\n                  type=\"text\"\n                  value={projectName}\n                />\n              </ValidationInput>\n\n              <SubmitButton disabled={!this.canSubmit(this.state) || submitting}>\n                {translate('set_up')}\n              </SubmitButton>\n              <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getAlmSettings } from '../../../api/alm-settings';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withAppState } from '../../../components/hoc/withAppState';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport AzureProjectCreate from './AzureProjectCreate';\nimport BitbucketProjectCreate from './BitbucketProjectCreate';\nimport CreateProjectModeSelection from './CreateProjectModeSelection';\nimport GitHubProjectCreate from './GitHubProjectCreate';\nimport GitlabProjectCreate from './GitlabProjectCreate';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\nimport { CreateProjectModes } from './types';\n\ninterface Props extends Pick<WithRouterProps, 'router' | 'location'> {\n  appState: Pick<T.AppState, 'canAdmin'>;\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  azureSettings: AlmSettingsInstance[];\n  bitbucketSettings: AlmSettingsInstance[];\n  githubSettings: AlmSettingsInstance[];\n  gitlabSettings: AlmSettingsInstance[];\n  loading: boolean;\n}\n\nexport class CreateProjectPage extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    azureSettings: [],\n    bitbucketSettings: [],\n    githubSettings: [],\n    gitlabSettings: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchAlmBindings();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchAlmBindings = () => {\n    this.setState({ loading: true });\n    getAlmSettings()\n      .then(almSettings => {\n        if (this.mounted) {\n          this.setState({\n            azureSettings: almSettings.filter(s => s.alm === AlmKeys.Azure),\n            bitbucketSettings: almSettings.filter(s => s.alm === AlmKeys.BitbucketServer),\n            githubSettings: almSettings.filter(s => s.alm === AlmKeys.GitHub),\n            gitlabSettings: almSettings.filter(s => s.alm === AlmKeys.GitLab),\n            loading: false\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  handleModeSelect = (mode: CreateProjectModes) => {\n    const { router, location } = this.props;\n    router.push({\n      pathname: location.pathname,\n      query: { mode }\n    });\n  };\n\n  handleProjectCreate = (projectKeys: string[]) => {\n    if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  renderForm(mode?: CreateProjectModes) {\n    const {\n      appState: { canAdmin },\n      location,\n      router\n    } = this.props;\n    const {\n      azureSettings,\n      bitbucketSettings,\n      githubSettings,\n      gitlabSettings,\n      loading\n    } = this.state;\n\n    switch (mode) {\n      case CreateProjectModes.AzureDevOps: {\n        return (\n          <AzureProjectCreate\n            canAdmin={!!canAdmin}\n            loadingBindings={loading}\n            location={location}\n            onProjectCreate={this.handleProjectCreate}\n            router={router}\n            settings={azureSettings}\n          />\n        );\n      }\n      case CreateProjectModes.BitbucketServer: {\n        return (\n          <BitbucketProjectCreate\n            canAdmin={!!canAdmin}\n            bitbucketSettings={bitbucketSettings}\n            loadingBindings={loading}\n            location={location}\n            onProjectCreate={this.handleProjectCreate}\n          />\n        );\n      }\n      case CreateProjectModes.GitHub: {\n        return (\n          <GitHubProjectCreate\n            canAdmin={!!canAdmin}\n            loadingBindings={loading}\n            location={location}\n            onProjectCreate={this.handleProjectCreate}\n            router={router}\n            settings={githubSettings}\n          />\n        );\n      }\n      case CreateProjectModes.GitLab: {\n        return (\n          <GitlabProjectCreate\n            canAdmin={!!canAdmin}\n            loadingBindings={loading}\n            location={location}\n            onProjectCreate={this.handleProjectCreate}\n            router={router}\n            settings={gitlabSettings}\n          />\n        );\n      }\n      case CreateProjectModes.Manual: {\n        return <ManualProjectCreate onProjectCreate={this.handleProjectCreate} />;\n      }\n      default: {\n        const almCounts = {\n          [AlmKeys.Azure]: azureSettings.length,\n          [AlmKeys.BitbucketServer]: bitbucketSettings.length,\n          [AlmKeys.GitHub]: githubSettings.length,\n          [AlmKeys.GitLab]: gitlabSettings.length\n        };\n        return (\n          <CreateProjectModeSelection\n            almCounts={almCounts}\n            loadingBindings={loading}\n            onSelectMode={this.handleModeSelect}\n          />\n        );\n      }\n    }\n  }\n\n  render() {\n    const { location } = this.props;\n    const mode: CreateProjectModes | undefined = location.query?.mode;\n\n    return (\n      <>\n        <Helmet title={translate('my_account.create_new.TRK')} titleTemplate=\"%s\" />\n        <A11ySkipTarget anchor=\"create_project_main\" />\n        <div className=\"page page-limited huge-spacer-bottom position-relative\" id=\"create-project\">\n          {this.renderForm(mode)}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default whenLoggedIn(withAppState(CreateProjectPage));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport { isWebUri } from 'valid-url';\n\nexport interface DocumentationTooltipProps {\n  children?: React.ReactNode;\n  className?: string;\n  content?: React.ReactNode;\n  links?: Array<{ href: string; label: string; inPlace?: boolean }>;\n  title?: string;\n}\n\nexport default function DocumentationTooltip(props: DocumentationTooltipProps) {\n  const { className, content, links, title } = props;\n\n  return (\n    <HelpTooltip\n      className={className}\n      overlay={\n        <div className=\"big-padded-top big-padded-bottom\">\n          {title && (\n            <div className=\"spacer-bottom\">\n              <strong>{title}</strong>\n            </div>\n          )}\n\n          {content && <p>{content}</p>}\n\n          {links && (\n            <>\n              <hr className=\"big-spacer-top big-spacer-bottom\" />\n\n              {links.map(({ href, label, inPlace }) => (\n                <div className=\"little-spacer-bottom\" key={label}>\n                  {inPlace ? (\n                    <Link to={href}>\n                      <span>{label}</span>\n                    </Link>\n                  ) : (\n                    <a\n                      className=\"display-inline-flex-center link-with-icon\"\n                      href={href}\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\">\n                      {isWebUri(href) && <DetachIcon size={14} className=\"spacer-right\" />}\n                      <span>{label}</span>\n                    </a>\n                  )}\n                </div>\n              ))}\n            </>\n          )}\n        </div>\n      }>\n      {props.children}\n    </HelpTooltip>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { get, getJSON, HttpStatus, parseError, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBindingParams,\n  BitbucketBindingDefinition,\n  BitbucketCloudBindingDefinition,\n  BitbucketCloudProjectAlmBindingParams,\n  BitbucketProjectAlmBindingParams,\n  GithubBindingDefinition,\n  GithubProjectAlmBindingParams,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBindingParams,\n  ProjectAlmBindingResponse\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getAlmDefinitionsNoCatch().catch(throwGlobalError);\n}\n\nexport function getAlmDefinitionsNoCatch(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions');\n}\n\nexport function getAlmSettings(project?: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project })\n    .then(({ almSettings }) => almSettings)\n    .catch(throwGlobalError);\n}\n\nexport function validateAlmSettings(key: string): Promise<string> {\n  return get('/api/alm_settings/validate', { key })\n    .then(() => {\n      return '';\n    })\n    .catch((response: Response) => {\n      if (response.status === HttpStatus.BadRequest) {\n        return parseError(response);\n      } else {\n        return throwGlobalError(response);\n      }\n    });\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketCloudConfiguration(data: BitbucketCloudBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucketcloud', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketCloudConfiguration(\n  data: BitbucketCloudBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucketcloud', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBindingResponse> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketCloudBinding(data: BitbucketCloudProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_bitbucketcloud_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const ALM_INTEGRATION = 'almintegration';\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n"],"sourceRoot":""}