{"version":3,"sources":["webpack:///./src/main/js/app/components/extensions/GlobalAdminPageExtension.tsx","webpack:///./src/main/js/app/components/SimpleContainer.tsx","webpack:///./src/main/js/app/components/NotFound.tsx","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/app/components/extensions/Extension.tsx"],"names":["state","adminPages","props","params","extensionKey","pluginKey","extension","find","p","key","withContainer","SimpleContainer","children","className","id","height","globalNavHeightRaw","NotFound","Container","defaultTitle","defer","to","librariesExposed","installScript","url","target","Promise","resolve","scriptTag","document","createElement","src","onload","getElementsByTagName","appendChild","getExtensionStart","fromCache","exposeLibraries","default","start","reject","handleStart","store","result","el","container","currentUser","intl","location","router","theme","baseUrl","l10nBundle","options","setState","extensionElement","stop","handleFailure","onFail","componentDidMount","this","startExtension","componentDidUpdate","prevProps","stopExtension","componentWillUnmount","then","undefined","render","title","name","ref","mapDispatchToProps","Extension"],"mappings":"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","file":"js/335.1613385090031.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../../store/rootReducer';\nimport NotFound from '../NotFound';\nimport Extension from './Extension';\n\ninterface Props {\n  adminPages: T.Extension[] | undefined;\n  params: { extensionKey: string; pluginKey: string };\n}\n\nfunction GlobalAdminPageExtension(props: Props) {\n  const { extensionKey, pluginKey } = props.params;\n  const extension = (props.adminPages || []).find(p => p.key === `${pluginKey}/${extensionKey}`);\n  return extension ? <Extension extension={extension} /> : <NotFound withContainer={false} />;\n}\n\nconst mapStateToProps = (state: Store) => ({\n  adminPages: getAppState(state).adminPages\n});\n\nexport default connect(mapStateToProps)(GlobalAdminPageExtension);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport NavBar from 'sonar-ui-common/components/ui/NavBar';\nimport { rawSizes } from '../theme';\nimport GlobalFooterContainer from './GlobalFooterContainer';\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nexport default function SimpleContainer({ children }: Props) {\n  return (\n    <div className=\"global-container\">\n      <div className=\"page-wrapper\" id=\"container\">\n        <NavBar className=\"navbar-global\" height={rawSizes.globalNavHeightRaw} />\n        {children}\n      </div>\n      <GlobalFooterContainer />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport SimpleContainer from './SimpleContainer';\n\ninterface Props {\n  withContainer?: boolean;\n}\n\nexport default function NotFound({ withContainer = true }: Props) {\n  const Container = withContainer ? SimpleContainer : React.Fragment;\n  return (\n    <Container>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('page_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('address_mistyped_or_page_moved')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    librariesExposed = true;\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport { getCurrentL10nBundle } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/system';\nimport { addGlobalErrorMessage } from '../../../store/globalMessages';\nimport { getCurrentUser, Store } from '../../../store/rootReducer';\nimport { ExtensionStartMethod } from '../../../types/extension';\nimport * as theme from '../../theme';\nimport getStore from '../../utils/getStore';\n\ninterface Props extends InjectedIntlProps {\n  currentUser: T.CurrentUser;\n  extension: T.Extension;\n  location: Location;\n  onFail: (message: string) => void;\n  options?: T.Dict<any>;\n  router: Router;\n}\n\ninterface State {\n  extensionElement?: React.ReactElement<any>;\n}\n\nexport class Extension extends React.PureComponent<Props, State> {\n  container?: HTMLElement | null;\n  stop?: Function;\n  state: State = {};\n\n  componentDidMount() {\n    this.startExtension();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.extension !== this.props.extension) {\n      this.stopExtension();\n      this.startExtension();\n    } else if (prevProps.location !== this.props.location) {\n      this.startExtension();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stopExtension();\n  }\n\n  handleStart = (start: ExtensionStartMethod) => {\n    const store = getStore();\n    const result = start({\n      store,\n      el: this.container,\n      currentUser: this.props.currentUser,\n      intl: this.props.intl,\n      location: this.props.location,\n      router: this.props.router,\n      theme,\n      baseUrl: getBaseUrl(),\n      l10nBundle: getCurrentL10nBundle(),\n      ...this.props.options\n    });\n\n    if (result) {\n      if (React.isValidElement(result)) {\n        this.setState({ extensionElement: result });\n      } else if (typeof result === 'function') {\n        this.stop = result;\n      }\n    }\n  };\n\n  handleFailure = () => {\n    this.props.onFail(translate('page_extension_failed'));\n  };\n\n  startExtension() {\n    getExtensionStart(this.props.extension.key).then(this.handleStart, this.handleFailure);\n  }\n\n  stopExtension() {\n    if (this.stop) {\n      this.stop();\n      this.stop = undefined;\n    } else {\n      this.setState({ extensionElement: undefined });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Helmet title={this.props.extension.name} />\n        {this.state.extensionElement ? (\n          this.state.extensionElement\n        ) : (\n          <div ref={container => (this.container = container)} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({ currentUser: getCurrentUser(state) });\nconst mapDispatchToProps = { onFail: addGlobalErrorMessage };\n\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(Extension)));\n"],"sourceRoot":""}