{"version":3,"sources":["webpack:///./src/main/js/app/components/extensions/exposeLibraries.ts","webpack:///./src/main/js/api/favorites.ts","webpack:///./src/main/js/components/controls/Favorite.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/app/components/SimpleContainer.tsx","webpack:///./src/main/js/app/components/NotFound.tsx","webpack:///./src/main/js/components/ui/CoverageRating.tsx","webpack:///./src/main/js/components/icons/BranchLikeIcon.tsx","webpack:///./src/main/js/helpers/security-standard.ts","webpack:///./src/main/js/components/controls/HomePageSelect.tsx"],"names":["global","window","SonarRequest","request","get","getJSON","getText","post","postJSON","postJSONBody","throwGlobalError","addGlobalSuccessMessage","t","tp","Object","defineProperty","console","warn","getBranchLikeQuery","isBranch","isMainBranch","isPullRequest","getStandards","renderCWECategory","renderOwaspTop10Category","renderSansTop25Category","renderSonarSourceSecurityCategory","getComponentIssuesUrl","getComponentSecurityHotspotsUrl","getRulesUrl","formatMeasure","A11ySkipTarget","ActionsDropdown","ActionsDropdownItem","Alert","AlertErrorIcon","AlertSuccessIcon","AlertWarnIcon","BranchIcon","Button","Checkbox","CheckIcon","ClearIcon","ConfirmButton","CoverageRating","DateFormatter","DateFromNow","DateTimeFormatter","DeferredSpinner","DetachIcon","Dropdown","DropdownIcon","DuplicationsRating","EditButton","Favorite","FormattedMessage","HelpIcon","HelpTooltip","HomePageSelect","Level","ListFooter","LockIcon","LongLivingBranchIcon","Modal","NotFound","PlusCircleIcon","PullRequestIcon","QualifierIcon","RadioToggle","Rating","ReloadButton","ResetButtonLink","SearchBox","SearchSelect","SecurityHotspotIcon","Select","SelectList","SimpleModal","SubmitButton","Suggestions","Tooltip","VulnerabilityIcon","addFavorite","component","removeFavorite","props","mounted","toggleFavorite","newFavorite","state","favorite","then","setState","handleFavorite","componentDidMount","this","componentDidUpdate","_prevProps","prevState","componentWillUnmount","render","className","qualifier","suggestions","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","prevProps","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","key","label","weight","anchor","id","message","dispatch","SimpleContainer","children","height","globalNavHeightRaw","withContainer","Container","defaultTitle","defer","to","DonutChart","SIZE_TO_WIDTH_MAPPING","small","normal","big","huge","SIZE_TO_THICKNESS_MAPPING","muted","size","value","data","fill","padAngle","numberValue","Number","gray71","green","barBackgroundColor","lineCoverageRed","width","thickness","BranchLikeIcon","branchLike","x","standards","category","record","cwe","title","withPrefix","owaspTop10","addPrefix","toUpperCase","sansTop25","sonarsourceSecurity","prefix","DEFAULT_HOMEPAGE","type","handleClick","setHomePage","currentPage","handleReset","currentUser","homepage","isChecked","undefined","isSameHomePage","isDefault","tooltip","overlay","filled","onClick","mapDispatchToProps","a","b","branch"],"mappings":"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","file":"js/314.1613385090031.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { FormattedMessage } from 'react-intl';\nimport ActionsDropdown, {\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport {\n  Button,\n  EditButton,\n  ResetButtonLink,\n  SubmitButton\n} from 'sonar-ui-common/components/controls/buttons';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport ConfirmButton from 'sonar-ui-common/components/controls/ConfirmButton';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport RadioToggle from 'sonar-ui-common/components/controls/RadioToggle';\nimport ReloadButton from 'sonar-ui-common/components/controls/ReloadButton';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport SearchSelect from 'sonar-ui-common/components/controls/SearchSelect';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport SelectList from 'sonar-ui-common/components/controls/SelectList';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport AlertWarnIcon from 'sonar-ui-common/components/icons/AlertWarnIcon';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport ClearIcon from 'sonar-ui-common/components/icons/ClearIcon';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport HelpIcon from 'sonar-ui-common/components/icons/HelpIcon';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport PlusCircleIcon from 'sonar-ui-common/components/icons/PlusCircleIcon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport SecurityHotspotIcon from 'sonar-ui-common/components/icons/SecurityHotspotIcon';\nimport VulnerabilityIcon from 'sonar-ui-common/components/icons/VulnerabilityIcon';\nimport DateFormatter from 'sonar-ui-common/components/intl/DateFormatter';\nimport DateFromNow from 'sonar-ui-common/components/intl/DateFromNow';\nimport DateTimeFormatter from 'sonar-ui-common/components/intl/DateTimeFormatter';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport DuplicationsRating from 'sonar-ui-common/components/ui/DuplicationsRating';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport Rating from 'sonar-ui-common/components/ui/Rating';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport {\n  get,\n  getJSON,\n  getText,\n  post,\n  postJSON,\n  postJSONBody,\n  request\n} from 'sonar-ui-common/helpers/request';\nimport NotFound from '../../../app/components/NotFound';\nimport Favorite from '../../../components/controls/Favorite';\nimport HomePageSelect from '../../../components/controls/HomePageSelect';\nimport BranchLikeIcon from '../../../components/icons/BranchLikeIcon';\nimport CoverageRating from '../../../components/ui/CoverageRating';\nimport {\n  getBranchLikeQuery,\n  isBranch,\n  isMainBranch,\n  isPullRequest\n} from '../../../helpers/branch-like';\nimport * as measures from '../../../helpers/measures';\nimport {\n  getStandards,\n  renderCWECategory,\n  renderOwaspTop10Category,\n  renderSansTop25Category,\n  renderSonarSourceSecurityCategory\n} from '../../../helpers/security-standard';\nimport {\n  getComponentIssuesUrl,\n  getComponentSecurityHotspotsUrl,\n  getRulesUrl\n} from '../../../helpers/urls';\nimport addGlobalSuccessMessage from '../../utils/addGlobalSuccessMessage';\nimport throwGlobalError from '../../utils/throwGlobalError';\nimport A11ySkipTarget from '../a11y/A11ySkipTarget';\nimport Suggestions from '../embed-docs-modal/Suggestions';\n\nconst exposeLibraries = () => {\n  const global = window as any;\n\n  global.SonarRequest = {\n    request,\n    get,\n    getJSON,\n    getText,\n    post,\n    postJSON,\n    postJSONBody,\n    throwGlobalError,\n    addGlobalSuccessMessage\n  };\n  global.t = translate;\n  global.tp = translateWithParameters;\n\n  /**\n   * @deprecated since SonarQube 8.7\n   */\n  Object.defineProperty(global, 'SonarHelpers', {\n    get: () => {\n      // eslint-disable-next-line no-console\n      console.warn('SonarHelpers usages are deprecated since SonarQube 8.7');\n      return {\n        getBranchLikeQuery,\n        isBranch,\n        isMainBranch,\n        isPullRequest,\n        getStandards,\n        renderCWECategory,\n        renderOwaspTop10Category,\n        renderSansTop25Category,\n        renderSonarSourceSecurityCategory,\n        getComponentIssuesUrl,\n        getComponentSecurityHotspotsUrl,\n        getRulesUrl\n      };\n    }\n  });\n\n  /**\n   * @deprecated since SonarQube 8.7\n   */\n  Object.defineProperty(global, 'SonarMeasures', {\n    get: () => {\n      // eslint-disable-next-line no-console\n      console.warn('SonarMeasures usages are deprecated since SonarQube 8.7');\n      return { ...measures, formatMeasure };\n    }\n  });\n\n  /**\n   * @deprecated since SonarQube 8.7\n   */\n  Object.defineProperty(global, 'SonarComponents', {\n    get: () => {\n      // eslint-disable-next-line no-console\n      console.warn('SonarComponents usages are deprecated since SonarQube 8.7');\n      return {\n        A11ySkipTarget,\n        ActionsDropdown,\n        ActionsDropdownItem,\n        Alert,\n        AlertErrorIcon,\n        AlertSuccessIcon,\n        AlertWarnIcon,\n        BranchIcon: BranchLikeIcon,\n        Button,\n        Checkbox,\n        CheckIcon,\n        ClearIcon,\n        ConfirmButton,\n        CoverageRating,\n        DateFormatter,\n        DateFromNow,\n        DateTimeFormatter,\n        DeferredSpinner,\n        DetachIcon,\n        Dropdown,\n        DropdownIcon,\n        DuplicationsRating,\n        EditButton,\n        Favorite,\n        FormattedMessage,\n        HelpIcon,\n        HelpTooltip,\n        HomePageSelect,\n        Level,\n        ListFooter,\n        LockIcon,\n        LongLivingBranchIcon: BranchIcon,\n        Modal,\n        NotFound,\n        PlusCircleIcon,\n        PullRequestIcon,\n        QualifierIcon,\n        RadioToggle,\n        Rating,\n        ReloadButton,\n        ResetButtonLink,\n        SearchBox,\n        SearchSelect,\n        SecurityHotspotIcon,\n        Select,\n        SelectList,\n        SimpleModal,\n        SubmitButton,\n        Suggestions,\n        Tooltip,\n        VulnerabilityIcon\n      };\n    }\n  });\n};\n\nexport default exposeLibraries;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\n\nexport function getFavorites(): Promise<any> {\n  return getJSON('/api/favorites/search');\n}\n\nexport function addFavorite(component: string): Promise<void> {\n  return post('/api/favorites/add', { component });\n}\n\nexport function removeFavorite(component: string): Promise<void> {\n  return post('/api/favorites/remove', { component });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport FavoriteButton from 'sonar-ui-common/components/controls/FavoriteButton';\nimport { addFavorite, removeFavorite } from '../../api/favorites';\n\ninterface Props {\n  className?: string;\n  component: string;\n  favorite: boolean;\n  qualifier: string;\n  handleFavorite?: (component: string, isFavorite: boolean) => void;\n}\n\ninterface State {\n  favorite: boolean;\n}\n\nexport default class Favorite extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      favorite: props.favorite\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.favorite !== this.props.favorite) {\n      this.setState({ favorite: this.props.favorite });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  toggleFavorite = () => {\n    const newFavorite = !this.state.favorite;\n    const apiMethod = newFavorite ? addFavorite : removeFavorite;\n\n    return apiMethod(this.props.component).then(() => {\n      if (this.mounted) {\n        this.setState({ favorite: newFavorite }, () => {\n          if (this.props.handleFavorite) {\n            this.props.handleFavorite(this.props.component, newFavorite);\n          }\n        });\n      }\n    });\n  };\n\n  render() {\n    const { className, qualifier } = this.props;\n    const { favorite } = this.state;\n\n    return (\n      <FavoriteButton\n        className={className}\n        favorite={favorite}\n        qualifier={qualifier}\n        toggleFavorite={this.toggleFavorite}\n      />\n    );\n  }\n}\n/*  */\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as globalMessages from '../../store/globalMessages';\nimport getStore from './getStore';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport NavBar from 'sonar-ui-common/components/ui/NavBar';\nimport { rawSizes } from '../theme';\nimport GlobalFooterContainer from './GlobalFooterContainer';\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nexport default function SimpleContainer({ children }: Props) {\n  return (\n    <div className=\"global-container\">\n      <div className=\"page-wrapper\" id=\"container\">\n        <NavBar className=\"navbar-global\" height={rawSizes.globalNavHeightRaw} />\n        {children}\n      </div>\n      <GlobalFooterContainer />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport SimpleContainer from './SimpleContainer';\n\ninterface Props {\n  withContainer?: boolean;\n}\n\nexport default function NotFound({ withContainer = true }: Props) {\n  const Container = withContainer ? SimpleContainer : React.Fragment;\n  return (\n    <Container>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('page_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('address_mistyped_or_page_moved')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { colors } from '../../app/theme';\n\nconst DonutChart = lazyLoadComponent(\n  () => import('sonar-ui-common/components/charts/DonutChart'),\n  'DonutChart'\n);\n\nconst SIZE_TO_WIDTH_MAPPING = { small: 16, normal: 24, big: 40, huge: 60 };\n\nconst SIZE_TO_THICKNESS_MAPPING = { small: 2, normal: 3, big: 3, huge: 4 };\n\nexport interface CoverageRatingProps {\n  muted?: boolean;\n  size?: 'small' | 'normal' | 'big' | 'huge';\n  value: number | string | null | undefined;\n}\n\nexport default function CoverageRating({\n  muted = false,\n  size = 'normal',\n  value\n}: CoverageRatingProps) {\n  let data = [{ value: 100, fill: '#ccc ' }];\n  let padAngle = 0;\n\n  if (value != null) {\n    const numberValue = Number(value);\n    data = [\n      { value: numberValue, fill: muted ? colors.gray71 : colors.green },\n      { value: 100 - numberValue, fill: muted ? colors.barBackgroundColor : colors.lineCoverageRed }\n    ];\n    if (numberValue !== 0 && numberValue < 100) {\n      padAngle = 0.1; // Same for all sizes, because it scales automatically\n    }\n  }\n\n  const width = SIZE_TO_WIDTH_MAPPING[size];\n  const thickness = SIZE_TO_THICKNESS_MAPPING[size];\n\n  return (\n    <DonutChart\n      data={data}\n      height={width}\n      padAngle={padAngle}\n      thickness={thickness}\n      width={width}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport { isPullRequest } from '../../helpers/branch-like';\nimport { BranchLike } from '../../types/branch-like';\n\nexport interface BranchLikeIconProps extends IconProps {\n  branchLike: BranchLike;\n}\n\nexport default function BranchLikeIcon({ branchLike, ...props }: BranchLikeIconProps) {\n  if (isPullRequest(branchLike)) {\n    return <PullRequestIcon {...props} />;\n  } else {\n    return <BranchIcon {...props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Standards } from '../types/security';\n\nexport function getStandards(): Promise<Standards> {\n  return import('./standards.json').then(x => x.default);\n}\n\nexport function renderCWECategory(standards: Standards, category: string): string {\n  const record = standards.cwe[category];\n  if (!record) {\n    return `CWE-${category}`;\n  } else if (category === 'unknown') {\n    return record.title;\n  } else {\n    return `CWE-${category} - ${record.title}`;\n  }\n}\n\nexport function renderOwaspTop10Category(\n  standards: Standards,\n  category: string,\n  withPrefix = false\n): string {\n  const record = standards.owaspTop10[category];\n  if (!record) {\n    return addPrefix(category.toUpperCase(), 'OWASP', withPrefix);\n  } else {\n    return addPrefix(`${category.toUpperCase()} - ${record.title}`, 'OWASP', withPrefix);\n  }\n}\n\nexport function renderSansTop25Category(\n  standards: Standards,\n  category: string,\n  withPrefix = false\n): string {\n  const record = standards.sansTop25[category];\n  return addPrefix(record ? record.title : category, 'SANS', withPrefix);\n}\n\nexport function renderSonarSourceSecurityCategory(\n  standards: Standards,\n  category: string,\n  withPrefix = false\n): string {\n  const record = standards.sonarsourceSecurity[category];\n  if (!record) {\n    return addPrefix(category.toUpperCase(), 'SONAR', withPrefix);\n  } else if (category === 'others') {\n    return record.title;\n  } else {\n    return addPrefix(record.title, 'SONAR', withPrefix);\n  }\n}\n\nfunction addPrefix(title: string, prefix: string, withPrefix: boolean) {\n  return withPrefix ? `${prefix} ${title}` : title;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport HomeIcon from 'sonar-ui-common/components/icons/HomeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getCurrentUser, Store } from '../../store/rootReducer';\nimport { setHomePage } from '../../store/users';\n\ninterface StateProps {\n  currentUser: T.CurrentUser;\n}\n\ninterface DispatchProps {\n  setHomePage: (homepage: T.HomePage) => void;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  className?: string;\n  currentPage: T.HomePage;\n}\n\nexport const DEFAULT_HOMEPAGE: T.HomePage = { type: 'PROJECTS' };\n\nexport class HomePageSelect extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.setHomePage(this.props.currentPage);\n  };\n\n  handleReset = () => {\n    this.props.setHomePage(DEFAULT_HOMEPAGE);\n  };\n\n  render() {\n    const { currentPage, currentUser } = this.props;\n\n    if (!isLoggedIn(currentUser)) {\n      return null;\n    }\n\n    const { homepage } = currentUser;\n    const isChecked = homepage !== undefined && isSameHomePage(homepage, currentPage);\n    const isDefault = isChecked && isSameHomePage(currentPage, DEFAULT_HOMEPAGE);\n    const tooltip = isChecked\n      ? translate(isDefault ? 'homepage.current.is_default' : 'homepage.current')\n      : translate('homepage.check');\n\n    return (\n      <Tooltip overlay={tooltip}>\n        {isDefault ? (\n          <span\n            aria-label={tooltip}\n            className={classNames('display-inline-block', this.props.className)}>\n            <HomeIcon filled={isChecked} />\n          </span>\n        ) : (\n          <ButtonLink\n            aria-label={tooltip}\n            className={classNames('link-no-underline', 'set-homepage-link', this.props.className)}\n            onClick={isChecked ? this.handleReset : this.handleClick}>\n            <HomeIcon filled={isChecked} />\n          </ButtonLink>\n        )}\n      </Tooltip>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  currentUser: getCurrentUser(state)\n});\n\nconst mapDispatchToProps: DispatchProps = { setHomePage };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePageSelect);\n\nfunction isSameHomePage(a: T.HomePage, b: T.HomePage) {\n  return (\n    a.type === b.type &&\n    (a as any).branch === (b as any).branch &&\n    (a as any).component === (b as any).component\n  );\n}\n"],"sourceRoot":""}