{"version":3,"sources":["webpack:///./src/main/js/app/components/PageTracker.tsx","webpack:///./src/main/js/helpers/analytics.js","webpack:///./src/main/js/helpers/extensions.ts"],"names":["state","trackPage","props","location","trackingIdGTM","lastLocation","dataLayer","window","locationChanged","pathname","webAnalyticsPageChange","setState","setTimeout","push","event","componentDidMount","this","webAnalytics","render","defaultTitle","defer","onChangeClientState","undefined","children","value","webAnalyticsJsPath","PageTracker","module","exports","gtm","id","w","d","s","l","i","Date","getTime","f","getElementsByTagName","j","createElement","async","src","parentNode","insertBefore","document","librariesExposed","installScript","url","target","Promise","resolve","scriptTag","onload","appendChild","getExtensionStart","key","fromCache","exposeLibraries","default","start","reject"],"mappings":"8iBAuCA,yE,OACE,EAAAA,MAAe,GAcf,EAAAC,UAAY,WACJ,MAA8B,EAAKC,MAAjCC,EAAQ,WAAEC,EAAa,gBACvBC,EAAiB,EAAKL,MAAV,aACZM,EAAcC,OAAL,UACXC,EAAkBL,EAASM,WAAaJ,EACxCK,EAAyB,cAE3BA,GAA0BF,GAC5B,EAAKG,SAAS,CAAEN,aAAcF,EAASM,WACvCG,YAAW,WAAM,OAAAF,EAAuBP,EAAvB,YAA2C,MACnDG,GAAaA,EAAUO,MAAQT,GAAuC,MAAtBD,EAASM,WAClE,EAAKE,SAAS,CAAEN,aAAcF,EAASM,WACvCG,YAAW,WAAM,OAAAN,EAAUO,KAAK,CAAEC,MAAjB,iBAAyC,O,EAgBhE,OA3CiC,OAG/B,YAAAC,kBAAA,WACQ,MAAkCC,KAAKd,MAArCE,EAAa,gBAAEa,EAAY,eAE/BA,IAAiB,eACnB,YAAcA,EAAc,QAG1Bb,GACF,cAAIA,IAoBR,YAAAc,OAAA,WACQ,MAAkCF,KAAKd,MAArCE,EAAa,gBAAEa,EAAY,eAEnC,OACE,gBAAC,IAAM,CACLE,aAAc,wBACdC,OAAO,EACPC,oBAAqBjB,GAAiBa,EAAeD,KAAKf,eAAYqB,GACrEN,KAAKd,MAAMqB,WAIpB,EA3CA,CAAiC,aAqDlB,sBAAW,aARF,SAACvB,GACvB,IAAMI,EAAgB,gCAAsBJ,EAAO,kCACnD,MAAO,CACLI,cAAeA,GAAiBA,EAAcoB,MAC9CP,aAAc,sBAAYjB,GAAOyB,sBAIX,CAAyBC,K,kCCnEnDC,EAAOC,QAAU,CAAEC,IAFP,SAAAC,GAAM,OAAC,SAASC,EAAEC,EAAEC,EAAEC,EAAEC,GAAGJ,EAAEG,GAAGH,EAAEG,IAAI,GAAGH,EAAEG,GAAGrB,KAAK,CAAC,aAAa,IAAIuB,MAAOC,UAAUvB,MAAM,WAAW,IAAMwB,EAAEN,EAAEO,qBAAqBN,GAAG,GAAIO,EAAER,EAAES,cAAcR,GAAgCO,EAAEE,OAAM,EAAKF,EAAEG,IAAK,8CAA8CR,EAAKG,EAAEM,WAAWC,aAAaL,EAAEF,GAA3R,CAAgS/B,OAAOuC,SAAS,SAAS,YAA1T,M,u8CCDdC,GAAmB,EAEjB,SAAUC,EAAcC,EAAaC,GACzC,YADyC,IAAAA,MAAA,QAClC,IAAIC,SAAQ,SAAAC,GACjB,IAAMC,EAAYP,SAASL,cAAc,UACzCY,EAAUV,IAAM,GAAG,uBAAeM,EAClCI,EAAUC,OAASF,EACnBN,SAASP,qBAAqBW,GAAQ,GAAGK,YAAYF,MAInD,SAAgBG,EAAkBC,G,kGAEtC,OADMC,EAAY,YAAsBD,IAEtC,GAAON,QAAQC,QAAQM,IAGpBX,EAAD,OACFA,GAAmB,EAEM,GAAM,gF,QAAzBY,EAAmB,SAA8DC,W,iBAIzF,SAAMZ,EAAc,WAAWS,EAAG,Q,OAGlC,OAHA,UAEMI,EAAQ,YAAsBJ,IAElC,GAAOI,GAET,GAAOV,QAAQW","file":"js/16.1613385090031.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { Location, withRouter } from '../../components/hoc/withRouter';\nimport { gtm } from '../../helpers/analytics';\nimport { installScript } from '../../helpers/extensions';\nimport { getWebAnalyticsPageHandlerFromCache } from '../../helpers/extensionsHandler';\nimport { getInstance } from '../../helpers/system';\nimport { getAppState, getGlobalSettingValue, Store } from '../../store/rootReducer';\n\ninterface Props {\n  location: Location;\n  trackingIdGTM?: string;\n  webAnalytics?: string;\n}\n\ninterface State {\n  lastLocation?: string;\n}\n\nexport class PageTracker extends React.Component<Props, State> {\n  state: State = {};\n\n  componentDidMount() {\n    const { trackingIdGTM, webAnalytics } = this.props;\n\n    if (webAnalytics && !getWebAnalyticsPageHandlerFromCache()) {\n      installScript(webAnalytics, 'head');\n    }\n\n    if (trackingIdGTM) {\n      gtm(trackingIdGTM);\n    }\n  }\n\n  trackPage = () => {\n    const { location, trackingIdGTM } = this.props;\n    const { lastLocation } = this.state;\n    const { dataLayer } = window as any;\n    const locationChanged = location.pathname !== lastLocation;\n    const webAnalyticsPageChange = getWebAnalyticsPageHandlerFromCache();\n\n    if (webAnalyticsPageChange && locationChanged) {\n      this.setState({ lastLocation: location.pathname });\n      setTimeout(() => webAnalyticsPageChange(location.pathname), 500);\n    } else if (dataLayer && dataLayer.push && trackingIdGTM && location.pathname !== '/') {\n      this.setState({ lastLocation: location.pathname });\n      setTimeout(() => dataLayer.push({ event: 'render-end' }), 500);\n    }\n  };\n\n  render() {\n    const { trackingIdGTM, webAnalytics } = this.props;\n\n    return (\n      <Helmet\n        defaultTitle={getInstance()}\n        defer={false}\n        onChangeClientState={trackingIdGTM || webAnalytics ? this.trackPage : undefined}>\n        {this.props.children}\n      </Helmet>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => {\n  const trackingIdGTM = getGlobalSettingValue(state, 'sonar.analytics.gtm.trackingId');\n  return {\n    trackingIdGTM: trackingIdGTM && trackingIdGTM.value,\n    webAnalytics: getAppState(state).webAnalyticsJsPath\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(PageTracker));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// The body of the `gtm` function comes from Google Tag Manager docs; let's keep it like it was written.\n// @ts-ignore\n// prettier-ignore\n// eslint-disable-next-line\nconst gtm = id => (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});const f=d.getElementsByTagName(s)[0], j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src= 'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);}(window,document,'script','dataLayer',id));\n\nmodule.exports = { gtm };\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    librariesExposed = true;\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n"],"sourceRoot":""}